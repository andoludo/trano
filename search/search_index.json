{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Trano","text":"Trano <p>Trano is an innovative Python package that automates the creation of complex Building Energy Simulation (BES) Modelica models from simplified information contained in widely used data formats like YAML, JSON, or RDF. Unlike traditional tools that directly convert BIM to BES, Trano introduces an intermediate step, paving the way for seamless integration with IFC translators.  </p> <p>Trano is Modelica library agnostic but is natively designed to work with: \u2705 Validated detailed Modelica libraries (e.g., Buildings, IDEAS,...) \u2705 Reduced-order models (e.g., AIXLIB, ISO13790,...) \u2705 your library... </p>"},{"location":"#key-features","title":"\u2728 Key Features","text":""},{"location":"#built-for-open-source-bes","title":"\ud83d\udee0\ufe0f Built for Open-Source BES","text":"<ul> <li>Designed with widespread adoption in mind.</li> <li>Optimized for OpenModelica, but also compatible with Dymola.</li> </ul>"},{"location":"#full-thermal-electrical-modeling","title":"\ud83d\udd25 Full Thermal &amp; Electrical Modeling","text":"<ul> <li>Generates both thermal and electrical models.</li> <li>Supports building envelope, systems, and electricity.</li> <li>Models:</li> <li>Envelope (geometry &amp; materials) \ud83c\udfe2  </li> <li>HVAC systems (emission, hydronic distribution, boilers) \u2744\ufe0f\ud83d\udd25  </li> <li>Electrical components (PV systems, electrical loads) \u26a1  </li> </ul>"},{"location":"#easy-to-use-modify","title":"\ud83c\udfa8 Easy to Use &amp; Modify","text":"<ul> <li>Generates graphical representations of components &amp; connections \ud83c\udfad. </li> <li>Fully modular design for seamless modifications:</li> <li>Envelope \ud83c\udfe0</li> <li>Emission \ud83d\udca8</li> <li>Hydronic Distribution \ud83d\udeb0</li> <li>Production &amp; Electricity \u26a1  </li> </ul> <p>\ud83d\ude80 With Trano, creating and modifying detailed BES models has never been easier! </p>"},{"location":"explanation/","title":"\ud83d\ude80 Stay Tuned!","text":"<p>Hey there! I'm working on something exciting. Stay tuned for updates! \ud83d\ude0a</p>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#python-package","title":"Python package","text":"<p>Warning</p> <p>Trano requires python 3.9 or higher and docker to be installed on the system.</p> <p>Trano is a Python package that can be installed via pip.</p> <pre><code>pip install trano\n</code></pre> <p>Trano can also be utilized with Poetry.</p> <pre><code>poetry add trano\n</code></pre> <p>The Python package enables the generation of a Modelica model from YAML configuration input. To simulate the model, Docker must be installed on the system.</p>"},{"location":"getting-started/installation/#docker","title":"Docker","text":"<p>To simulate the Modelica model, you must install Docker on your system. You can find installation instructions on the official Docker website.</p>"},{"location":"how-to%20guides/","title":"\ud83d\ude80 Stay Tuned!","text":"<p>Hey there! I'm working on something exciting. Stay tuned for updates! \ud83d\ude0a</p>"},{"location":"reference/components/","title":"\ud83d\ude80 Stay Tuned!","text":"<p>Hey there! I'm working on something exciting. Stay tuned for updates! \ud83d\ude0a</p>"},{"location":"reference/parameters/","title":"\ud83d\ude80 Stay Tuned!","text":"<p>Hey there! I'm working on something exciting. Stay tuned for updates! \ud83d\ude0a</p>"},{"location":"tutorials/first_model_and_simulation/","title":"First model and simulation","text":"<p>This tutorial will guide you in creating and simulating your first Building Energy Simulation model in Modelica using the Trano library. All you need is a configuration file and a few lines of code. This introductory tutorial demonstrates the simplicity of running building energy simulations with Trano, showcasing how to browse and modify the model using OpenModelica. Alternatively, you can run the simulation directly through Trano with the official OpenModelica Docker image. Additionally, Trano features automatic report generation for key parameters.</p>"},{"location":"tutorials/first_model_and_simulation/#input-configuration-file","title":"Input configuration file","text":"<p>The following file describes a simple configuration for a one-zone building, focusing solely on the building envelope.</p> <p>The described building configuration appears to be a modest residential structure or small commercial building. It features:</p> <ol> <li> <p>Material Composition: The walls are constructed with three layers of material, each having the same thermal properties (thermal conductivity of 0.035 W/m\u00b7K, density of 2000 kg/m\u00b3, and specific heat capacity of 1000 J/kg\u00b7K), indicating good insulation characteristics. </p> </li> <li> <p>Glazing: The building includes insulated glazing units made of two layers of glass with an air gap, enhancing thermal performance with a thermal conductivity of 1.0 W/m\u00b7K in the glass and a low conductivity air layer.</p> </li> <li> <p>Space and Dimensions: It offers a floor area of 100 m\u00b2 and an average room height of 2.5 m, suggesting a standard layout for living or office space.</p> </li> <li> <p>Walls and Windows: The external walls have surfaces oriented towards the south (azimuth of 180\u00b0) and collectively form a well-insulated envelope. There is a single window with dimensions of 1 m\u00b2, also oriented southward, allowing natural light while maintaining energy efficiency.</p> </li> </ol> <p>Overall, the building is designed for energy efficiency, potentially suitable for residential use, with an emphasis on thermal comfort.</p> <pre><code>material:\n  - id: MATERIAL:001\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:002\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:003\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n\nconstructions:\n  - id: CONSTRUCTION:001\n    layers:\n      - material: MATERIAL:001\n        thickness: 0.1\n      - material: MATERIAL:002\n        thickness: 0.1\n      - material: MATERIAL:003\n        thickness: 0.1\nglass_material:\n  - density: 2500.0\n    id: GLASS:001\n    longwave_emissivity: 0.84\n    shortwave_emissivity: 0.67\n    specific_heat_capacity: 840.0\n    thermal_conductivity: 1.0\ngas:\n  - density: 1.2\n    id: AIR:001\n    longwave_emissivity: 0.0\n    shortwave_emissivity: 0.0\n    specific_heat_capacity: 1006.0\n    thermal_conductivity: 0.0256\nglazings:\n- id: INS2AR2020:001\n  layers:\n  - glass: GLASS:001\n    thickness: 0.006\n  - gas: AIR:001\n    thickness: 0.016\n  - glass: GLASS:001\n    thickness: 0.006\nspaces:\n  - parameters:\n      floor_area: 100.0\n      average_room_height: 2.5\n    external_boundaries:\n      external_walls:\n        - surface: 100.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 100.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 200.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 1.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 1.0\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 1.0\n          height: 1.0\n</code></pre>"},{"location":"tutorials/first_model_and_simulation/#generate-modelica-model","title":"Generate Modelica model","text":"Test tutorials<pre><code>    from trano.main import create_model\n\n    create_model(\n        path_to_yaml_configuration_folder / \"first_model.yaml\",\n    )\n</code></pre>"},{"location":"tutorials/first_model_and_simulation/#explanation","title":"Explanation","text":"<p>The code snippet imports the <code>create_model</code> function from the <code>trano.main</code> module and then calls this function with a specified YAML configuration file to create a model based on the parameters defined in that file.</p>"},{"location":"tutorials/first_model_and_simulation/#general-description-and-parameters","title":"General Description and Parameters","text":"<ul> <li>Function: <code>create_model</code></li> <li>Parameter:</li> <li><code>path_to_yaml_configuration_folder / \"first_model.yaml\"</code>: <ul> <li>Type: String (or path-like object)</li> <li>Description: The path to the YAML file that contains configuration settings for the model being created.</li> </ul> </li> </ul> <p>The model is created in the same folder as the configuration file, with the extension .mo. In this case, the model is saved as <code>first_model.mo</code>. Provided that the necessary libraries, such as the Buildings library, are loaded, the generated model can be opened in OpenModelica, as illustrated in the figure below. Additionally, if not specified, Trano utilizes the Buildings library to generate the model.</p> <p></p> <p>If one opens the main building components, the generated components are subdivided into various sub-components, as illustrated below. Since the configuration file contains only the building envelope information, only the envelope sub-component is generated.</p> <p></p> <p>Opening the envelope subcomponents reveals the various base components and information that constitute the building envelope model. At this stage, the user can modify the model as necessary.</p> <p></p>"},{"location":"tutorials/first_model_and_simulation/#simulate","title":"Simulate","text":"<p>The following code snippet can be used to directly simulate the model after its generation. The model will not be generated; instead, it will be simulated within the OpenModelica container.</p> Test tutorials<pre><code>    from trano.main import simulate_model\n\n    simulate_model(\n        path_to_yaml_configuration_folder / \"first_simulation.yaml\",\n        library=\"Buildings\",\n        start=0,\n        end=2 * 3600 * 24 * 7,\n    )\n</code></pre>"},{"location":"tutorials/first_model_and_simulation/#explanation-of-code-snippet","title":"Explanation of Code Snippet","text":"<p>The code snippet imports a function <code>simulate_model</code> from the <code>trano.main</code> module and calls it to run a simulation using a specified YAML configuration file and parameters.</p>"},{"location":"tutorials/first_model_and_simulation/#general-description-and-parameters_1","title":"General Description and Parameters","text":"<ul> <li>Function: <code>simulate_model</code></li> <li>Parameters:</li> <li><code>path_to_yaml_configuration_folder / \"first_simulation.yaml\"</code><ul> <li>Path to the configuration file for the simulation.</li> </ul> </li> <li><code>library</code>: <code>\"Buildings\"</code><ul> <li>Specifies the library to be used for the simulation.</li> </ul> </li> <li><code>start</code>: <code>0</code><ul> <li>Start time for the simulation in seconds.</li> </ul> </li> <li><code>end</code>: <code>2 * 3600 * 24 * 7</code><ul> <li>End time for the simulation, calculated as two weeks in seconds.</li> </ul> </li> </ul> <p>Once the simulation is complete, key parameters are presented in a report file, as shown below.</p> Spaces<p><p></p></p><p> External Boundaries Table hRoo AFlo linearizeRadiation m_flow_nominal mSenFac T_start volume 2.5 100.0 true 0.01 1.0 294.15 250.0 gain k occupancy name [40; 75; 40] 1/7/3 3600*{9, 17} occupancy_1 Name Azimuth Construction Name Surface Tilt externalwall_0 180.0 construction_001 100.0 wall externalwall_1 180.0 construction_001 100.0 wall externalwall_2 180.0 construction_001 200.0 wall window_0 180.0 ins2ar2020_001 1.0 wall flooronground_0 90.0 construction_001 1.0 floor <p><p></p></p>Construction<p><p></p></p><p> Layer Information Table Layers for construction_001 Name c epsLw epsSw k rho Thickness material_001 1000.0 0.85 0.85 0.035 2000.0 0.1 material_002 1000.0 0.85 0.85 0.035 2000.0 0.1 material_003 1000.0 0.85 0.85 0.035 2000.0 0.1 Layer Information Table Layers for ins2ar2020_001 Name c epsLw epsSw k rho Thickness glass_001 840.0 0.84 0.67 1.0 2500.0 0.006 air_001 1006.0 0.0 0.0 0.0256 1.2 0.016 glass_001 840.0 0.84 0.67 1.0 2500.0 0.006 </p><p><p></p></p>"},{"location":"tutorials/model_with_another_library/","title":"Model with another library","text":"<p>Switching libraries is seamless with Trano. This tutorial demonstrates how to generate a model using the IDEAS library from the same YAML file previously utilized.</p>"},{"location":"tutorials/model_with_another_library/#generate-modelica-model","title":"Generate Modelica model","text":"<p>The only difference from the previous tutorial is that the library is specified in the command as shown below.</p> Test tutorials<pre><code>    from trano.main import create_model\n\n    create_model(\n        path_to_yaml_configuration_folder / \"first_model.yaml\",\n        library=\"IDEAS\",\n    )\n</code></pre>"},{"location":"tutorials/model_with_another_library/#explanation-of-the-code-snippet","title":"Explanation of the Code Snippet","text":"<p>This code snippet imports the <code>create_model</code> function from the <code>trano.main</code> module and then calls this function to create a model based on a specified YAML configuration file.</p>"},{"location":"tutorials/model_with_another_library/#general-description-and-parameters","title":"General Description and Parameters","text":"<ul> <li>Function: <code>create_model</code></li> <li>Parameters:</li> <li><code>path_to_yaml_configuration_folder / \"first_model.yaml\"</code>: Path to the YAML configuration file used for model creation.</li> <li><code>library=\"IDEAS\"</code>: Optional parameter specifying the library to be used for model creation; defaults to \"IDEAS\".</li> </ul> <p>The figure below illustrates the envelope subcomponent generated using the IDEAS library, in contrast to the previous tutorial that utilized the Buildings library.</p> <p></p>"},{"location":"tutorials/multi-zone_with_hydronic_heating/","title":"Multi-zone with hydronic heating","text":"<p>The previous tutorials provided idealized examples. In this tutorial, we will simulate a three-zone building with a hydronic heating system, aiming for a more realistic model. Below, we will describe the configuration file, highlighting key points:</p> <ul> <li> <p>Default Construction Values: Trano includes a set of predefined construction, glazing, and gas properties. To use these in your configuration file, add the following line:     <pre><code>default: !include_default\n</code></pre></p> </li> <li> <p>Emission Systems: Each space is assigned a list of emission systems. These are linked to a radiator object (<code>RADIATOR:001</code>) and a valve object (<code>VALVE:001</code>), with the valve being used for control instead of the radiator:     <pre><code>emissions:\n  - radiator:\n      id: RADIATOR:001\n  - valve:\n      id: VALVE:001\n      control:\n        emission_control:\n</code></pre></p> </li> <li> <p>Hydronic System Definition: A complete hydronic system must be defined, including the boiler, pump, and various valves. Default parameters will be utilized if not specified:     <pre><code>systems:\n  - boiler:\n      id: BOILER:001\n      control:\n        boiler_control:\n  - pump:\n      id: PUMP:001\n      control:\n        collector_control:\n      outlets:\n        - THREE_WAY_VALVE:001\n        - THREE_WAY_VALVE:002\n      inlets:\n        - BOILER:001\n  - split_valve:\n      id: SPLIT_VALVE:001\n      inlets:\n        - VALVE:003\n        - VALVE:001\n      outlets:\n        - BOILER:001\n  - three_way_valve:\n      id: THREE_WAY_VALVE:001\n      control:\n        three_way_valve_control:\n      outlets:\n        - TEMPERATURE_SENSOR:001\n        - SPLIT_VALVE:001\n  - temperature_sensor:\n      id: TEMPERATURE_SENSOR:001\n      outlets:\n        - RADIATOR:001\n        - RADIATOR:003\n  - split_valve:\n      id: SPLIT_VALVE:002\n      inlets:\n        - VALVE:002\n      outlets:\n        - BOILER:001\n  - three_way_valve:\n      id: THREE_WAY_VALVE:002\n      control:\n        three_way_valve_control:\n      outlets:\n        - TEMPERATURE_SENSOR:002\n        - SPLIT_VALVE:002\n  - temperature_sensor:\n      id: TEMPERATURE_SENSOR:002\n      inlets:\n        - THREE_WAY_VALVE:002\n      outlets:\n        - RADIATOR:002\n</code></pre></p> </li> </ul>"},{"location":"tutorials/multi-zone_with_hydronic_heating/#input-configuration-file","title":"Input configuration file","text":"<p>The described configuration represents a multi-room building designed for occupancy, featuring a combination of thermal insulation materials with consistent thermal properties. It includes three distinct spaces (rooms) with varying floor areas and heating systems. Each space has specific external wall construction types and window placements to optimize energy efficiency and natural light. The building also has a centralized heating system with a boiler, radiators, and temperature control elements to manage indoor climate effectively. Overall, it appears to be a residential or small commercial building with an emphasis on energy efficiency and heating performance.</p> <pre><code>default: !include_default\nmaterial:\n  - id: MATERIAL:001\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:002\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:003\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n\nconstructions:\n  - id: CONSTRUCTION:001\n    layers:\n      - material: MATERIAL:001\n        thickness: 0.1\n      - material: MATERIAL:002\n        thickness: 0.1\n      - material: MATERIAL:003\n        thickness: 0.1\nspaces:\n  - occupancy:\n    parameters:\n      floor_area: 49.0\n      average_room_height: 2.5\n    id: SPACE:001\n    external_boundaries:\n      external_walls:\n        - surface: 20\n          azimuth: 0\n          tilt: wall\n          construction: CAVITYWALL:001\n        - surface: 30\n          azimuth: 90\n          tilt: wall\n          construction: CAVITYWALL:001\n        - surface: 50\n          azimuth: 180.0\n          tilt: wall\n          construction: CAVITYWALL:001\n      windows:\n        - surface: 5.0\n          construction: EPCDOUBLE:001\n          azimuth: 0\n          tilt: wall\n        - surface: 2.0\n          construction: EPCDOUBLE:001\n          azimuth: 180.0\n          tilt: wall\n      floor_on_grounds:\n        - surface: 49\n          construction: CONCRETESLAB:001\n    emissions:\n      - radiator:\n          parameters:\n            nominal_heating_power_positive_for_heating: 5000\n            dp_nominal: 100\n          id: RADIATOR:003\n      - valve:\n          id: VALVE:003\n          control:\n            emission_control:\n  - occupancy:\n      parameters:\n        gain: \"[ 45; 90; 40 ]\"\n        occupancy: 3600*{16, 21}\n    parameters:\n      floor_area: 40\n      average_room_height: 2.5\n    id: SPACE:002\n    external_boundaries:\n      external_walls:\n        - surface: 25\n          azimuth: 0\n          tilt: wall\n          construction: CAVITYWALLPARTIALFILL:001\n        - surface: 25\n          azimuth: 90\n          tilt: wall\n          construction: CAVITYWALLPARTIALFILL:001\n        - surface: 34\n          azimuth: 180\n          tilt: wall\n          construction: CAVITYWALLPARTIALFILL:001\n      windows:\n        - surface: 5.0\n          construction: INS2AR2020:001\n          azimuth: 0\n          tilt: wall\n        - surface: 2.0\n          construction: INS2AR2020:001\n          azimuth: 180\n          tilt: wall\n      floor_on_grounds:\n        - surface: 40\n          construction: CONCRETESLAB:001\n    emissions:\n      - radiator:\n          parameters:\n            nominal_heating_power_positive_for_heating: 5000\n          id: RADIATOR:001\n      - valve:\n          id: VALVE:001\n          control:\n            emission_control:\n  - occupancy:\n      parameters:\n        gain: \"[35; 70; 30]\"\n        occupancy: 3600*{10, 14}\n    parameters:\n      floor_area: 50.0\n      average_room_height: 2.5\n    id: SPACE:003\n    external_boundaries:\n      external_walls:\n        - surface: 22\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 17\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 36\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 60.0\n          construction: CONCRETESLAB:001\n    emissions:\n      - radiator:\n          id: RADIATOR:002\n      - valve:\n          id: VALVE:002\n          control:\n            emission_control:\ninternal_walls:\n  - space_1: SPACE:001\n    space_2: SPACE:002\n    construction: CAVITYWALL:001\n    surface: 20\n  - space_1: SPACE:002\n    space_2: SPACE:001\n    construction: CONSTRUCTION:001\n    surface: 15\n  - space_1: SPACE:002\n    space_2: SPACE:003\n    construction: CAVITYWALLPARTIALFILL:001\n    surface: 22\nsystems:\n  - boiler:\n      parameters:\n        nominal_heating_power: 20000\n      id: BOILER:001\n      control:\n        boiler_control:\n  - pump:\n      id: PUMP:001\n      control:\n        collector_control:\n      outlets:\n        - THREE_WAY_VALVE:001\n        - THREE_WAY_VALVE:002\n      inlets:\n        - BOILER:001\n  - split_valve:\n      id: SPLIT_VALVE:001\n      inlets:\n        - VALVE:003\n        - VALVE:001\n      outlets:\n        - BOILER:001\n  - three_way_valve:\n      id: THREE_WAY_VALVE:001\n      control:\n        three_way_valve_control:\n      outlets:\n        - TEMPERATURE_SENSOR:001\n        - SPLIT_VALVE:001\n  - temperature_sensor:\n      id: TEMPERATURE_SENSOR:001\n      outlets:\n        - RADIATOR:001\n        - RADIATOR:003\n  - split_valve:\n      id: SPLIT_VALVE:002\n      inlets:\n        - VALVE:002\n      outlets:\n        - BOILER:001\n  - three_way_valve:\n      id: THREE_WAY_VALVE:002\n      control:\n        three_way_valve_control:\n      outlets:\n        - TEMPERATURE_SENSOR:002\n        - SPLIT_VALVE:002\n  - temperature_sensor:\n      id: TEMPERATURE_SENSOR:002\n      inlets:\n        - THREE_WAY_VALVE:002\n      outlets:\n        - RADIATOR:002\n</code></pre> <p>The following code snippet demonstrates how to create the model using Trano with the IDEAS library.</p> Test tutorials<pre><code>    from trano.main import create_model\n\n    create_model(\n        path_to_yaml_configuration_folder / \"three_zones_hydronic_heating.yaml\",\n        library=\"IDEAS\",\n    )\n</code></pre>"},{"location":"tutorials/multi-zone_with_hydronic_heating/#general-explanation","title":"General Explanation","text":"<p>The code snippet imports a function to create a model based on a YAML configuration file for a specific hydronic heating system. It uses a library named \"IDEAS\" for its functionalities.</p>"},{"location":"tutorials/multi-zone_with_hydronic_heating/#parameters-description","title":"Parameters Description","text":"<ul> <li>path_to_yaml_configuration_folder: </li> <li> <p>Path object pointing to the directory containing YAML configuration files.</p> </li> <li> <p>\"three_zones_hydronic_heating.yaml\": </p> </li> <li> <p>The specific YAML configuration file that defines the model parameters and settings for a three-zone hydronic heating system.</p> </li> <li> <p>library: </p> </li> <li>A string that specifies the library to be used for model creation. In this case, it is set to <code>\"IDEAS\"</code>.</li> </ul>"},{"location":"tutorials/multi-zone_with_hydronic_heating/#outputs","title":"Outputs","text":"<p>The figure below illustrates the building components of the generated model. In addition to the building envelope and emission sub-components, it also includes components for the hydronic distribution system and the production boiler.</p> <p></p> <p>Opening the emission component reveals the various radiators and valves connected to different spaces, which together compose the emission system.</p> <p></p> <p>The figure below illustrates the hydronic distribution system connecting the emission system to the boiler.</p> <p></p> <p>Since the IDEAS library was utilized, the figure below illustrates the content of the envelope sub-component that incorporates the IDEAS sub-components.</p> <p></p>"},{"location":"tutorials/multi-zone_with_ideal_heating/","title":"Multi-zone with ideal heating","text":"<p>The previous sections focused on simulating the building envelope without a system, providing insight into constructing Trano's YAML input files. This section shifts to simulating a building with a heating system. The building consists of three zones, equipped with an ideal heating system. </p> <p>Below is the YAML configuration file describing the building's heating system. The main difference in this configuration compared to previous ones is the inclusion of a heating system in one of the building's spaces, as shown in the following YAML code snippet:</p> <pre><code>emissions:\n  - radiator:\n      id: RADIATOR:001\n      variant: ideal\n      parameters:\n        nominal_heating_power_positive_for_heating: 2500\n      control:\n        emission_control:\n          id: EMISSION_CONTROL:001\n          parameters:\n            schedule: 3600*{10, 20}\n            temperature_heating_setpoint: 295.15\n            temperature_heating_setback: 291.15\n</code></pre> <p>The <code>emissions</code> field signifies the link to the emission system. The <code>variant</code> field specifies the type of radiator\u2014in this case, an ideal radiator. Additionally, the <code>control</code> object of the radiator is detailed within the <code>control</code> field, where parameters like setpoints, schedule, and the heating power of the ideal radiator are defined.</p>"},{"location":"tutorials/multi-zone_with_ideal_heating/#input-configuration-file","title":"Input configuration file","text":"<p>The described configuration outlines a building with the following characteristics:</p> <ol> <li> <p>Material Composition: The building employs a thermal insulating construction made up of layered materials with relatively low thermal conductivity, suggesting energy-efficient design considerations.</p> </li> <li> <p>Spaces: The building consists of multiple spaces (rooms) with varying floor areas (80 m\u00b2 for a smaller room and 120 m\u00b2 for larger rooms) and heights (2.5 to 2.7 meters). The internal configuration includes internal walls separating some of these spaces.</p> </li> <li> <p>Window Features: Glazing includes double-glazed units with air in between, indicating a focus on reducing heat loss while allowing natural light.</p> </li> <li> <p>External Walls and Terrain: The walls are insulated, and there are multiple external wall orientations with specific areas, suggesting a carefully considered design relevant to the site\u2019s solar exposure.</p> </li> <li> <p>Heating System: The presence of a radiator system indicates an intention for regulated indoor climate control.</p> </li> </ol> <p>In summary, this building configuration describes an energy-efficient, multi-room structure designed for controlled heating and sustainable thermal management, typical of modern residential or small commercial buildings.</p> <pre><code>material:\n  - id: MATERIAL:001\n    thermal_conductivity: 0.045\n    density: 2100.0\n    specific_heat_capacity: 900.0\n  - id: MATERIAL:002\n    thermal_conductivity: 0.04\n    density: 1950.0\n    specific_heat_capacity: 950.0\n  - id: MATERIAL:003\n    thermal_conductivity: 0.038\n    density: 2050.0\n    specific_heat_capacity: 920.0\n\nconstructions:\n  - id: CONSTRUCTION:001\n    layers:\n      - material: MATERIAL:001\n        thickness: 0.12\n      - material: MATERIAL:002\n        thickness: 0.08\n      - material: MATERIAL:003\n        thickness: 0.1\n\nglass_material:\n  - density: 2500.0\n    id: GLASS:001\n    longwave_emissivity: 0.82\n    shortwave_emissivity: 0.65\n    specific_heat_capacity: 860.0\n    thermal_conductivity: 1.1\n\ngas:\n  - density: 1.18\n    id: AIR:001\n    longwave_emissivity: 0.0\n    shortwave_emissivity: 0.0\n    specific_heat_capacity: 1005.0\n    thermal_conductivity: 0.026\n\nglazings:\n  - id: INS2AR2020:001\n    layers:\n      - glass: GLASS:001\n        thickness: 0.005\n      - gas: AIR:001\n        thickness: 0.014\n      - glass: GLASS:001\n        thickness: 0.005\n\nspaces:\n  - parameters:\n      floor_area: 80.0  # Smaller room\n      average_room_height: 2.5\n    id: SPACE:001\n    external_boundaries:\n      external_walls:\n        - surface: 90.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 70.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 160.0\n          azimuth: 270.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 80.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 1.5\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 1.5\n          height: 1.0\n\n  - parameters:\n      floor_area: 120.0  # Larger room with different shape\n      average_room_height: 2.7\n    id: SPACE:002\n    external_boundaries:\n      external_walls:\n        - surface: 120.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 100.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 220.0\n          azimuth: 0.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 120.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 2.0\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 2.0\n          height: 1.2\n  - parameters:\n      floor_area: 120.0  # Larger room with different shape\n      average_room_height: 2.7\n    id: SPACE:003\n    external_boundaries:\n      external_walls:\n        - surface: 120.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 100.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 220.0\n          azimuth: 0.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 120.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 2.0\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 2.0\n          height: 1.2\n\n    emissions:\n      - radiator:\n          id: RADIATOR:001\n          variant: ideal\n          parameters:\n              nominal_heating_power_positive_for_heating: 2500\n          control:\n            emission_control:\n              id: EMISSION_CONTROL:001\n              parameters:\n                schedule: 3600*{10, 20}\n                temperature_heating_setpoint: 295.15\n                temperature_heating_setback: 291.15\n\ninternal_walls:\n  - space_1: SPACE:002\n    space_2: SPACE:001\n    construction: CONSTRUCTION:001\n    surface: 18.0\n</code></pre> <p>The following code snippet demonstrates how to create a model using Trano. This process is somewhat redundant, as the interface remains consistent. The generated model is primarily derived from the YAML configuration file.</p> Test tutorials<pre><code>    from trano.main import create_model\n\n    create_model(\n        path_to_yaml_configuration_folder / \"three_zones_ideal_heating.yaml\",\n    )\n</code></pre>"},{"location":"tutorials/multi-zone_with_ideal_heating/#code-snippet-explanation","title":"Code Snippet Explanation","text":"<p>This code snippet imports a function called <code>create_model</code> from the <code>trano.main</code> module and then calls this function, passing a YAML configuration file as an argument. The configuration file likely contains parameters that define a model related to a heating system with three zones.</p>"},{"location":"tutorials/multi-zone_with_ideal_heating/#general-description-of-parameters","title":"General Description of Parameters","text":"<ul> <li>path_to_yaml_configuration_folder: </li> <li> <p>Presumably a variable that holds the path to the folder containing the YAML configuration files.</p> </li> <li> <p>three_zones_ideal_heating.yaml: </p> </li> <li>Specific YAML file that contains model configurations for an ideal heating system with three zones. </li> </ul>"},{"location":"tutorials/multi-zone_with_ideal_heating/#parameters-for-create_model","title":"Parameters for <code>create_model</code>","text":"<ul> <li>Configuration File Path: </li> <li>The file path to the YAML file providing model specifications.</li> </ul>"},{"location":"tutorials/multi-zone_with_ideal_heating/#outputs","title":"Outputs","text":"<p>The figure below illustrates the building components of the generated model. In addition to the building envelope sub-component, an emissions-related component has also been generated.</p> <p></p> <p>Opening this component will display an ideal heating system linked to Space 3. We have defined a single heating system for one of the spaces.</p> <p></p> <p>Opening the building envelope component, we notice three distinct spaces defined in the model.</p> <p></p>"},{"location":"tutorials/multizone_model/","title":"Multizone model","text":"<p>Similarly to changing libraries, building a multi-zone model is as easy as adding a few lines to the configuration file. This tutorial demonstrates how to generate a model for a three-zone building.</p> <p>The configuration below presents the YAML file that describes a three-zone building.</p> <pre><code>building:\n  zones:\n    - name: Zone 1\n      area: 500\n      temperature: 22\n    - name: Zone 2\n      area: 400\n      temperature: 21\n    - name: Zone 3\n      area: 600\n      temperature: 23\n</code></pre> <pre><code>material:\n  - id: MATERIAL:001\n    thermal_conductivity: 0.045\n    density: 2100.0\n    specific_heat_capacity: 900.0\n  - id: MATERIAL:002\n    thermal_conductivity: 0.04\n    density: 1950.0\n    specific_heat_capacity: 950.0\n  - id: MATERIAL:003\n    thermal_conductivity: 0.038\n    density: 2050.0\n    specific_heat_capacity: 920.0\n\nconstructions:\n  - id: CONSTRUCTION:001\n    layers:\n      - material: MATERIAL:001\n        thickness: 0.12\n      - material: MATERIAL:002\n        thickness: 0.08\n      - material: MATERIAL:003\n        thickness: 0.1\n\nglass_material:\n  - density: 2500.0\n    id: GLASS:001\n    longwave_emissivity: 0.82\n    shortwave_emissivity: 0.65\n    specific_heat_capacity: 860.0\n    thermal_conductivity: 1.1\n\ngas:\n  - density: 1.18\n    id: AIR:001\n    longwave_emissivity: 0.0\n    shortwave_emissivity: 0.0\n    specific_heat_capacity: 1005.0\n    thermal_conductivity: 0.026\n\nglazings:\n  - id: INS2AR2020:001\n    layers:\n      - glass: GLASS:001\n        thickness: 0.005\n      - gas: AIR:001\n        thickness: 0.014\n      - glass: GLASS:001\n        thickness: 0.005\n\nspaces:\n  - parameters:\n      floor_area: 80.0  # Smaller room\n      average_room_height: 2.5\n    id: SPACE:001\n    external_boundaries:\n      external_walls:\n        - surface: 90.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 70.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 160.0\n          azimuth: 270.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 80.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 1.5\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 1.5\n          height: 1.0\n\n  - parameters:\n      floor_area: 120.0  # Larger room with different shape\n      average_room_height: 2.7\n    id: SPACE:002\n    external_boundaries:\n      external_walls:\n        - surface: 120.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 100.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 220.0\n          azimuth: 0.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 120.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 2.0\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 2.0\n          height: 1.2\n  - parameters:\n      floor_area: 59.0  # Larger room with different shape\n      average_room_height: 2.7\n    id: SPACE:003\n    external_boundaries:\n      external_walls:\n        - surface: 120.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 100.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 2.0\n          azimuth: 90.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 2.0\n          height: 1.2\n\ninternal_walls:\n  - space_1: SPACE:002\n    space_2: SPACE:001\n    construction: CONSTRUCTION:001\n    surface: 18.0\n</code></pre> <p>This time, we will utilize a reduced-order model defined in the AIXLIB library.</p> Test tutorials<pre><code>    from trano.main import create_model\n\n    create_model(\n        path_to_yaml_configuration_folder / \"multi_zones.yaml\",\n        library=\"reduced_order\",\n    )\n</code></pre>"},{"location":"tutorials/multizone_model/#code-snippet-explanation","title":"Code Snippet Explanation","text":"<p>This code snippet imports the <code>create_model</code> function from the <code>trano.main</code> module and calls it to create a model based on the specified YAML configuration file. It uses a specified library type.</p>"},{"location":"tutorials/multizone_model/#general-description-and-parameters","title":"General Description and Parameters","text":"<ul> <li>Function: <code>create_model</code></li> <li>Parameters:</li> <li><code>path_to_yaml_configuration_folder / \"multi_zones.yaml\"</code>: Path to the YAML configuration file.</li> <li><code>library</code>: Type of library to be used (in this case, set to <code>\"reduced_order\"</code>).</li> </ul> <p>The figure below illustrates the envelope subcomponent generated using the reduced order building component from the AIXLIB library.</p> <p></p>"},{"location":"tutorials/zone_with_photovoltaics/","title":"Zone with photovoltaics","text":"<p>The following tutorial demonstrates how to add photovoltaic (PV) systems to buildings.</p> <pre><code>default: !include_default\nmaterial:\n  - id: MATERIAL:001\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:002\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:003\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n\nconstructions:\n  - id: CONSTRUCTION:001\n    layers:\n      - material: MATERIAL:001\n        thickness: 0.1\n      - material: MATERIAL:002\n        thickness: 0.1\n      - material: MATERIAL:003\n        thickness: 0.1\nspaces:\n  - occupancy:\n    parameters:\n      floor_area: 100.0\n      average_room_height: 2.5\n    id: SPACE:001\n    external_boundaries:\n      external_walls:\n        - surface: 20\n          azimuth: 0\n          tilt: wall\n          construction: CAVITYWALL:001\n        - surface: 30\n          azimuth: 90\n          tilt: wall\n          construction: CAVITYWALL:001\n        - surface: 50\n          azimuth: 180.0\n          tilt: wall\n          construction: CAVITYWALL:001\n      windows:\n        - surface: 5.0\n          construction: EPCDOUBLE:001\n          azimuth: 0\n          tilt: wall\n        - surface: 2.0\n          construction: EPCDOUBLE:001\n          azimuth: 180.0\n          tilt: wall\n      floor_on_grounds:\n        - surface: 120\n          construction: CONCRETESLAB:001\n    emissions:\n      - radiator:\n          id: RADIATOR:003\n      - valve:\n          id: VALVE:003\n          control:\n            emission_control:\n  - occupancy:\n    parameters:\n      floor_area: 70\n      average_room_height: 2.5\n    id: SPACE:002\n    external_boundaries:\n      external_walls:\n        - surface: 25\n          azimuth: 0\n          tilt: wall\n          construction: CAVITYWALLPARTIALFILL:001\n        - surface: 25\n          azimuth: 90\n          tilt: wall\n          construction: CAVITYWALLPARTIALFILL:001\n        - surface: 34\n          azimuth: 180\n          tilt: wall\n          construction: CAVITYWALLPARTIALFILL:001\n      windows:\n        - surface: 5.0\n          construction: INS2AR2020:001\n          azimuth: 0\n          tilt: wall\n        - surface: 2.0\n          construction: INS2AR2020:001\n          azimuth: 180\n          tilt: wall\n      floor_on_grounds:\n        - surface: 60\n          construction: CONCRETESLAB:001\n    emissions:\n      - radiator:\n          id: RADIATOR:001\n      - valve:\n          id: VALVE:001\n          control:\n            emission_control:\n  - occupancy:\n    parameters:\n      floor_area: 50.0\n      average_room_height: 2.5\n    id: SPACE:003\n    external_boundaries:\n      external_walls:\n        - surface: 22\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 17\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 36\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 5.0\n          construction: EPCDOUBLE:001\n          azimuth: 180.0\n          tilt: wall\n      floor_on_grounds:\n        - surface: 60.0\n          construction: CONCRETESLAB:001\n    emissions:\n      - radiator:\n          id: RADIATOR:002\n      - valve:\n          id: VALVE:002\n          control:\n            emission_control:\ninternal_walls:\n  - space_1: SPACE:001\n    space_2: SPACE:002\n    construction: CAVITYWALL:001\n    surface: 20\n  - space_1: SPACE:002\n    space_2: SPACE:001\n    construction: CONSTRUCTION:001\n    surface: 15\n  - space_1: SPACE:002\n    space_2: SPACE:003\n    construction: CAVITYWALLPARTIALFILL:001\n    surface: 22\nsystems:\n  - boiler:\n      id: BOILER:001\n      variant: heat_pump\n  - pump:\n      id: PUMP:001\n      control:\n        collector_control:\n      outlets:\n        - THREE_WAY_VALVE:001\n        - THREE_WAY_VALVE:002\n      inlets:\n        - BOILER:001\n  - split_valve:\n      id: SPLIT_VALVE:001\n      inlets:\n        - VALVE:003\n        - VALVE:001\n      outlets:\n        - BOILER:001\n  - three_way_valve:\n      id: THREE_WAY_VALVE:001\n      control:\n        three_way_valve_control:\n      outlets:\n        - TEMPERATURE_SENSOR:001\n        - SPLIT_VALVE:001\n  - temperature_sensor:\n      id: TEMPERATURE_SENSOR:001\n      outlets:\n        - RADIATOR:001\n        - RADIATOR:003\n  - split_valve:\n      id: SPLIT_VALVE:002\n      inlets:\n        - VALVE:002\n      outlets:\n        - BOILER:001\n  - three_way_valve:\n      id: THREE_WAY_VALVE:002\n      control:\n        three_way_valve_control:\n      outlets:\n        - TEMPERATURE_SENSOR:002\n        - SPLIT_VALVE:002\n  - temperature_sensor:\n      id: TEMPERATURE_SENSOR:002\n      inlets:\n        - THREE_WAY_VALVE:002\n      outlets:\n        - RADIATOR:002\nsolar:\n  - photovoltaic:\n      id: PV:001\n  - photovoltaic:\n      id: PV:002\n</code></pre> Test tutorials<pre><code>    from trano.main import create_model\n\n    create_model(\n        path_to_yaml_configuration_folder / \"multizones_with_pv.yaml\",\n        library=\"iso_13790\",\n    )\n</code></pre>"},{"location":"tutorials/zone_with_photovoltaics/#general-explanation","title":"General Explanation","text":"<p>The code snippet imports a function <code>create_model</code> from the <code>trano.main</code> module and calls it with specified parameters to create a simulation model using configurations defined in a YAML file.</p>"},{"location":"tutorials/zone_with_photovoltaics/#parameters-description","title":"Parameters Description","text":"<ul> <li>path_to_yaml_configuration_folder / \"multizones_with_pv.yaml\"</li> <li>Path to the YAML configuration file for the model.</li> <li> <p>Contains setup details for a multizone model with photovoltaic (PV) systems.</p> </li> <li> <p>library=\"iso_13790\"</p> </li> <li>Specifies the library to be used for the simulation.</li> <li>In this case, it refers to ISO 13790, which pertains to energy performance of buildings.</li> </ul> <p>The figure below illustrates the model generated by incorporating the PV-related subcomponent into the existing components.</p> <p></p> <p>Opening the solar component reveals the defined PVs assigned to the model.</p> <p></p>"},{"location":"tutorials/zone_with_ventilation/","title":"Zone with ventilation","text":"<p>The tutorial below demonstrates how to add ventilation to the building model.</p> <pre><code>default: !include_default\nspaces:\n  - occupancy:\n      parameters:\n        occupancy: 3600*{9, 17}\n        gain: \"[40; 75; 40]\"\n        heat_gain_if_occupied: 1/7/3\n    parameters:\n      floor_area: 100.0\n      average_room_height: 2.5\n    id: SPACE:001\n    external_boundaries:\n      external_walls:\n        - surface: 20\n          azimuth: 0\n          tilt: wall\n          construction: CAVITYWALL:001\n        - surface: 30\n          azimuth: 90\n          tilt: wall\n          construction: CAVITYWALL:001\n        - surface: 50\n          azimuth: 180.0\n          tilt: wall\n          construction: CAVITYWALL:001\n      windows:\n        - surface: 5.0\n          construction: INS3AR2020:001\n          azimuth: 0\n          tilt: wall\n        - surface: 2.0\n          construction: INS3AR2020:001\n          azimuth: 180.0\n          tilt: wall\n      floor_on_grounds:\n        - surface: 50.0\n          construction: CONCRETESLAB:001\n    ventilation_inlets:\n      - duct:\n          id: DUCT:001\n      - vav:\n          id: VAV:001\n          control:\n            vav_control:\n              id: VAV_CONTROL:001\n              variant: constant\n\n    ventilation_outlets:\n      - duct:\n          id: DUCT:002\n\nsystems:\n  - air_handling_unit:\n      id: AHU:001\n      variant: test\n      control:\n        ahu_control:\n          id: AHU_CONTROL:001\n      inlets:\n        - DUCT:002\n      outlets:\n        - DUCT:001\n</code></pre> <p>This time, we will utilize zone models based on ISO 13790.</p> Test tutorials<pre><code>    from trano.main import create_model\n\n    create_model(\n        path_to_yaml_configuration_folder / \"zone_with_ventilation.yaml\",\n        library=\"iso_13790\",\n    )\n</code></pre>"},{"location":"tutorials/zone_with_ventilation/#code-snippet-explanation","title":"Code Snippet Explanation","text":"<p>This code imports the <code>create_model</code> function from the <code>trano.main</code> module and calls it to create a model based on a specified YAML configuration file and a library.</p>"},{"location":"tutorials/zone_with_ventilation/#general-description-and-parameters","title":"General Description and Parameters","text":"<ul> <li>Function: <code>create_model</code></li> <li>Parameters:</li> <li><code>path_to_yaml_configuration_folder / \"zone_with_ventilation.yaml\"</code>: Path to the YAML configuration file describing the model.</li> <li><code>library=\"iso_13790\"</code>: Specifies the library to use for creating the model, in this case, the ISO 13790 standard.</li> </ul> <p>The figure below illustrates the generated model, highlighting the subcomponent related to ventilation.</p> <p></p> <p>Opening the ventilation component reveals the various elements associated with the ventilation system.</p> <p></p>"}]}