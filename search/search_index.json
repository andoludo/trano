{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Trano","text":"Trano <p>Trano is a package designed to streamline the implementation of building energy simulation models using a simplified YAML input format. It leverages existing validated Modelica libraries, including the Buildings library and the IDEAS library, as well as other Modelica libraries.</p> <p>Trano is designed to minimize the learning curve associated with developing building energy simulation models using Modelica. It streamlines the process by abstracting the complexities of building energy simulation, allowing users to input only the specific information relevant to their buildings. Trano automates the construction of the energy simulation models, aiming to enhance and scale the adoption of building energy simulations with Modelica efficiently.</p> <p>It is library-agnostic and can generate models using virtually any library. Currently, it is compatible with the Buildings library and the IDeas library. While Trano can execute simulations, models generated with it can also be opened and simulated in Modelica editors such as OpenModelica and Dymola, provided that the required libraries are preloaded. Models generated with Trano include valid graphical representations, allowing users to modify them through the graphical interface of Modelica editors. A set of tutorials is available to help users get started.</p>"},{"location":"explanation/","title":"Explanation","text":"<p>Stay tuned!</p>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#python-package","title":"Python package","text":"<p>Trano is a Python package that can be easily installed via pip.</p> <pre><code>pip install trano\n</code></pre> <p>Trano can also be utilized with Poetry.</p> <pre><code>poetry add trano\n</code></pre> <p>The Python package enables the generation of Modelica models from YAML configuration input. To simulate the model, ensure that Docker is installed on your system.</p>"},{"location":"getting-started/installation/#docker","title":"Docker","text":"<p>To simulate the Modelica model, you need to install Docker on your system. You can find installation instructions on the official Docker website.</p>"},{"location":"how-to%20guides/","title":"How-to Guides","text":"<p>Stay tuned!</p>"},{"location":"reference/components/","title":"Components","text":""},{"location":"reference/components/#weather","title":"Weather","text":""},{"location":"reference/components/#variant-default-from-ideas","title":"Variant: default from IDEAS","text":"<p>The following template is used for this component: <pre><code>    {% if macros.render_parameters(parameters) | safe %}\n    inner IDEAS.BoundaryConditions.SimInfoManager\n    sim(interZonalAirFlowType=\n  IDEAS.BoundaryConditions.Types.\n  InterZonalAirFlow.OnePort, {{ macros.render_parameters(parameters) | safe}}) \"Data reader\"\n    {% raw %}annotation (Placement(transformation(extent={{-96,76},{-76,96}})));{% endraw %}\n    {% else %}\n        inner IDEAS.BoundaryConditions.SimInfoManager\n    sim(interZonalAirFlowType=\n  IDEAS.BoundaryConditions.Types.\n  InterZonalAirFlow.OnePort) \"Data reader\"\n    {% raw %}annotation (Placement(transformation(extent={{-96,76},{-76,96}})));{% endraw %}\n    {% endif %}\n</code></pre></p>"},{"location":"reference/components/#variant-default-from-buildings","title":"Variant: default from BUILDINGS","text":"<p>The following template is used for this component: <pre><code>    {% if macros.render_parameters(parameters) | safe %}\n    Buildings.BoundaryConditions.WeatherData.ReaderTMY3\n                {{ element.name }}({{ macros.render_parameters(parameters) | safe}})\n    {% else %}\n    Buildings.BoundaryConditions.WeatherData.ReaderTMY3\n                {{ element.name }}(filNam=Modelica.Utilities.Files.loadResource\n        (\"modelica://Buildings/Resources/weatherdata/USA_IL_Chicago-OHare.Intl.AP.725300_TMY3.mos\"))\n    {% endif %}\n</code></pre></p>"},{"location":"reference/components/#internalelement","title":"InternalElement","text":""},{"location":"reference/components/#variant-default-from-ideas_1","title":"Variant: default from IDEAS","text":"<p>The following template is used for this component: <pre><code>    IDEAS.Buildings.Components.InternalWall {{ element.name }}\n    (redeclare parameter {{ package_name }}.\n    Data.Constructions.{{ element.construction.name }} constructionType,\n    redeclare package Medium = Medium,\n    A = {{ element.surface }}, inc = IDEAS.Types.Tilt.\n    {{ element.tilt.value | capitalize }}, azi =\n    {{ element.azimuth }}) \"Partition wall between the two\n    rooms\"\n</code></pre></p>"},{"location":"reference/components/#variant-default-from-buildings_1","title":"Variant: default from BUILDINGS","text":"<p>The following template is used for this component: <pre><code>    Buildings.HeatTransfer.Conduction.MultiLayer\n                {{ element.name }}(A =\n            {{ element.surface }}, layers =\n    {{ element.construction.name }}, stateAtSurface_a = true, stateAtSurface_b = true)\n    \"Partition wall between the two\n    rooms\"\n</code></pre></p>"},{"location":"reference/components/#window","title":"Window","text":""},{"location":"reference/components/#variant-default-from-ideas_2","title":"Variant: default from IDEAS","text":"<p>The following template is used for this component: <pre><code>    {% set tilts = tilts_processing_ideas(element) %}\n    IDEAS.Buildings.Components.Window[{{ element.surfaces | length }}]\n    {{ element.name }}(\n    redeclare parameter {{ package_name }}.Data.Glazing.\n    {{ element.constructions[0].name }} glazing,\n    A={{  macros.join_list(element.surfaces)}},\n    final azi={{macros.join_list(element.azimuths)}},\n    redeclare package Medium = Medium,\n    final inc={{macros.join_list(tilts)}})\n</code></pre></p>"},{"location":"reference/components/#pump","title":"Pump","text":""},{"location":"reference/components/#variant-default-from-default","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>  {{ package_name }}.Common.\n    Fluid.Ventilation.Pump{{ element.name | capitalize }}\n     {{ element.name }}(\n     {{ macros.render_parameters(parameters) | safe}},\n    redeclare package Medium = MediumW\n\n    )\n</code></pre></p>"},{"location":"reference/components/#valve","title":"Valve","text":""},{"location":"reference/components/#variant-default-from-default_1","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{ library_name }}.Fluid.Actuators.Valves.TwoWayEqualPercentage\n            {{ element.name }}(\n                {{ macros.render_parameters(parameters) | safe}},\n    redeclare package Medium = MediumW\n\n    ) \"Radiator valve\"\n</code></pre></p>"},{"location":"reference/components/#databus","title":"DataBus","text":""},{"location":"reference/components/#variant-default-from-default_2","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{package_name}}.Common.Controls.ventilation.DataServer\n        {{ element.name }} (redeclare package\n          Medium = Medium)\n</code></pre></p>"},{"location":"reference/components/#flooronground","title":"FloorOnGround","text":""},{"location":"reference/components/#variant-default-from-ideas_3","title":"Variant: default from IDEAS","text":"<p>The following template is used for this component: <pre><code>    IDEAS.Buildings.Components.SlabOnGround {{ element.name }}(\n    redeclare parameter {{ package_name }}.Data.Constructions.\n    {{ element.construction.name }} constructionType,\n    redeclare package Medium = Medium,\n    A={{  element.surface}})\n</code></pre></p>"},{"location":"reference/components/#threewayvalve","title":"ThreeWayValve","text":""},{"location":"reference/components/#variant-default-from-default_3","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{library_name}}.Fluid.Actuators.Valves.ThreeWayEqualPercentageLinear\n             {{ element.name }}(\n    redeclare package Medium = MediumW,\n    use_inputFilter=false,\n    {{ macros.render_parameters(parameters) | safe}},\n    energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState) \"Three-wayvalve\"\n</code></pre></p>"},{"location":"reference/components/#occupancy","title":"Occupancy","text":""},{"location":"reference/components/#variant-default-from-default_4","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{package_name}}.Common.Controls.ventilation.Occupancy{{ element.name | capitalize}}\n    {{ element.name }}({{ macros.render_parameters(parameters) | safe}})\n</code></pre></p>"},{"location":"reference/components/#collectorcontrol","title":"CollectorControl","text":""},{"location":"reference/components/#variant-default-from-default_5","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{package_name}}.Common.Controls.ventilation.CollectorControl{{ element.name | capitalize}}\n    {{ element.name }}\n</code></pre></p>"},{"location":"reference/components/#splitvalve","title":"SplitValve","text":""},{"location":"reference/components/#variant-default-from-default_6","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{library_name}}.Fluid.FixedResistances.Junction {{ element.name }} (\n    {{ macros.render_parameters(parameters) | safe}},\n    redeclare package Medium = MediumW,\n    energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState)\n    \"Flow splitter\"\n</code></pre></p>"},{"location":"reference/components/#vavcontrol","title":"VAVControl","text":""},{"location":"reference/components/#variant-default-from-default_7","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{package_name}}.Common.Controls.ventilation.VAVControl{{ element.name | capitalize}}\n    {{ element.name }}\n</code></pre></p>"},{"location":"reference/components/#variant-constant-from-default","title":"Variant: constant from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    Modelica.Blocks.Sources.RealExpression {{ element.name }}(y=1)\n</code></pre></p>"},{"location":"reference/components/#ahucontrol","title":"AhuControl","text":""},{"location":"reference/components/#variant-default-from-default_8","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{package_name}}.Common.Controls.ventilation.AhuControl{{ element.name | capitalize}}\n    {{ element.name }}\n</code></pre></p>"},{"location":"reference/components/#mergedwindows","title":"MergedWindows","text":""},{"location":"reference/components/#variant-default-from-ideas_4","title":"Variant: default from IDEAS","text":"<p>The following template is used for this component: <pre><code>    {% set tilts = tilts_processing_ideas(element) %}\n    IDEAS.Buildings.Components.Window[{{ element.surfaces | length }}]\n    {{ element.name }}(\n    redeclare parameter {{ package_name }}.Data.Glazing.\n    {{ element.constructions[0].name }} glazing,\n    A={{  macros.join_list(element.surfaces)}},\n    final azi={{macros.join_list(element.azimuths)}},\n    redeclare package Medium = Medium,\n    final inc={{macros.join_list(tilts)}})\n</code></pre></p>"},{"location":"reference/components/#boilercontrol","title":"BoilerControl","text":""},{"location":"reference/components/#variant-default-from-default_9","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{package_name}}.Common.Controls.ventilation.BoilerControl{{ element.name | capitalize}}\n    {{ element.name }}({{ macros.render_parameters(parameters) | safe}})\n</code></pre></p>"},{"location":"reference/components/#variant-default-from-default_10","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{package_name}}.Common.Controls.ventilation.BoilerControl{{ element.name | capitalize}}\n    {{ element.name }}({{ macros.render_parameters(parameters) | safe}})\n</code></pre></p>"},{"location":"reference/components/#duct","title":"Duct","text":""},{"location":"reference/components/#variant-default-from-default_11","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>  {{ library_name }}.Fluid.FixedResistances.PressureDrop\n    {{ element.name }}(\n    m_flow_nominal=100*1.2/3600,\n    redeclare package Medium = Medium,\n    allowFlowReversal = false,\n    dp_nominal=40) \"Pressure drop for return duct\"\n</code></pre></p>"},{"location":"reference/components/#airhandlingunit","title":"AirHandlingUnit","text":""},{"location":"reference/components/#variant-default-from-default_12","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>{{package_name}}.Common.Fluid.\n    Ventilation.Ahu{{ element.name | capitalize}}\n    {{ element.name }}\n    (redeclare package MediumA = Medium,\n    {% raw %}\n    VRoo={100,100},\n    AFlo={20,20},\n    mCooVAV_flow_nominal={0.01,0.01}{% endraw %})\n</code></pre></p>"},{"location":"reference/components/#variant-test-from-default","title":"Variant: test from DEFAULT","text":"<p>The following template is used for this component: <pre><code>{{package_name}}.Common.Fluid.\n    Ventilation.SimpleHVACBuildings\n    {{ element.name }}\n    (redeclare package Medium = Medium)\n</code></pre></p>"},{"location":"reference/components/#boundary","title":"Boundary","text":""},{"location":"reference/components/#variant-default-from-default_13","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>  Buildings.Fluid.Sources.Outside {{ element.name }}\n    (nPorts=2,redeclare package Medium = Medium)\n</code></pre></p>"},{"location":"reference/components/#vav","title":"VAV","text":""},{"location":"reference/components/#variant-default-from-default_14","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>  {{ library_name }}.Fluid.Actuators.Dampers.PressureIndependent\n    {{ element.name }}(\n    redeclare package Medium = Medium,\n    m_flow_nominal=100*1.2/3600,\n    dpDamper_nominal=50,\n    allowFlowReversal=false,\n    dpFixed_nominal=50) \"VAV box for room\"\n</code></pre></p>"},{"location":"reference/components/#variant-complex-from-default","title":"Variant: complex from DEFAULT","text":"<p>The following template is used for this component: <pre><code>  {{ package_name }}.Common.\n    Fluid.Ventilation.VAVBox{{ element.name | capitalize }}\n     {{ element.name }}(\n    redeclare package MediumA = Medium,\n    mCooAir_flow_nominal=100*1.2/3600,\n    mHeaAir_flow_nominal=100*1.2/3600,\n    VRoo=100,\n    allowFlowReversal=false,\n    THeaWatInl_nominal=90,\n    THeaWatOut_nominal=60,\n    THeaAirInl_nominal=30,\n    THeaAirDis_nominal=25\n    )\n</code></pre></p>"},{"location":"reference/components/#emissioncontrol","title":"EmissionControl","text":""},{"location":"reference/components/#variant-default-from-default_15","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{package_name}}.Common.Controls.ventilation.EmissionControl{{ element.name | capitalize}}\n    {{ element.name }}({{ macros.render_parameters(parameters) | safe}})\n</code></pre></p>"},{"location":"reference/components/#boiler","title":"Boiler","text":""},{"location":"reference/components/#variant-default-from-default_16","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>{{package_name}}.Common.Fluid.Boilers.\nBoilerWithStorage{{ element.name | capitalize}} {{ element.name }}(\n{{ macros.render_parameters(parameters) | safe}},\nredeclare package MediumW = MediumW, fue = Buildings.Fluid.Data.Fuels.HeatingOilLowerHeatingValue()) \"Boiler\"\n</code></pre></p>"},{"location":"reference/components/#temperaturesensor","title":"TemperatureSensor","text":""},{"location":"reference/components/#variant-default-from-default_17","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    Buildings.Fluid.Sensors.TemperatureTwoPort {{ element.name }}(\n    redeclare package Medium = MediumW,\n    m_flow_nominal=mRad_flow_nominal) \"Radiator\"\n</code></pre></p>"},{"location":"reference/components/#radiator","title":"Radiator","text":""},{"location":"reference/components/#variant-default-from-default_18","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{library_name}}.Fluid.HeatExchangers.Radiators.\n            RadiatorEN442_2 {{ element.name }}(\n            {{ macros.render_parameters(parameters) | safe}},\n    redeclare package Medium = MediumW,\n    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial) \"Radiator\"\n</code></pre></p>"},{"location":"reference/components/#variant-ideal-from-default","title":"Variant: ideal from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{package_name}}.Common.HeatTransfer.IdealHeatingSystem.IdealHeatEmission\n    {{ element.name }}\n</code></pre></p>"},{"location":"reference/components/#space","title":"Space","text":""},{"location":"reference/components/#variant-default-from-ideas_5","title":"Variant: default from IDEAS","text":"<p>The following template is used for this component: <pre><code>IDEAS.Buildings.Components.Zone {{ element.name }}(\n    mSenFac=0.822,\n        {%- if element.number_ventilation_ports != 0 -%}\n    nPorts = {{ element.number_ventilation_ports }},\n    {%- endif %}\n    {{ macros.render_parameters(parameters) | safe}},\n    n50=0.822*0.5*{{ element.name }}.n50toAch,\n    redeclare package Medium = Medium,\n    nSurf={{ element.number_merged_external_boundaries }},\n    T_start=293.15)\n</code></pre></p>"},{"location":"reference/components/#variant-default-from-buildings_2","title":"Variant: default from BUILDINGS","text":"<p>The following template is used for this component: <pre><code>Buildings.ThermalZones.Detailed.MixedAir {{ element.name }}(\n        redeclare package Medium = Medium,\n        {{ macros.render_parameters(parameters) | safe}},\n        {%- if element.number_ventilation_ports != 0 -%}\n        nPorts = {{ element.number_ventilation_ports }},\n        {%- endif %}\n        {%- for boundary in element.boundaries -%}\n            {%- if boundary.type == 'ExternalWall' -%}\n                {%- if boundary.number %}\n                    nConExt={{ boundary.number }},\n                    datConExt(\n                    {{ macros.element_parameters(boundary) }},\n                    azi={{ macros.join_list(boundary.azimuths) }}),\n                {% else %}\n                    nConExt=0,\n                {%- endif %}\n            {%- endif %}\n            {%- if boundary.type == \"InternalElement\"-%}\n                {%- if boundary.number %}\n                    nSurBou={{ boundary.number }},\n                    surBou(\n                    A={{ macros.join_list(boundary.surfaces) }},\n                    til={{ macros.convert_tilts(boundary.tilts) }}),\n                {% else %}\n                    nSurBou=0,\n                {%- endif %}\n            {%- endif %}\n            {%- if boundary.type == \"WindowedWall\" -%}\n                {%- if boundary.number %}\n                    nConExtWin={{ boundary.number }},\n                    datConExtWin(\n                    {{ macros.element_parameters(boundary) }},\n                    glaSys={{ macros.join_list(boundary.window_layers) }},\n                    wWin={{ macros.join_list(boundary.window_width) }},\n                    hWin={{ macros.join_list(boundary.window_height) }},\n                    azi={{ macros.join_list(boundary.azimuths) }}),\n                {% else %}\n                    nConExtWin=0,\n                {%- endif %}\n            {%- endif %}\n            {%- if boundary.type == \"FloorOnGround\" -%}\n                {%- if boundary.number %}\n                    nConBou={{ boundary.number }},\n                    datConBou(\n                    {{ macros.element_parameters(boundary) }},\n                    azi={{ macros.join_list(boundary.azimuths) }}),\n                {% else %}\n                    nConBou=0,\n                {%- endif %}\n            {%- endif %}\n        {%- endfor %}\n        nConPar=0,\n        energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)\n</code></pre></p>"},{"location":"reference/components/#externalwall","title":"ExternalWall","text":""},{"location":"reference/components/#variant-default-from-ideas_6","title":"Variant: default from IDEAS","text":"<p>The following template is used for this component: <pre><code>    {% set tilts = tilts_processing_ideas(element) %}\n    IDEAS.Buildings.Components.OuterWall[{{ element.surfaces | length }}]\n    {{ element.name }}(\n    redeclare parameter {{ package_name }}.Data.Constructions.\n    {{ element.constructions[0].name }}\n    constructionType,\n    A={{  macros.join_list(element.surfaces)}},\n    final azi={{macros.join_list(element.azimuths)}},\n    redeclare package Medium = Medium,\n    final inc={{macros.join_list(tilts)}})\n</code></pre></p>"},{"location":"reference/components/#mergedexternalwall","title":"MergedExternalWall","text":""},{"location":"reference/components/#variant-default-from-ideas_7","title":"Variant: default from IDEAS","text":"<p>The following template is used for this component: <pre><code>    {% set tilts = tilts_processing_ideas(element) %}\n    IDEAS.Buildings.Components.OuterWall[{{ element.surfaces | length }}]\n    {{ element.name }}(\n    redeclare parameter {{ package_name }}.Data.Constructions.\n    {{ element.constructions[0].name }}\n    constructionType,\n    A={{  macros.join_list(element.surfaces)}},\n    final azi={{macros.join_list(element.azimuths)}},\n    redeclare package Medium = Medium,\n    final inc={{macros.join_list(tilts)}})\n</code></pre></p>"},{"location":"reference/components/#threewayvalvecontrol","title":"ThreeWayValveControl","text":""},{"location":"reference/components/#variant-default-from-default_19","title":"Variant: default from DEFAULT","text":"<p>The following template is used for this component: <pre><code>    {{package_name}}.Common.Controls.ventilation.\n    ThreeWayValveControl{{ element.name | capitalize}}\n    {{ element.name }}\n</code></pre></p>"},{"location":"reference/parameters/","title":"Parameters","text":""},{"location":"reference/parameters/#boilercontrolparameters","title":"BoilerControlParameters","text":"<p>The following parameters are valid for the following classes boilercontrol <pre><code>threshold_outdoor_air_cutoff:\n  alias: threshold_outdoor_air_cutoff\n  description: None\n  ifabsent: float(288.15)\n  range: float\nthreshold_to_switch_off_boiler:\n  alias: threshold_to_switch_off_boiler\n  description: None\n  ifabsent: float(288.15)\n  range: float\ntsup_nominal:\n  alias: TSup_nominal\n  description: None\n  ifabsent: float(353.15)\n  range: float\n</code></pre></p>"},{"location":"reference/parameters/#boilerparameters","title":"BoilerParameters","text":"<p>The following parameters are valid for the following classes boiler <pre><code>coefficients_for_efficiency_curve:\n  alias: a\n  description: None\n  ifabsent: string({0.9})\n  range: string\ndiff_pressure:\n  alias: dp\n  description: None\n  ifabsent: string(5000*{2,1})\n  range: string\ndp_nominal:\n  alias: dp_nominal\n  description: None\n  ifabsent: float(5000)\n  range: float\ndt_boi_nominal:\n  alias: dTBoi_nominal\n  description: None\n  ifabsent: float(20)\n  range: float\ndt_rad_nominal:\n  alias: dTRad_nominal\n  description: None\n  ifabsent: float(10)\n  range: float\neffcur:\n  alias: effCur\n  description: None\n  ifabsent: string(Buildings.Fluid.Types.EfficiencyCurves.Constant)\n  range: string\nfraction_of_nominal_flow_rate_where_flow_transitions_to_laminar:\n  alias: deltaM\n  description: None\n  ifabsent: float(0.1)\n  range: float\nheight_of_tank_without_insulation:\n  alias: hTan\n  description: None\n  ifabsent: float(2)\n  range: float\nif_actual_temperature_at_port_is_computed:\n  alias: show_T\n  description: None\n  ifabsent: string(false)\n  range: string\nnominal_heating_power:\n  alias: Q_flow_nominal\n  description: None\n  ifabsent: float(2000)\n  range: float\nnominal_mass_flow_radiator_loop:\n  alias: null\n  func: 'lambda self: self.sca_fac_rad * self.nominal_heating_power / self.dt_rad_nominal\n    / 4200'\n  type: float\nnominal_mass_flow_rate_boiler:\n  alias: null\n  func: 'lambda self: self.sca_fac_rad * self.nominal_heating_power / self.dt_rad_nominal\n    / 4200'\n  type: float\nnumber_of_volume_segments:\n  alias: nSeg\n  description: None\n  ifabsent: int(4)\n  range: integer\nsca_fac_rad:\n  alias: scaFacRad\n  description: None\n  ifabsent: float(1.5)\n  range: float\ntank_volume:\n  alias: VTan\n  description: None\n  ifabsent: float(0.2)\n  range: float\ntemperature_used_to_compute_nominal_efficiency:\n  alias: T_nominal\n  description: None\n  ifabsent: float(353.15)\n  range: float\nthickness_of_insulation:\n  alias: dIns\n  description: None\n  ifabsent: float(0.002)\n  range: float\nuse_linear_relation_between_m_flow_and_dp_for_any_flow_rate:\n  alias: linearizeFlowResistance\n  description: None\n  ifabsent: string(false)\n  range: string\nv_flow:\n  alias: V_flow\n  func: 'lambda self: f''{self.nominal_mass_flow_rate_boiler}'' ''/1000*{0.5,1}'''\n  type: str\n</code></pre></p>"},{"location":"reference/parameters/#emissioncontrolparameters","title":"EmissionControlParameters","text":"<p>The following parameters are valid for the following classes emissioncontrol <pre><code>schedule:\n  alias: schedule\n  ifabsent: string(3600*{7, 19})\n  range: string\ntemperature_heating_setback:\n  alias: THeaSetBack\n  description: None\n  ifabsent: float(16)\n  range: float\ntemperature_heating_setpoint:\n  alias: THeaSet\n  description: None\n  ifabsent: float(24)\n  range: float\n</code></pre></p>"},{"location":"reference/parameters/#occupancyparameters","title":"OccupancyParameters","text":"<p>The following parameters are valid for the following classes occupancy <pre><code>gain:\n  alias: gain\n  description: None\n  ifabsent: string([35; 70; 30])\n  range: string\nheat_gain_if_occupied:\n  alias: k\n  description: None\n  ifabsent: string(1/6/4)\n  range: string\noccupancy:\n  alias: occupancy\n  description: None\n  ifabsent: string(3600*{7, 19})\n  range: string\n</code></pre></p>"},{"location":"reference/parameters/#pidparameters","title":"PIDParameters","text":"<p>The following parameters are valid for the following classes threewayvalvecontrol,collectorcontrol <pre><code>controller_type:\n  alias: controllerType\n  description: None\n  ifabsent: string(Buildings.Controls.OBC.CDL.Types.SimpleController.PI)\n  range: string\nk:\n  alias: k\n  description: None\n  ifabsent: float(1)\n  range: float\nnd:\n  alias: Nd\n  description: None\n  ifabsent: float(10)\n  range: float\nni:\n  alias: Ni\n  description: None\n  ifabsent: float(0.9)\n  range: float\nr:\n  alias: r\n  description: None\n  ifabsent: float(1)\n  range: float\ntd:\n  alias: Td\n  description: None\n  ifabsent: float(0.1)\n  range: float\nti:\n  alias: Ti\n  description: None\n  ifabsent: float(0.5)\n  range: float\ny_max:\n  alias: yMax\n  description: None\n  ifabsent: float(1)\n  range: float\ny_min:\n  alias: yMin\n  description: None\n  ifabsent: float(0)\n  range: float\n</code></pre></p>"},{"location":"reference/parameters/#pumpparameters","title":"PumpParameters","text":"<p>The following parameters are valid for the following classes pump <pre><code>constant_input_set_point:\n  alias: constInput\n  description: None\n  range: float\ncontrol_input_type:\n  alias: inputType\n  description: None\n  ifabsent: string(None)\n  range: string\ndp_nominal:\n  alias: dp_nominal\n  description: None\n  ifabsent: float(10000)\n  range: float\nm_flow_nominal:\n  alias: m_flow_nominal\n  description: None\n  ifabsent: float(0.008)\n  range: float\nper:\n  alias: per\n  description: None\n  ifabsent: string(None)\n  range: string\n</code></pre></p>"},{"location":"reference/parameters/#radiatorparameter","title":"RadiatorParameter","text":"<p>The following parameters are valid for the following classes radiator <pre><code>air_temperature_at_nominal_condition:\n  alias: TAir_nominal\n  description: None\n  ifabsent: float(293.15)\n  range: float\ndp_nominal:\n  alias: dp_nominal\n  description: None\n  ifabsent: float(0)\n  range: float\ndry_mass_of_radiator_that_will_be_lumped_to_water_heat_capacity:\n  alias: mDry\n  func: 'lambda self: 0.0263 * abs(self.nominal_heating_power_positive_for_heating)'\n  type: float\nexponent_for_heat_transfer:\n  alias: n\n  description: None\n  ifabsent: float(1.24)\n  range: float\nfraction_of_nominal_mass_flow_rate_where_transition_to_turbulent_occurs:\n  alias: deltaM\n  description: None\n  ifabsent: float(0.01)\n  range: float\nfraction_radiant_heat_transfer:\n  alias: fraRad\n  description: None\n  ifabsent: float(0.3)\n  range: float\nnominal_heating_power_positive_for_heating:\n  alias: Q_flow_nominal\n  description: None\n  ifabsent: float(2000)\n  range: float\nnumber_of_elements_used_in_the_discretization:\n  alias: nEle\n  description: None\n  ifabsent: int(1)\n  range: integer\nradiative_temperature_at_nominal_condition:\n  alias: TRad_nominal\n  description: None\n  ifabsent: float(293.15)\n  range: float\nuse_linear_relation_between_m_flow_and_dp_for_any_flow_rate:\n  alias: linearized\n  description: None\n  ifabsent: string(false)\n  range: string\nuse_m_flow_f_dp_else_dp_f_m_flow:\n  alias: from_dp\n  description: None\n  ifabsent: string(false)\n  range: string\nwater_inlet_temperature_at_nominal_condition:\n  alias: T_a_nominal\n  description: None\n  ifabsent: float(363.15)\n  range: float\nwater_outlet_temperature_at_nominal_condition:\n  alias: T_b_nominal\n  description: None\n  ifabsent: float(353.15)\n  range: float\nwater_volume_of_radiator:\n  alias: VWat\n  func: lambda self:5.8e-5 * abs(self.nominal_heating_power_positive_for_heating)\n  type: float\n</code></pre></p>"},{"location":"reference/parameters/#spaceparameter","title":"SpaceParameter","text":"<p>The following parameters are valid for the following classes space <pre><code>average_room_height:\n  alias: hRoo\n  description: Average room height [m]\n  ifabsent: float(2)\n  range: float\nfloor_area:\n  alias: AFlo\n  description: Floor area [m2]\n  ifabsent: float(20)\n  range: float\nlinearize_emissive_power:\n  alias: linearizeRadiation\n  description: Set to true to linearize emissive power\n  ifabsent: string(true)\n  range: string\nnominal_mass_flow_rate:\n  alias: m_flow_nominal\n  description: Nominal mass flow rate [kg/s]\n  ifabsent: float(0.01)\n  range: float\nsensible_thermal_mass_scaling_factor:\n  alias: mSenFac\n  description: Factor for scaling the sensible thermal mass of the zone air volume\n  ifabsent: float(1)\n  range: float\ntemperature_initial:\n  alias: T_start\n  description: Initial temperature [K]\n  ifabsent: float(294.15)\n  range: float\nvolume:\n  alias: null\n  func: lambda self:self.floor_area * self.average_room_height\n  type: float\n</code></pre></p>"},{"location":"reference/parameters/#splitvalveparameters","title":"SplitValveParameters","text":"<p>The following parameters are valid for the following classes splitvalve <pre><code>dp_nominal:\n  alias: dp_nominal\n  description: None\n  ifabsent: string({10000,-1,-1})\n  range: string\nfraction_of_nominal_mass_flow_rate_where_transition_to_turbulent_occurs:\n  alias: deltaM\n  description: None\n  ifabsent: float(0.3)\n  range: float\nm_flow_nominal:\n  alias: None\n  description: None\n  ifabsent: string(0.008*{1,-1,-1})\n  range: string\nnominal_mass_flow_rate_for_dynamic_momentum_and_energy_balance:\n  alias: mDyn_flow_nominal\n  description: None\n  range: float\ntime_constant_at_nominal_flow_for_dynamic_energy_and_momentum_balance:\n  alias: tau\n  description: None\n  range: float\nuse_linear_relation_between_m_flow_and_dp_for_any_flow_rate:\n  alias: linearized\n  description: None\n  ifabsent: string(false)\n  range: string\n</code></pre></p>"},{"location":"reference/parameters/#threewayvalveparameters","title":"ThreeWayValveParameters","text":"<p>The following parameters are valid for the following classes threewayvalve <pre><code>Av:\n  alias: Av\n  description: None\n  ifabsent: string(None)\n  range: string\nCv:\n  alias: Cv\n  description: None\n  range: float\nKv:\n  alias: Kv\n  description: None\n  range: float\ndp_fixed_nominal:\n  alias: dpFixed_nominal\n  description: None\n  ifabsent: string({100,0})\n  range: string\ndp_valve_nominal:\n  alias: dpValve_nominal\n  description: None\n  ifabsent: float(6000)\n  range: float\nfra_k:\n  alias: fraK\n  description: None\n  ifabsent: float(0.7)\n  range: float\nfraction_of_nominal_flow_rate_where_linearization_starts_if_y_1:\n  alias: deltaM\n  description: None\n  ifabsent: float(0.02)\n  range: float\nm_flow_nominal:\n  alias: m_flow_nominal\n  description: None\n  ifabsent: float(0.0078)\n  range: float\nrange_of_significant_deviation_from_equal_percentage_law:\n  alias: delta0\n  description: None\n  ifabsent: float(0.01)\n  range: float\nrangeability:\n  alias: R\n  description: None\n  ifabsent: float(50)\n  range: float\nrho_std:\n  alias: rhoStd\n  description: None\n  range: float\nuse_linear_relation_between_m_flow_and_dp_for_any_flow_rate:\n  alias: linearized\n  description: None\n  ifabsent: string({false, false})\n  range: string\nvalve_leakage:\n  alias: l\n  description: None\n  ifabsent: string({0.01,0.01})\n  range: string\n</code></pre></p>"},{"location":"reference/parameters/#valveparameters","title":"ValveParameters","text":"<p>The following parameters are valid for the following classes valve <pre><code>av:\n  alias: Av\n  description: None\n  range: string\ncv:\n  alias: Cv\n  description: None\n  range: float\ndp_fixed_nominal:\n  alias: dpFixed_nominal\n  description: None\n  ifabsent: float(6000)\n  range: float\ndp_valve_nominal:\n  alias: dpValve_nominal\n  description: None\n  ifabsent: float(6000)\n  range: float\nfraction_of_nominal_flow_rate_where_linearization_starts_if_y_1:\n  alias: deltaM\n  description: None\n  ifabsent: float(0.02)\n  range: float\nk_fixed:\n  alias: kFixed\n  range: string\nkv:\n  alias: Kv\n  description: None\n  range: float\nm_flow_nominal:\n  alias: m_flow_nominal\n  description: None\n  ifabsent: float(0.01)\n  range: float\nrange_of_significant_deviation_from_equal_percentage_law:\n  alias: delta0\n  description: None\n  ifabsent: float(0.01)\n  range: float\nrangeability:\n  alias: R\n  description: None\n  ifabsent: float(50)\n  range: float\nuse_linear_relation_between_m_flow_and_dp_for_any_flow_rate:\n  alias: linearized\n  description: None\n  ifabsent: string(false)\n  range: string\nuse_m_flow_f_dp_else_dp_f_m_flow:\n  alias: from_dp\n  description: None\n  ifabsent: string(true)\n  range: string\nvalve_leakage:\n  alias: l\n  description: None\n  ifabsent: float(0.0001)\n  range: float\n</code></pre></p>"},{"location":"reference/parameters/#weatherparameters","title":"WeatherParameters","text":"<p>The following parameters are valid for the following classes weather <pre><code>path:\n  alias: filNam\n  description: None\n  ifabsent: string(None)\n  range: string\n</code></pre></p>"},{"location":"tutorials/first_model/","title":"First model","text":"<p>I assume the previous tutorial has ignited your interest in running your first simulation. This tutorial demonstrates how to generate the Modelica model used in that simulation.</p>"},{"location":"tutorials/first_model/#input-configuration-file","title":"Input configuration file","text":"<p>The configuration describes a building that has insulated walls and a specific glazing system. The walls are constructed using three layers of a material with uniform thermal properties, a common construction method for energy-efficient structures. The building has a floor area of 100 square meters and an average room height of 2.5 meters, indicating it is likely a single-story or low-rise structure. </p> <p>Windows are included in the design, featuring double glazing with an air gap, enhancing thermal performance. The building is also oriented with a specific azimuth (180 degrees), suggesting a planned approach to sunlight exposure. Overall, this building appears to be designed for energy efficiency, likely aiming for good thermal insulation and performance.</p> <pre><code>material:\n  - id: MATERIAL:001\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:002\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:003\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n\nconstructions:\n  - id: CONSTRUCTION:001\n    layers:\n      - material: MATERIAL:001\n        thickness: 0.1\n      - material: MATERIAL:002\n        thickness: 0.1\n      - material: MATERIAL:003\n        thickness: 0.1\nglass_material:\n  - density: 2500.0\n    id: GLASS:001\n    longwave_emissivity: 0.84\n    shortwave_emissivity: 0.67\n    specific_heat_capacity: 840.0\n    thermal_conductivity: 1.0\ngas:\n  - density: 1.2\n    id: AIR:001\n    longwave_emissivity: 0.0\n    shortwave_emissivity: 0.0\n    specific_heat_capacity: 1006.0\n    thermal_conductivity: 0.0256\nglazings:\n- id: INS2AR2020:001\n  layers:\n  - glass: GLASS:001\n    thickness: 0.006\n  - gas: AIR:001\n    thickness: 0.016\n  - glass: GLASS:001\n    thickness: 0.006\nspaces:\n  - parameters:\n      floor_area: 100.0\n      average_room_height: 2.5\n    external_boundaries:\n      external_walls:\n        - surface: 100.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 100.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 200.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 1.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 1.0\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 1.0\n          height: 1.0\n</code></pre>"},{"location":"tutorials/first_model/#code","title":"Code","text":"Test tutorials<pre><code>    from trano.main import create_model\n\n    create_model(\n        \"./first_model.yaml\",\n    )\n</code></pre>"},{"location":"tutorials/first_model/#general-explanation","title":"General Explanation","text":"<p>The code snippet imports the <code>create_model</code> function from the <code>trano.main</code> module and invokes it with a specified YAML configuration file to create a model.</p>"},{"location":"tutorials/first_model/#description-and-parameters","title":"Description and Parameters","text":"<ul> <li>Function: <code>create_model</code></li> <li>Import Source: <code>from trano.main</code></li> <li>Parameter: </li> <li><code>file_path</code>: A string indicating the path to the YAML file (e.g., <code>\"./first_model.yaml\"</code>) that contains model configuration settings.</li> </ul>"},{"location":"tutorials/first_model/#generated-modelica-model","title":"Generated Modelica model","text":"<p>The following code snippet is the generated Modelica model based on the configuration file above. You can copy this code and paste it into a Modelica editor to run the simulation, provided that the necessary libraries, such as the Buildings Library, are loaded within the simulation environment.</p> <pre><code>package first_model\n\npackage Common\n  package Occupancy\n\n    model SimpleOccupancy\n\n  parameter Real occupancy[:]=3600*{7, 19}\n    \"Occupancy table, each entry switching occupancy on or off\";\n\n      parameter Real gain[:, :]=[35; 70; 30]\n    \"Gain to convert from occupancy (per person) to radiant, convective and latent heat in [W/m2] \";\n\n          parameter Real k=1/6/4\n    \"Heat gain if occupied\";\n\n  Buildings.Controls.SetPoints.OccupancySchedule\n                                       occSch2(firstEntryOccupied=true,\n      occupancy=occupancy)\n    \"Occupancy schedule\"\n    annotation (Placement(transformation(extent={{-66,-22},{-46,-2}})));\n  Buildings.Controls.OBC.CDL.Reals.Switch switch2\n    annotation (Placement(transformation(extent={{-20,-12},{0,8}})));\n  Modelica.Blocks.Math.MatrixGain gai2(K=gain)\n    \"Gain to convert from occupancy (per person) to radiant, convective and latent heat in [W/m2] \"\n    annotation (Placement(transformation(extent={{18,-12},{38,8}})));\n   extends Modelica.Blocks.Interfaces.MO(final nout=3);\n  Buildings.Controls.OBC.CDL.Reals.Sources.Constant occ2(k=k)\n    \"Heat gain if occupied in room 2\"\n    annotation (Placement(transformation(extent={{-66,28},{-46,48}})));\n  Buildings.Controls.OBC.CDL.Reals.Sources.Constant zero(k=0)\n    \"Heat gain if occupied in room 2\"\n    annotation (Placement(transformation(extent={{-62,-68},{-42,-48}})));\nequation\n  connect(occSch2.occupied,switch2. u2) annotation (Line(\n      points={{-45,-18},{-28,-18},{-28,-2},{-22,-2}},\n      color={255,0,255},\n      smooth=Smooth.None));\n  connect(switch2.y,gai2. u[1]) annotation (Line(\n      points={{2,-2},{16,-2}},\n      color={0,0,127},\n      smooth=Smooth.None));\n  connect(occ2.y,switch2. u1) annotation (Line(points={{-44,38},{-40,38},{-40,6},\n          {-22,6}},        color={0,0,127}));\n  connect(zero.y, switch2.u3)\n    annotation (Line(points={{-40,-58},{-22,-58},{-22,-10}}, color={0,0,127}));\n  connect(gai2.y, y) annotation (Line(points={{39,-2},{96,-2},{96,0},{110,0}},\n        color={0,0,127}));\n  annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={\n        Ellipse(extent={{10,70},{-26,34}}, lineColor={28,108,200}),\n        Line(points={{-8,34},{-8,-26}}, color={28,108,200}),\n        Line(points={{-8,-26},{-48,-68}}, color={28,108,200}),\n        Line(points={{-8,-26},{34,-70},{32,-70}}, color={28,108,200}),\n        Line(points={{-8,20},{-48,-8}}, color={28,108,200}),\n        Line(points={{-8,20},{44,-8}}, color={28,108,200})}),    Diagram(\n        coordinateSystem(preserveAspectRatio=false)));\nend SimpleOccupancy;\n\n  end Occupancy;\n\n  package Controls\n  package BaseClasses\n    expandable connector DataBus\n      extends Modelica.Icons.SignalBus;\n      annotation (\n        Icon(coordinateSystem(preserveAspectRatio=true, extent={{-100,-100},{100,\n                100}}), graphics={Rectangle(\n              extent={{-20,2},{22,-2}},\n              lineColor={255,204,51},\n              lineThickness=0.5)}),\n        Documentation(info=\"&lt;html&gt;\n&lt;p&gt;\nThis connector defines the &lt;code&gt;expandable connector&lt;/code&gt; ControlBus that\nis used to connect control signals.\nNote, this connector is empty. When using it, the actual content is\nconstructed by the signals connected to this bus.\n&lt;/p&gt;\n&lt;/html&gt;\"));\n    end DataBus;\n  annotation (\n        Icon(graphics={  Rectangle(lineColor = {200, 200, 200}, fillColor = {248, 248, 248},\n                fillPattern =                                                                              FillPattern.HorizontalCylinder, extent = {{-100, -100}, {100, 100}}, radius = 25), Rectangle(lineColor = {128, 128, 128}, extent = {{-100, -100}, {100, 100}}, radius = 25), Ellipse(lineColor = {128, 128, 128}, fillColor = {255, 255, 255},\n                fillPattern =                                                                                                                                                                                                        FillPattern.Solid, extent = {{-30, -30}, {30, 30}})}));\n  end BaseClasses;\n\n    package Interfaces\n      partial model BaseSpaceControl\n        Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a port annotation (\n                Placement(transformation(extent = {{-110, -10}, {-90, 10}}), iconTransformation(extent = {{-110, -10}, {-90, 10}})));\n        Modelica.Blocks.Interfaces.RealOutput y annotation (\n                Placement(transformation(origin = {106, 0}, extent = {{-10, -10}, {10, 10}}), iconTransformation(origin = {106, 0}, extent = {{-10, -10}, {10, 10}})));\n      equation\n\n            annotation (\n                Icon,\n        Diagram);\n      end BaseSpaceControl;\n\n      partial model BaseSubstanceSpaceControl\n        replaceable package Medium = Modelica.Media.Interfaces.PartialMedium\n          \"Medium model\" annotation (choicesAllMatching=true);\n        Modelica.Fluid.Interfaces.FluidPort_a port_a(\n          redeclare final package Medium = Medium)\n          \"Fluid connector a (positive design flow direction is from port_a to port_b)\"\n          annotation (Placement(transformation(extent={{-116,-16},{-82,16}}),\n              iconTransformation(extent={{-110,-9},{-90,9}})));\n        Modelica.Blocks.Interfaces.RealOutput y annotation (\n                Placement(transformation(origin = {106, 0}, extent = {{-10, -10}, {10, 10}}), iconTransformation(origin = {106, 0}, extent = {{-10, -10}, {10, 10}})));\n      equation\n\n            annotation (\n                Icon,\n        Diagram);\n      end BaseSubstanceSpaceControl;\n      annotation (\n        Icon(graphics={  Rectangle(lineColor = {200, 200, 200}, fillColor = {248, 248, 248},\n                fillPattern =                                                                              FillPattern.HorizontalCylinder, extent = {{-100, -100}, {100, 100}}, radius = 25), Rectangle(lineColor = {128, 128, 128}, extent = {{-100, -100}, {100, 100}}, radius = 25), Polygon(origin = {20, 0}, lineColor = {64, 64, 64}, fillColor = {255, 255, 255},\n                fillPattern =                                                                                                                                                                                                        FillPattern.Solid, points = {{-10, 70}, {10, 70}, {40, 20}, {80, 20}, {80, -20}, {40, -20}, {10, -70}, {-10, -70}, {-10, 70}}), Polygon(fillColor = {102, 102, 102}, pattern = LinePattern.None,\n                fillPattern =                                                                                                                                                                                                        FillPattern.Solid, points = {{-100, 20}, {-60, 20}, {-30, 70}, {-10, 70}, {-10, -70}, {-30, -70}, {-60, -20}, {-100, -20}, {-100, 20}})}));\n    end Interfaces;\n\n    package SpaceControls\n      model PID\n              extends Common.Controls.Interfaces.BaseSpaceControl;\n\n                parameter .Modelica.Blocks.Types.SimpleController controllerType=\n                 .Modelica.Blocks.Types.SimpleController.PID \"Type of controller\";\n          parameter Real k(min=0, unit=\"1\") = 1 \"Gain of controller\";\n          parameter Modelica.Units.SI.Time Ti(min=Modelica.Constants.small)=0.5\n            \"Time constant of Integrator block\" annotation (Dialog(enable=\n                  controllerType == .Modelica.Blocks.Types.SimpleController.PI or\n                  controllerType == .Modelica.Blocks.Types.SimpleController.PID));\n          parameter Modelica.Units.SI.Time Td(min=0)=0.1\n            \"Time constant of Derivative block\" annotation (Dialog(enable=\n                  controllerType == .Modelica.Blocks.Types.SimpleController.PD or\n                  controllerType == .Modelica.Blocks.Types.SimpleController.PID));\n          parameter Real yMax(start=1) \"Upper limit of output\";\n          parameter Real yMin=-yMax \"Lower limit of output\";\n          parameter Modelica.Units.SI.Temperature setPoint;\n        Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor TRoo annotation (\n                Placement(transformation(origin = {-542, -226}, extent = {{480, 216}, {500, 236}})));\n        Modelica.Blocks.Continuous.LimPID conRoo(yMax = yMax, yMin = yMin, controllerType = controllerType, k = k, Ti = Ti, Td = Td)  annotation (\n                Placement(transformation(origin = {50, 0}, extent = {{-10, -10}, {10, 10}})));\n        Modelica.Blocks.Sources.RealExpression realExpression(y=setPoint)\n          annotation (Placement(transformation(extent={{-42,36},{-22,56}})));\n      equation\n              connect(port, TRoo.port) annotation (\n                Line(points = {{-100, 0}, {-62, 0}}, color = {191, 0, 0}));\n        connect(conRoo.y, y) annotation (\n                Line(points={{61,0},{106,0}},      color = {0, 0, 127}));\n        connect(TRoo.T, conRoo.u_m) annotation (\n                Line(points={{-41,0},{4,0},{4,-36},{50,-36},{50,-12}},            color = {0, 0, 127}));\n        connect(realExpression.y, conRoo.u_s) annotation (Line(points={{-21,46},{32,46},\n                {32,0},{38,0}}, color={0,0,127}));\n            annotation (\n                Icon(graphics={  Rectangle(lineColor = {0, 0, 127}, fillColor = {255, 255, 255},\n                  fillPattern =                                                                                FillPattern.Solid, extent = {{-100, -100}, {100, 100}}), Line(points = {{-80, 78}, {-80, -90}}, color = {192, 192, 192}), Polygon(lineColor = {192, 192, 192}, fillColor = {192, 192, 192},\n                  fillPattern =                                                                                                                                                                                                        FillPattern.Solid, points = {{-80, 90}, {-88, 68}, {-72, 68}, {-80, 90}}), Line(points = {{-90, -80}, {82, -80}}, color = {192, 192, 192}), Polygon(lineColor = {192, 192, 192}, fillColor = {192, 192, 192},\n                  fillPattern =                                                                                                                                                                                                        FillPattern.Solid, points = {{90, -80}, {68, -72}, {68, -88}, {90, -80}}), Line(points = {{-80, -80}, {-80, -20}, {60, 80}}, color = {0, 0, 127}), Text(textColor = {192, 192, 192}, extent = {{-20, -60}, {80, -20}}, textString = \"PID\")}));\n      end PID;\n\n      model PIDSubstance\n\n        replaceable package Medium = Modelica.Media.Interfaces.PartialMedium\n          \"Medium model\" annotation (choicesAllMatching=true);\n              extends Common.Controls.Interfaces.BaseSubstanceSpaceControl;\n\n                parameter .Modelica.Blocks.Types.SimpleController controllerType=\n                 .Modelica.Blocks.Types.SimpleController.PID \"Type of controller\";\n          parameter Real k(min=0, unit=\"1\") = 1 \"Gain of controller\";\n          parameter Modelica.Units.SI.Time Ti(min=Modelica.Constants.small)=0.5\n            \"Time constant of Integrator block\" annotation (Dialog(enable=\n                  controllerType == .Modelica.Blocks.Types.SimpleController.PI or\n                  controllerType == .Modelica.Blocks.Types.SimpleController.PID));\n          parameter Modelica.Units.SI.Time Td(min=0)=0.1\n            \"Time constant of Derivative block\" annotation (Dialog(enable=\n                  controllerType == .Modelica.Blocks.Types.SimpleController.PD or\n                  controllerType == .Modelica.Blocks.Types.SimpleController.PID));\n          parameter Real yMax(start=1) \"Upper limit of output\";\n          parameter Real yMin=-yMax \"Lower limit of output\";\n          parameter Modelica.Units.SI.Temperature setPoint;\n        Buildings.Fluid.Sensors.PPM                             TRoo( redeclare\n            package                                                                     Medium = Medium) annotation (\n                Placement(transformation(origin = {-542, -226}, extent = {{480, 216}, {500, 236}})));\n        Modelica.Blocks.Continuous.LimPID conRoo(yMax = yMax, yMin = yMin, controllerType = controllerType, k = k, Ti = Ti, Td = Td)  annotation (\n                Placement(transformation(origin = {50, 0}, extent = {{-10, -10}, {10, 10}})));\n        Modelica.Blocks.Sources.RealExpression realExpression(y=setPoint)\n          annotation (Placement(transformation(extent={{-42,38},{-22,58}})));\n      equation\n        connect(conRoo.y, y) annotation (\n                Line(points={{61,0},{106,0}},      color = {0, 0, 127}));\n        connect(realExpression.y, conRoo.u_s) annotation (Line(points={{-21,48},\n                {32,48},{32,0},{38,0}},\n                                color={0,0,127}));\n        connect(TRoo.ppm, conRoo.u_m) annotation (Line(points={{-41,0},{30,0},{30,-18},\n                {50,-18},{50,-12}}, color={0,0,127}));\n        connect(port_a, TRoo.port) annotation (Line(points={{-99,0},{-68,0},{\n                -68,-14},{-52,-14},{-52,-10}}, color={0,127,255}));\n            annotation (\n                Icon(graphics={  Rectangle(lineColor = {0, 0, 127}, fillColor = {255, 255, 255},\n                  fillPattern =                                                                                FillPattern.Solid, extent = {{-100, -100}, {100, 100}}), Line(points = {{-80, 78}, {-80, -90}}, color = {192, 192, 192}), Polygon(lineColor = {192, 192, 192}, fillColor = {192, 192, 192},\n                  fillPattern =                                                                                                                                                                                                        FillPattern.Solid, points = {{-80, 90}, {-88, 68}, {-72, 68}, {-80, 90}}), Line(points = {{-90, -80}, {82, -80}}, color = {192, 192, 192}), Polygon(lineColor = {192, 192, 192}, fillColor = {192, 192, 192},\n                  fillPattern =                                                                                                                                                                                                        FillPattern.Solid, points = {{90, -80}, {68, -72}, {68, -88}, {90, -80}}), Line(points = {{-80, -80}, {-80, -20}, {60, 80}}, color = {0, 0, 127}), Text(textColor = {192, 192, 192}, extent = {{-20, -60}, {80, -20}}, textString = \"PID\")}));\n      end PIDSubstance;\n\n\n\n      annotation (\n        Icon(graphics={  Rectangle(lineColor = {200, 200, 200}, fillColor = {248, 248, 248},\n                fillPattern =                                                                              FillPattern.HorizontalCylinder, extent = {{-100, -100}, {100, 100}}, radius = 25)}));\n    end SpaceControls;\n  annotation (\n      Icon(graphics={  Rectangle(lineColor = {200, 200, 200}, fillColor = {248, 248, 248},\n              fillPattern =                                                                              FillPattern.HorizontalCylinder, extent = {{-100, -100}, {100, 100}}, radius = 25), Rectangle(lineColor = {200, 200, 200}, fillColor = {248, 248, 248},\n              fillPattern =                                                                                                                                                                                                        FillPattern.HorizontalCylinder, extent = {{-100, -100}, {100, 100}}, radius = 25), Rectangle(lineColor = {128, 128, 128}, extent = {{-100, -100}, {100, 100}}, radius = 25), Rectangle(origin = {0, 35.1488}, fillColor = {255, 255, 255}, extent = {{-30, -20.1488}, {30, 20.1488}}), Rectangle(origin = {0, -34.8512}, fillColor = {255, 255, 255}, extent = {{-30, -20.1488}, {30, 20.1488}}), Line(origin = {-51.25, 0}, points = {{21.25, -35}, {-13.75, -35}, {-13.75, 35}, {6.25, 35}}), Polygon(origin = {-40, 35}, pattern = LinePattern.None,\n              fillPattern =                                                                                                                                                                                                        FillPattern.Solid, points = {{10, 0}, {-5, 5}, {-5, -5}, {10, 0}}), Line(origin = {51.25, 0}, points = {{-21.25, 35}, {13.75, 35}, {13.75, -35}, {-6.25, -35}}), Polygon(origin = {40, -35}, pattern = LinePattern.None,\n              fillPattern =                                                                                                                                                                                                        FillPattern.Solid, points = {{-10, 0}, {5, 5}, {5, -5}, {-10, 0}})}));\n\n\n    package ventilation\n  model AHU_G36\n  parameter Real VUncDesOutAir_flow=0.03;\n  parameter Real VDesTotOutAir_flow=0.03;\n      Buildings.Controls.OBC.ASHRAE.G36.AHUs.MultiZone.VAV.Controller\n        mulAHUCon(\n        eneStd=Buildings.Controls.OBC.ASHRAE.G36.Types.EnergyStandard.ASHRAE90_1,\n\n        venStd=Buildings.Controls.OBC.ASHRAE.G36.Types.VentilationStandard.ASHRAE62_1,\n\n        ashCliZon=Buildings.Controls.OBC.ASHRAE.G36.Types.ASHRAEClimateZone.Zone_1A,\n\n        have_frePro=false,\n        minOADes=Buildings.Controls.OBC.ASHRAE.G36.Types.OutdoorAirSection.DedicatedDampersAirflow,\n\n        buiPreCon=Buildings.Controls.OBC.ASHRAE.G36.Types.PressureControl.BarometricRelief,\n\n        ecoHigLimCon=Buildings.Controls.OBC.ASHRAE.G36.Types.ControlEconomizer.FixedDryBulb,\n\n        cooCoi=Buildings.Controls.OBC.ASHRAE.G36.Types.CoolingCoil.None,\n        heaCoi=Buildings.Controls.OBC.ASHRAE.G36.Types.HeatingCoil.None,\n        have_perZonRehBox=false, VUncDesOutAir_flow = VUncDesOutAir_flow, VDesTotOutAir_flow = VDesTotOutAir_flow)\n        annotation (Placement(transformation(extent={{-12,-14},{28,74}})));\n      BaseClasses.DataBus dataBus annotation (Placement(transformation(\n              extent={{-120,-20},{-80,20}}), iconTransformation(extent={{\n                -112,-10},{-92,10}})));\n  equation\n      connect(mulAHUCon.ySupFan, dataBus.ySupFan) annotation (Line(points={\n              {30,27.8},{36,27.8},{36,-20},{-74,-20},{-74,0},{-100,0}},\n            color={0,0,127}), Text(\n          string=\"%second\",\n          index=1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(mulAHUCon.y1SupFan, dataBus.y1SupFan) annotation (Line(points\n            ={{30,30},{38,30},{38,-22},{-76,-22},{-76,0},{-100,0}}, color={\n              255,0,255}), Text(\n          string=\"%second\",\n          index=1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(mulAHUCon.yOutDam, dataBus.yOutDam) annotation (Line(points={\n              {30,37},{36,37},{36,20},{34,20},{34,-18},{-70,-18},{-70,0},{\n              -100,0}}, color={0,0,127}), Text(\n          string=\"%second\",\n          index=1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(mulAHUCon.yRetDam, dataBus.yRetDam) annotation (Line(points={\n              {30,43},{36,43},{36,78},{-74,78},{-74,0},{-100,0}}, color={0,\n              0,127}), Text(\n          string=\"%second\",\n          index=1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(mulAHUCon.yMinOutDam, dataBus.yMinOutDam) annotation (Line(\n            points={{30,49},{38,49},{38,80},{-78,80},{-78,24},{-76,24},{-76,\n              0},{-100,0}}, color={0,0,127}), Text(\n          string=\"%second\",\n          index=1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(mulAHUCon.VEffAirOut_flow_min, dataBus.VEffAirOut_flow_min)\n        annotation (Line(points={{30,53},{30,58},{34,58},{34,76},{-72,76},{\n              -72,0},{-100,0}}, color={0,0,127}), Text(\n          string=\"%second\",\n          index=1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(mulAHUCon.TAirSupSet, dataBus.TAirSupSet) annotation (Line(\n            points={{30,64},{34,64},{34,70},{32,70},{32,76},{-20,76},{-20,0},\n              {-100,0}}, color={0,0,127}), Text(\n          string=\"%second\",\n          index=1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.VAirOut_flow, mulAHUCon.VAirOut_flow) annotation (\n          Line(\n          points={{-100,0},{-22,0},{-22,37},{-14,37}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.uOutAirFra_max, mulAHUCon.uOutAirFra_max) annotation\n        (Line(\n          points={{-100,0},{-24,0},{-24,47},{-14,47}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.VSumZonPri_flow, mulAHUCon.VSumZonPri_flow)\n        annotation (Line(\n          points={{-100,0},{-26,0},{-26,50},{-14,50}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.VSumAdjAreBreZon_flow, mulAHUCon.VSumAdjAreBreZon_flow)\n        annotation (Line(\n          points={{-100,0},{-28,0},{-28,53},{-14,53}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.TAirSup, mulAHUCon.TAirSup) annotation (Line(\n          points={{-100,0},{-30,0},{-30,58},{-14,58}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.u1SupFan, mulAHUCon.u1SupFan) annotation (Line(\n          points={{-100,0},{-32,0},{-32,61},{-14,61}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.uZonTemResReq, mulAHUCon.uZonTemResReq) annotation (\n          Line(\n          points={{-100,0},{-34,0},{-34,63},{-14,63}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.TOut, mulAHUCon.TOut) annotation (Line(\n          points={{-100,0},{-36,0},{-36,66},{-14,66}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.dpDuc, mulAHUCon.dpDuc) annotation (Line(\n          points={{-100,0},{-38,0},{-38,68},{-14,68}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.uZonPreResReq, mulAHUCon.uZonPreResReq) annotation (\n          Line(\n          points={{-100,0},{-40,0},{-40,71},{-14,71}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.uAhuOpeMod, mulAHUCon.uAhuOpeMod) annotation (Line(\n          points={{-100,0},{-42,0},{-42,73},{-14,73}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-6,3},{-6,3}},\n          horizontalAlignment=TextAlignment.Right));\n      connect(dataBus.VSumAdjPopBreZon_flow, mulAHUCon.VSumAdjPopBreZon_flow)\n        annotation (Line(\n          points={{-100,0},{-14,0},{-14,55}},\n          color={255,204,51},\n          thickness=0.5), Text(\n          string=\"%first\",\n          index=-1,\n          extent={{-3,-6},{-3,-6}},\n          horizontalAlignment=TextAlignment.Right));\n      annotation (Icon(coordinateSystem(preserveAspectRatio=false),\n            graphics={Rectangle(\n              extent={{-100,98},{98,-100}},\n              lineColor={28,108,200},\n              fillColor={28,108,200},\n              fillPattern=FillPattern.Solid)}), Diagram(coordinateSystem(\n              preserveAspectRatio=false)));\n  end AHU_G36;\n        model OccupancyOccupancy_1\nextends first_model.Common.Occupancy.SimpleOccupancy ;\nControls.BaseClasses.DataBus dataBus\n    annotation (Placement(transformation(\n  extent={{-120,-18},{-80,22}}), iconTransformation(extent={{-120,62},{-78,98}})));\nequation\nconnect(dataBus.OccupiedSpace_1, occSch2.occupied);\n end OccupancyOccupancy_1;\n\n        model DataServer\nreplaceable package Medium = Modelica.Media.Interfaces.PartialMedium;\nModelica.Thermal.HeatTransfer.Sensors.TemperatureSensor[1]\nTRoo annotation (\nPlacement(transformation(origin={-544,-226},\nextent = {{480, 216}, {500, 236}})));Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a[1]\nport annotation (\nPlacement(transformation(extent={{-112,-10},{-92,10}}),\niconTransformation(extent = {{-110, -10}, {-90, 10}})));Buildings.Fluid.Sensors.PPM[1] TRoo1(redeclare\npackage Medium = Medium)annotation (\nPlacement(transformation(origin={-542,-268},\nextent = {{480, 216}, {500, 236}})));Modelica.Fluid.Interfaces.FluidPort_a[1]\nport_a(redeclare package Medium\n= Medium)annotation (Placement(transformation(extent={{-116,-58},{-82,-26}}),\niconTransformation(origin = {-2, -42}, extent = {{-110, -9}, {-90, 9}})));  Controls.BaseClasses.DataBus dataBus\n    annotation (Placement(transformation(\n  extent={{-120,-18},{-80,22}}), iconTransformation(extent={{-120,62},{-78,98}})));\nequation\nconnect(port[1],TRoo[1]. port);\nconnect(port_a[1], TRoo1[1].port);\nconnect(dataBus.TZonSpace_1, TRoo[1].T);\nconnect(dataBus.ppmCO2Space_1, TRoo1[1].ppm);\nend DataServer;\n\n\n\n      partial model PartialBoilerControl\n  parameter Modelica.Units.SI.Temperature TSup_nominal=80 + 273.15 \"Check for temperature at the bottom of the tank\";\n    parameter Modelica.Units.SI.Temperature threshold_outdoor_air_cutoff=15 + 273.15 \"Output true if outdoor air is below heating cut-off limit\";\n    parameter Modelica.Units.SI.Temperature threshold_to_switch_off_boiler=15 + 273.15 \"Threshold to switch boiler off\";\n  Buildings.Controls.OBC.CDL.Reals.GreaterThreshold greThr(t=\n        TSup_nominal + 5)\n    \"Check for temperature at the bottom of the tank\" annotation (\n      Placement(transformation(extent={{-114,-142},{-94,-122}})));\n  Buildings.Controls.OBC.CDL.Conversions.BooleanToReal booToReaPum\n    \"Signal converter for pump\" annotation (Placement(transformation(\n          extent={{-94,-32},{-114,-12}})));\n  Buildings.Controls.OBC.CDL.Reals.Greater lesThr\n    \"Check for temperature at the top of the tank\" annotation (\n      Placement(transformation(extent={{-114,-80},{-94,-60}})));\n  Modelica.Blocks.MathBoolean.Or pumOnSig(nu=3)\n    \"Signal for pump being on\"\n    annotation (Placement(transformation(extent={{146,-2},{166,18}})));\n  Buildings.Controls.OBC.CDL.Conversions.BooleanToReal booToReaBoi\n    \"Signal converter for boiler\"\n    annotation (Placement(transformation(extent={{-94,-2},{-114,18}})));\n  Buildings.Controls.OBC.CDL.Reals.Sources.Constant dTThr(k=1)\n    \"Threshold to switch boiler off\" annotation (Placement(\n        transformation(extent={{-204,-112},{-184,-92}})));\n  Buildings.Controls.OBC.CDL.Reals.Subtract sub1 annotation (Placement(\n        transformation(extent={{-164,-88},{-144,-68}})));\n  Modelica.Blocks.Logical.LessThreshold lesThrTOut(threshold=threshold_outdoor_air_cutoff)\n    \"Output true if outdoor air is below heating cut-off limit\"\n    annotation (Placement(transformation(extent={{-114,38},{-94,58}})));\n  Buildings.Controls.OBC.CDL.Logical.And and1\n    \"Logical test to enable pump and subsequently the boiler\"\n    annotation (Placement(transformation(extent={{-74,38},{-54,58}})));\n  Modelica.StateGraph.InitialStep off(nIn=1, nOut=1)\n                      \"Pump and furnace off\"\n    annotation (Placement(transformation(extent={{-74,78},{-54,98}})));\n  Modelica.StateGraph.TransitionWithSignal T1 \"Transition to pump on\"\n    annotation (Placement(transformation(extent={{-44,78},{-24,98}})));\n  Modelica.StateGraph.StepWithSignal pumOn(nIn=1, nOut=1)\n                           \"Pump on\"\n    annotation (Placement(transformation(extent={{-14,78},{6,98}})));\n  Modelica.StateGraph.Transition T3(enableTimer=true, waitTime=10)\n    \"Transition to boiler on\"\n    annotation (Placement(transformation(extent={{16,78},{36,98}})));\n  Modelica.StateGraph.StepWithSignal boiOn(nIn=1, nOut=1)\n                           \"Boiler on\"\n    annotation (Placement(transformation(extent={{46,78},{66,98}})));\n  Modelica.StateGraph.TransitionWithSignal T2\n    \"Transition that switches boiler off\"\n    annotation (Placement(transformation(extent={{76,78},{96,98}})));\n  Modelica.StateGraph.StepWithSignal pumOn2(nIn=1, nOut=1)\n                            \"Pump on\"\n    annotation (Placement(transformation(extent={{106,78},{126,98}})));\n  Modelica.StateGraph.Transition T4(enableTimer=true, waitTime=10)\n    \"Transition to boiler on\"\n    annotation (Placement(transformation(extent={{136,78},{156,98}})));\n  inner Modelica.StateGraph.StateGraphRoot stateGraphRoot\n    \"Root of the state graph\" annotation (Placement(transformation(\n          extent={{-134,98},{-114,118}})));\n  Buildings.Controls.OBC.CDL.Reals.Sources.Constant dTThr1(k=threshold_to_switch_off_boiler) \"Threshold to switch boiler off\" annotation (Placement(\n        transformation(extent={{-208,-22},{-188,-2}})));\nequation\n  connect(booToReaPum.u, pumOnSig.y)\n                     annotation (Line(\n      points={{-92,-22},{176,-22},{176,8},{167.5,8}},\n      color={255,0,255},\n      smooth=Smooth.None));\n  connect(sub1.y, lesThr.u2)\n             annotation (Line(\n      points={{-142,-78},{-116,-78}},\n      color={0,0,127},\n      smooth=Smooth.None));\n  connect(dTThr.y, sub1.u2)\n            annotation (Line(\n      points={{-182,-102},{-174,-102},{-174,-84},{-166,-84}},\n      color={0,0,127},\n      smooth=Smooth.None));\n  connect(lesThr.y, and1.u2)\n             annotation (Line(\n      points={{-92,-70},{-84,-70},{-84,40},{-76,40}},\n      color={255,0,255},\n      smooth=Smooth.None));\n  connect(lesThrTOut.y, and1.u1)\n                 annotation (Line(\n      points={{-93,48},{-76,48}},\n      color={255,0,255},\n      smooth=Smooth.None));\n  connect(and1.y, T1.condition)\n                annotation (Line(points={{-52,48},{-44,48},{-44,42},{-36,\n          42},{-36,58},{-34,58},{-34,76}},\ncolor={255,0,255}));\n  connect(greThr.y, T2.condition)\n                  annotation (Line(points={{-92,-132},{86,-132},{86,76}},\n        color={255,0,255}));\n  connect(boiOn.active, booToReaBoi.u)\n                       annotation (Line(points={{56,77},{56,8},{-92,8}},\n        color={255,0,255}));\n  connect(pumOn2.active, pumOnSig.u[1])\n                        annotation (Line(points={{116,77},{116,5.66667},\n          {146,5.66667}},\n           color={255,0,255}));\n  connect(boiOn.active, pumOnSig.u[2])\n                       annotation (Line(points={{56,77},{56,8},{146,8}},\n        color={255,0,255}));\n  connect(pumOn.active, pumOnSig.u[3])\n                       annotation (Line(points={{-4,77},{-4,10.3333},{146,10.3333}},\n                         color={255,0,255}));\n  connect(off.outPort[1], T1.inPort)\n    annotation (Line(points={{-53.5,88},{-38,88}}, color={0,0,0}));\n  connect(T1.outPort, pumOn.inPort[1])\n    annotation (Line(points={{-32.5,88},{-15,88}}, color={0,0,0}));\n  connect(pumOn.outPort[1], T3.inPort)\n                       annotation (Line(points={{6.5,88},{22,88}},\n                     color={0,0,0}));\n  connect(T3.outPort, boiOn.inPort[1])\n    annotation (Line(points={{27.5,88},{45,88}}, color={0,0,0}));\n  connect(boiOn.outPort[1], T2.inPort)\n    annotation (Line(points={{66.5,88},{82,88}}, color={0,0,0}));\n  connect(T2.outPort, pumOn2.inPort[1])\n    annotation (Line(points={{87.5,88},{105,88}}, color={0,0,0}));\n  connect(pumOn2.outPort[1], T4.inPort)\n    annotation (Line(points={{126.5,88},{142,88}}, color={0,0,0}));\n  connect(T4.outPort, off.inPort[1])\n                     annotation (Line(points={{147.5,88},{166,88},{166,118},\n          {-94,118},{-94,88},{-75,88}},\n                                color={0,0,0}));\n  connect(\n  dTThr1.y, lesThr.u1) annotation (Line(points={{-186,-12},{-124,-12},{\n          -124,\n  -70},{-116,-70}}, color={0,0,127}));\n  annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={\n            {-260,-180},{260,160}})), Diagram(coordinateSystem(\n          preserveAspectRatio=false, extent={{-260,-180},{260,160}})));\nend PartialBoilerControl;\n\nend ventilation;\n    end Controls;\n\n  package Fluid\n  package Boilers\n  model Simple\n\n  extends Buildings.Fluid.Interfaces.PartialTwoPort;\n  Buildings.Fluid.Sources.Boundary_pT bou(use_T_in = true, nPorts = 2, redeclare\n            final package                                                                      Medium = Medium)  annotation (\n          Placement(transformation(origin = {90, 188}, extent = {{-82, -180}, {-62, -160}})));\n  Modelica.Blocks.Sources.Constant constant1(k = 273 + 70)  annotation (\n          Placement(transformation(origin = {-32, 20}, extent = {{-10, -10}, {10, 10}})));\n  equation\n  connect(constant1.y, bou.T_in) annotation (\n          Line(points = {{-20, 20}, {6, 20}, {6, 22}}, color = {0, 0, 127}));\n  connect(bou.ports[1], port_b) annotation (\n          Line(points = {{28, 18}, {100, 18}, {100, 0}}, color = {0, 127, 255}));\n  connect(bou.ports[2], port_a) annotation (\n          Line(points = {{28, 18}, {-100, 18}, {-100, 0}}, color = {0, 127, 255}));\n      annotation (\n          Icon(graphics={  Rectangle(fillPattern = FillPattern.Solid, extent = {{-80, 80}, {80, -80}}), Rectangle(fillColor = {255, 255, 255},\n                  fillPattern =                                                                                                                              FillPattern.Solid, extent = {{-68, 70}, {70, -70}}), Polygon(lineColor = {0, 0, 255}, fillColor = {0, 0, 255},\n                  fillPattern =                                                                                                                                                                                                        FillPattern.Solid, points = {{-68, 18}, {-68, 18}, {-54, 32}, {-28, 16}, {0, 30}, {26, 16}, {46, 32}, {70, 18}, {70, 18}, {70, -70}, {70, -70}, {-68, -70}, {-68, -70}, {-68, 18}}, smooth = Smooth.Bezier)}));\n  end Simple;\n\npartial model PartialBoilerWithStorage\n  replaceable package MediumW = Modelica.Media.Interfaces.PartialMedium\n      \"Medium model\" annotation (choicesAllMatching=true);\n  extends Buildings.Fluid.Interfaces.PartialTwoPort(\n                                            redeclare package Medium = MediumW);\n\n\n  parameter Real a[:]={0.9} \"Coefficients for efficiency curve\";\n  parameter Buildings.Fluid.Types.EfficiencyCurves effCur=Buildings.Fluid.Types.EfficiencyCurves.Constant\n    \"Curve used to compute the efficiency\";\n  parameter Modelica.Units.SI.Temperature T_nominal=353.15\n    \"Temperature used to compute nominal efficiency (only used if efficiency curve depends on temperature)\"\n    annotation (Dialog(enable=(effCur == Buildings.Fluid.Types.EfficiencyCurves.QuadraticLinear)));\n\n\n  parameter Buildings.Fluid.Data.Fuels.Generic fue \"Fuel type\"\n    annotation (choicesAllMatching=true);\n\n  parameter Modelica.Units.SI.Power Q_flow_nominal \"Nominal heating power\";\n  parameter Boolean linearizeFlowResistance=false\n    \"= true, use linear relation between m_flow and dp for any flow rate\"\n    annotation (Dialog(enable=computeFlowResistance,\n       tab=\"Flow resistance\"));\n  parameter Modelica.Units.SI.PressureDifference dp_nominal(min=0, displayUnit=\n\"Pa\") \"Pressure difference\" annotation (Dialog(group=\"Nominal condition\"));\nparameter Modelica.Units.SI.Pressure dp[:]=(3000 + 2000)*{2,1} \"Pressure\";\nparameter Real V_flow[:] = 0.001/1000*{0.5,1};\n  parameter Real deltaM=0.1\n    \"Fraction of nominal flow rate where flow transitions to laminar\";\nparameter Modelica.Units.SI.MassFlowRate nominal_mass_flow_rate_boiler;\nparameter Modelica.Units.SI.MassFlowRate nominal_mass_flow_radiator_loop;\n  parameter Boolean show_T=false;\n\n\n  parameter Modelica.Units.SI.Volume VTan \"Tank volume\";\n  parameter Modelica.Units.SI.Length hTan \"Height of tank (without insulation)\";\n  parameter Modelica.Units.SI.Length dIns \"Thickness of insulation\";\n  parameter Modelica.Units.SI.ThermalConductivity kIns=0.04\n    \"Specific heat conductivity of insulation\";\n  parameter Integer nSeg(min=2) = 2 \"Number of volume segments\";\n\n\n  Buildings.Fluid.Movers.SpeedControlled_y pumBoi(\n    redeclare package Medium = MediumW,\nper(pressure(V_flow=V_flow, dp=dp)),\n    use_inputFilter=false,\n    energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState)\n    \"Pump for boiler circuit\" annotation (Placement(transformation(extent={{-10,\n    -10},{10,10}}, origin={-8,10})));\n\n  Buildings.Fluid.Boilers.BoilerPolynomial boi(\n    a=a,\n    effCur=effCur,\n    redeclare package Medium = MediumW,\n    Q_flow_nominal=Q_flow_nominal,\n    m_flow_nominal=nominal_mass_flow_rate_boiler,\n    fue=fue,\n    dp_nominal=dp_nominal,\n    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,\n    T_start=293.15) \"Boiler\"\n    annotation (Placement(transformation(extent={{-74,0},{-54,20}})));\n  Buildings.HeatTransfer.Sources.FixedTemperature TAmb(T=288.15)\n    \"Ambient temperature in boiler room\"\n    annotation (Placement(transformation(extent={{-14,74},{6,94}})));\n  Buildings.Fluid.Storage.StratifiedEnhanced tan1(\n    m_flow_nominal=nominal_mass_flow_radiator_loop,\n    dIns=dIns,\n    redeclare package Medium = MediumW,\n    hTan=hTan,\n    nSeg=nSeg,\n    show_T=true,\n    VTan=VTan,\n    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial) \"Storage tank\"\n    annotation (Placement(transformation(extent={{12,-72},{52,-32}})));\n  Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor tanTemBot\n    \"Tank temperature\"\n    annotation (Placement(transformation(extent={{68,-66},{88,-46}})));\n  Modelica.Thermal.HeatTransfer.Sensors.TemperatureSensor tanTemTop\n    \"Tank temperature\"\n    annotation (Placement(transformation(extent={{68,-34},{88,-14}})));\n  Buildings.Fluid.Sources.Boundary_pT bou(nPorts=1, redeclare package Medium =\nMediumW) \"Fixed boundary condition, needed to provide a pressure in the system\"\n    annotation (Placement(transformation(extent={{-74,68},{-54,88}})));\n  Buildings.Fluid.FixedResistances.Junction splVal3(\n    dp_nominal={0,0,0},\n    m_flow_nominal=nominal_mass_flow_rate_boiler*{-1,-1,1},\n    redeclare package Medium = MediumW,\n    energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState) \"Flow splitter\"\n    annotation (Placement(transformation(\nextent={{10,-10},{-10,10}},\nrotation=180,\norigin={30,-98})));\n  Buildings.Fluid.FixedResistances.Junction splVal4(\n    dp_nominal={0,0,0},\n    m_flow_nominal=nominal_mass_flow_rate_boiler*{1,1,-1},\n    redeclare package Medium = MediumW,\n    energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState) \"Flow splitter\"\n    annotation (Placement(transformation(\nextent={{10,10},{-10,-10}},\nrotation=180,\norigin={32,10})));\n        Buildings.Fluid.Sensors.TemperatureTwoPort temperature_sensor1(\n      redeclare package Medium = MediumW, m_flow_nominal=nominal_mass_flow_rate_boiler)\n                                      \"Radiator\"  annotation (\n    Placement(transformation(origin={-36,11},\n    extent = {{-10, -10}, {10, 10}},\n        rotation=0)));\n        Buildings.Fluid.Sensors.TemperatureTwoPort temperature_sensor2(\n      redeclare package Medium = MediumW, m_flow_nominal=nominal_mass_flow_rate_boiler)\n                                      \"Radiator\"  annotation (\n    Placement(transformation(origin={66,-85},\n    extent = {{-10, -10}, {10, 10}},\n        rotation=0)));\n        Buildings.Fluid.Sensors.TemperatureTwoPort temperature_sensor3(\n      redeclare package Medium = MediumW, m_flow_nominal=nominal_mass_flow_rate_boiler)\n                                      \"Radiator\"  annotation (\n    Placement(transformation(origin={32,-16.5},\n    extent={{-8.5,-8},{8.5,8}},\n        rotation=-90)));\n        Buildings.Fluid.Sensors.TemperatureTwoPort temperature_sensor4(\n      redeclare package Medium = MediumW, m_flow_nominal=nominal_mass_flow_rate_boiler)\n                                      \"Radiator\"  annotation (\n    Placement(transformation(origin={-34,-97},\n    extent = {{-10, -10}, {10, 10}},\n        rotation=0)));\n  Buildings.Fluid.Sensors.MassFlowRate senMasFlo1(redeclare package Medium =\n        MediumW)\n    annotation (Placement(transformation(extent={{10,-10},{-10,10}},\n        rotation=90,\n        origin={46,30})));\n  Buildings.Fluid.Sensors.MassFlowRate senMasFlo2(redeclare package Medium =\n        MediumW)\n    annotation (Placement(transformation(extent={{-10,-10},{10,10}},\n        rotation=90,\n        origin={-78,-46})));\n  Buildings.Fluid.Sensors.MassFlowRate senMasFlo3(redeclare package Medium =\n        MediumW)\n    annotation (Placement(transformation(extent={{-6,-7},{6,7}},\n        rotation=0,\n        origin={13,10})));\n  Buildings.Fluid.Sensors.MassFlowRate senMasFlo4(redeclare package Medium =\n        MediumW)\n    annotation (Placement(transformation(extent={{-10,-10},{10,10}},\n        rotation=0,\n        origin={94,-86})));\n  Modelica.Blocks.Math.Gain gain(k=Q_flow_nominal)\n    annotation (Placement(transformation(extent={{-70,-22},{-58,-10}})));\n  Modelica.Blocks.Continuous.Integrator integrator\n    annotation (Placement(transformation(extent={{-46,-26},{-30,-10}})));\n  Modelica.Blocks.Math.Gain gain1(k=2.77778e-7)\n    annotation (Placement(transformation(extent={{-46,-52},{-26,-32}})));\n  Modelica.Blocks.Math.Gain gain2(k=0.9*(1/11))\n    annotation (Placement(transformation(extent={{-26,-80},{-6,-60}})));\n  Modelica.Blocks.Routing.RealPassThrough Boiy\n    annotation (Placement(transformation(extent={{-122,36},{-104,54}})));\nequation\n  connect(\n  TAmb.port, boi.heatPort)\n           annotation (Line(\n      points={{6,84},{20,84},{20,30},{-64,30},{-64,17.2}},\n      color={191,0,0},\n      smooth=Smooth.None));\n  connect(\n  tan1.heaPorVol[1], tanTemTop.port)\n                     annotation (Line(\n      points={{32,-52.3},{32,-52},{64,-52},{64,-24},{68,-24}},\n      color={191,0,0},\n      smooth=Smooth.None));\n  connect(\n  tanTemBot.port, tan1.heaPorVol[tan1.nSeg])\n                             annotation (Line(\n      points={{68,-56},{56,-56},{56,-52},{32,-52}},\n      color={191,0,0},\n      smooth=Smooth.None));\n  connect(\n  tan1.heaPorTop, TAmb.port)\n             annotation (Line(\n      points={{36,-37.2},{62,-37.2},{62,84},{6,84}},\n      color={191,0,0},\n      smooth=Smooth.None));\n  connect(\n  TAmb.port, tan1.heaPorSid)\n             annotation (Line(\n      points={{6,84},{62,84},{62,-50},{54,-50},{54,-52},{43.2,-52}},\n      color={191,0,0},\n      smooth=Smooth.None));\n  connect(\n  TAmb.port, tan1.heaPorBot)\n             annotation (Line(\n      points={{6,84},{62,84},{62,-50},{54,-50},{54,-52},{8,-52},{8,-80},{36,-80},\n          {36,-66.8}},\n      color={191,0,0},\n      smooth=Smooth.None));\n  connect(\n  bou.ports[1], boi.port_a)\n            annotation (Line(\n      points={{-54,78},{-48,78},{-48,32},{-80,32},{-80,10},{-74,10}},\n      color={0,127,255},\n      smooth=Smooth.None));\n  connect(\n  tan1.port_b, splVal3.port_3) annotation (Line(points={{32,-72},{32,-84},{30,-84},\n          {30,-88}}, color={0,127,255}));\n  connect(boi.port_b, temperature_sensor1.port_a) annotation (Line(points={{-54,\n          10},{-50,10},{-50,11},{-46,11}}, color={0,127,255}));\n  connect(temperature_sensor1.port_b, pumBoi.port_a) annotation (Line(points={{-26,11},\n          {-23,11},{-23,10},{-18,10}},     color={0,127,255}));\n  connect(splVal3.port_2, temperature_sensor2.port_a) annotation (Line(points={{40,-98},\n          {52,-98},{52,-85},{56,-85}},         color={0,127,255}));\n  connect(splVal4.port_3, temperature_sensor3.port_a)\n    annotation (Line(points={{32,0},{32,-8}}, color={0,127,255}));\n  connect(temperature_sensor3.port_b, tan1.port_a)\n    annotation (Line(points={{32,-25},{32,-32}}, color={0,127,255}));\n  connect(splVal3.port_1, temperature_sensor4.port_b) annotation (Line(points={{20,-98},\n          {18,-97},{-24,-97}},                 color={0,127,255}));\n  connect(senMasFlo1.port_b, splVal4.port_2) annotation (Line(points={{46,20},{46,\n          16},{42,16},{42,10}}, color={0,127,255}));\n  connect(boi.port_a, senMasFlo2.port_b)\n    annotation (Line(points={{-74,10},{-78,10},{-78,-36}}, color={0,127,255}));\n  connect(temperature_sensor4.port_a, senMasFlo2.port_a) annotation (Line(\n        points={{-44,-97},{-44,-98},{-78,-98},{-78,-56}}, color={0,127,255}));\n  connect(splVal4.port_1, senMasFlo3.port_b)\n    annotation (Line(points={{22,10},{19,10}}, color={0,127,255}));\n  connect(senMasFlo3.port_a, pumBoi.port_b)\n    annotation (Line(points={{7,10},{2,10}}, color={0,127,255}));\n  connect(temperature_sensor2.port_b, senMasFlo4.port_a) annotation (Line(\n        points={{76,-85},{80,-85},{80,-86},{84,-86}}, color={0,127,255}));\n  connect(senMasFlo1.port_a, port_b) annotation (Line(points={{46,40},{46,44},{86,\n          44},{86,0},{100,0}}, color={0,127,255}));\n  connect(port_a, senMasFlo4.port_b) annotation (Line(points={{-100,0},{-84,0},{\n          -84,-32},{-96,-32},{-96,-114},{110,-114},{110,-86},{104,-86}}, color={\n          0,127,255}));\n  connect(gain.y, integrator.u) annotation (Line(points={{-57.4,-16},{-54,-16},{\n          -54,-18},{-47.6,-18}}, color={0,0,127}));\n  connect(integrator.y, gain1.u) annotation (Line(points={{-29.2,-18},{-30,-18},\n          {-30,-4},{-74,-4},{-74,-12},{-76,-12},{-76,-32},{-48,-32},{-48,-42}},\n        color={0,0,127}));\n  connect(gain1.y, gain2.u) annotation (Line(points={{-25,-42},{-34,-42},{-34,-60},\n          {-60,-60},{-60,-70},{-28,-70}}, color={0,0,127}));\n  connect(Boiy.y, boi.y) annotation (Line(points={{-103.1,45},{-84,45},{-84,18},\n          {-76,18}}, color={0,0,127}));\n  connect(Boiy.y, gain.u) annotation (Line(points={{-103.1,45},{-84,45},{-84,2},\n          {-82,2},{-82,-16},{-71.2,-16}}, color={0,0,127}));\n  annotation (Icon(coordinateSystem(extent={{-100,-120},{100,100}}), graphics={\nRectangle(fillPattern=FillPattern.Solid, extent={{-80,80},{80,-80}}),\nRectangle(\n  fillColor={255,255,255},\n          fillPattern=FillPattern.Solid,\n          extent={{-68,70},{70,-70}}),\n        Polygon(\n          lineColor={0,0,255},\n          fillColor={0,0,255},\n          fillPattern=FillPattern.Solid,\n          points={{-68,18},{-68,18},{-54,32},{-28,16},{0,30},{26,16},{46,32},{70,\n              18},{70,18},{70,-70},{70,-70},{-68,-70},{-68,-70},{-68,18}},\n          smooth=Smooth.Bezier)}), Diagram(coordinateSystem(extent={{-100,-120},\n            {100,100}})));\nend PartialBoilerWithStorage;\n\n\n\n  end Boilers;\n\n    package Ventilation\n      model SimpleHVAC\n\n        replaceable package Medium = Modelica.Media.Interfaces.PartialMedium\n          \"Medium model\" annotation (choicesAllMatching=true);\n        IDEAS.Fluid.Movers.FlowControlled_dp\n                                       fanSup(\n          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,\n          inputType=IDEAS.Fluid.Types.InputType.Constant,\n          nominalValuesDefineDefaultPressureCurve=true,\n          redeclare package Medium = Medium,\n          dp_nominal=200,\n          m_flow_nominal=2*100*1.2/3600) \"Supply fan\"\n          annotation (Placement(transformation(extent={{4,6},{24,26}})));\n        IDEAS.Fluid.Movers.FlowControlled_dp\n                                       fanRet(\n          energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,\n          inputType=IDEAS.Fluid.Types.InputType.Constant,\n          nominalValuesDefineDefaultPressureCurve=true,\n          redeclare package Medium = Medium,\n          dp_nominal=200,\n          m_flow_nominal=2*100*1.2/3600) \"Return fan\"\n          annotation (Placement(transformation(extent={{24,-34},{4,-14}})));\n        IDEAS.Fluid.HeatExchangers.ConstantEffectiveness\n                                                   hex(\n          redeclare package Medium1 = Medium,\n          redeclare package Medium2 = Medium,\n          m1_flow_nominal=2*100*1.2/3600,\n          m2_flow_nominal=2*100*1.2/3600,\n          dp1_nominal=100,\n          dp2_nominal=100) \"Heat exchanger with constant heat recovery effectivity\"\n          annotation (Placement(transformation(extent={{-26,-14},{-6,6}})));\n        Modelica.Fluid.Interfaces.FluidPort_b port_b(\n          redeclare final package Medium = Medium)\n          \"Fluid connector b (positive design flow direction is from port_a to port_b)\"\n          annotation (Placement(transformation(extent={{118,1},{86,31}}),\n              iconTransformation(extent={{110,31},{90,49}})));\n\n        Modelica.Fluid.Interfaces.FluidPort_a port_a(\n          redeclare final package Medium = Medium)\n          \"Fluid connector a (positive design flow direction is from port_a to port_b)\"\n          annotation (Placement(transformation(extent={{84,-40},{118,-8}}),\n              iconTransformation(extent={{90,-49},{110,-31}})));\n        IDEAS.Fluid.Sources.OutsideAir outsideAir(\n          azi=0,                                  nPorts=2, redeclare package\n            Medium = Medium) annotation (\n          Placement(transformation(origin = {-64, 2}, extent = {{-10, -10}, {10, 10}})));\n      equation\n        connect(hex.port_b1, fanSup.port_a) annotation (\n          Line(points = {{-6, 2}, {-6, 16}, {4, 16}}, color = {0, 127, 255}));\n        connect(hex.port_a2, fanRet.port_b) annotation (\n          Line(points = {{-6, -10}, {-6, -24}, {4, -24}}, color = {0, 127, 255}));\n        connect(fanSup.port_b, port_b) annotation (\n          Line(points = {{24, 16}, {102, 16}}, color = {0, 127, 255}));\n        connect(fanRet.port_a, port_a) annotation (\n          Line(points = {{24, -24}, {101, -24}}, color = {0, 127, 255}));\n        connect(\n          outsideAir.ports[1], hex.port_a1) annotation (\n          Line(points={{-54,4},{-40,4},{-40,2},{-26,2}},\n                                              color = {0, 127, 255}));\n        connect(\n          outsideAir.ports[2], hex.port_b2) annotation (\n          Line(points={{-54,0},{-26,0},{-26,-10}},        color = {0, 127, 255}));\n        annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-60},\n                  {100,60}}), graphics={Rectangle(\n                extent={{-100,60},{100,-60}},\n                lineColor={255,128,0},\n                fillColor={255,128,0},\n                fillPattern=FillPattern.Forward)}), Diagram(coordinateSystem(\n                preserveAspectRatio=false, extent={{-100,-60},{100,60}})));\n      end SimpleHVAC;\n\n      model SimpleVAV\n        annotation (Icon(coordinateSystem(preserveAspectRatio=false)), Diagram(\n              coordinateSystem(preserveAspectRatio=false)));\n      end SimpleVAV;\n\n      model SimpleHVACBuildings\n\n  replaceable package Medium = Modelica.Media.Interfaces.PartialMedium\n    \"Medium model\" annotation (choicesAllMatching=true);\n  Buildings.Fluid.Movers.FlowControlled_dp\n                                 fanSup(\n    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,\n    use_inputFilter=false,\n    inputType=Buildings.Fluid.Types.InputType.Constant,\n    nominalValuesDefineDefaultPressureCurve=true,\n    redeclare package Medium = Medium,\n    dp_nominal=200,\n    m_flow_nominal=2*100*1.2/3600) \"Supply fan\"\n    annotation (Placement(transformation(extent={{4,6},{24,26}})));\n  Buildings.Fluid.Movers.FlowControlled_dp\n                                 fanRet(\n    energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,\n    use_inputFilter=false,\n    inputType=Buildings.Fluid.Types.InputType.Constant,\n    nominalValuesDefineDefaultPressureCurve=true,\n    redeclare package Medium = Medium,\n    dp_nominal=200,\n    m_flow_nominal=2*100*1.2/3600) \"Return fan\"\n    annotation (Placement(transformation(extent={{24,-34},{4,-14}})));\n  Buildings.Fluid.HeatExchangers.ConstantEffectiveness\n                                             hex(\n    redeclare package Medium1 = Medium,\n    redeclare package Medium2 = Medium,\n    m1_flow_nominal=2*100*1.2/3600,\n    m2_flow_nominal=2*100*1.2/3600,\n    dp1_nominal=100,\n    dp2_nominal=100) \"Heat exchanger with constant heat recovery effectivity\"\n    annotation (Placement(transformation(extent={{-26,-14},{-6,6}})));\n  Modelica.Fluid.Interfaces.FluidPort_b port_b(\n    redeclare final package Medium = Medium)\n    \"Fluid connector b (positive design flow direction is from port_a to port_b)\"\n    annotation (Placement(transformation(extent={{118,1},{86,31}}),\n        iconTransformation(extent={{110,31},{90,49}})));\n\n  Modelica.Fluid.Interfaces.FluidPort_a port_a(\n    redeclare final package Medium = Medium)\n    \"Fluid connector a (positive design flow direction is from port_a to port_b)\"\n    annotation (Placement(transformation(extent={{84,-40},{118,-8}}),\n        iconTransformation(extent={{90,-49},{110,-31}})));\n  Buildings.Fluid.Sources.Boundary_pT bou(T=295.15, nPorts=2,    redeclare\n      package                                                                      Medium = Medium)\n    annotation (Placement(transformation(extent={{-78,-14},{-58,6}})));\n  Buildings.Fluid.Sensors.TemperatureTwoPort TSup(\n    redeclare package Medium = Medium,\n    m_flow_nominal=2*100*1.2/3600,\n    allowFlowReversal=false)\nannotation (Placement(transformation(extent={{48,6},{68,26}})));\n  Controls.BaseClasses.DataBus dataBus annotation (Placement(transformation(\n          extent={{-120,22},{-80,62}}), iconTransformation(extent={{-208,22},{-188,\n            42}})));\nequation\n  connect(hex.port_b1, fanSup.port_a) annotation (\n    Line(points = {{-6, 2}, {-6, 16}, {4, 16}}, color = {0, 127, 255}));\n  connect(hex.port_a2, fanRet.port_b) annotation (\n    Line(points = {{-6, -10}, {-6, -24}, {4, -24}}, color = {0, 127, 255}));\n  connect(fanRet.port_a, port_a) annotation (\n    Line(points = {{24, -24}, {101, -24}}, color = {0, 127, 255}));\n  connect(bou.ports[1], hex.port_b2) annotation (Line(points={{-58,-2},{-32,-2},\n          {-32,-10},{-26,-10}}, color={0,127,255}));\n  connect(bou.ports[2], hex.port_a1) annotation (Line(points={{-58,-6},{-32,-6},\n          {-32,2},{-26,2}}, color={0,127,255}));\n  connect(fanSup.port_b, TSup.port_a)\n    annotation (Line(points={{24,16},{48,16}}, color={0,127,255}));\n  connect(TSup.port_b, port_b)\n    annotation (Line(points={{68,16},{102,16}}, color={0,127,255}));\n  connect(TSup.T, dataBus.TSupAhu) annotation (Line(points={{58,27},{58,42},{\n          -100,42}}, color={0,0,127}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-60},\n            {100,60}}), graphics={Rectangle(\n          extent={{-100,60},{100,-60}},\n          lineColor={255,128,0},\n          fillColor={255,128,0},\n          fillPattern=FillPattern.Forward)}), Diagram(coordinateSystem(\n          preserveAspectRatio=false, extent={{-100,-60},{100,60}})));\nend SimpleHVACBuildings;\n\n    model AhuWithEconomizer\n    replaceable package MediumA = Modelica.Media.Interfaces.PartialMedium\n    \"Medium model\" annotation (choicesAllMatching=true);\n\n      constant Integer numZon(min=2)=2 \"Total number of served VAV boxes\";\n\n  parameter Modelica.Units.SI.Volume VRoo[numZon] \"Room volume per zone\";\n  parameter Modelica.Units.SI.Area AFlo[numZon] \"Floor area per zone\";\n\n  final parameter Modelica.Units.SI.Area ATot=sum(AFlo)\n    \"Total floor area for all zone\";\n\n  constant Real conv=1.2/3600 \"Conversion factor for nominal mass flow rate\";\n\n\n  parameter Modelica.Units.SI.HeatFlowRate QHeaAHU_flow_nominal(min=0) = mHeaAir_flow_nominal * Buildings.Utilities.Psychrometrics.Constants.cpAir * (THeaAirSup_nominal-THeaAirMix_nominal)\n    \"Nominal heating heat flow rate of air handler unit coil\";\n\n  parameter Modelica.Units.SI.HeatFlowRate QCooAHU_flow_nominal(max=0) = 1.3 * mCooAir_flow_nominal * Buildings.Utilities.Psychrometrics.Constants.cpAir *(TCooAirSup_nominal-TCooAirMix_nominal)\n    \"Nominal total cooling heat flow rate of air handler unit coil (negative number)\";\n\n  parameter Modelica.Units.SI.MassFlowRate mCooVAV_flow_nominal[numZon]\n    \"Design mass flow rate per zone for cooling\"\n    annotation (Dialog(group=\"Nominal mass flow rate\"));\n\n  parameter Modelica.Units.SI.MassFlowRate mHeaVAV_flow_nominal[numZon] = 0.3*mCooVAV_flow_nominal\n    \"Design mass flow rate per zone for heating\"\n    annotation (Dialog(group=\"Nominal mass flow rate\"));\n\n  parameter Modelica.Units.SI.MassFlowRate mAir_flow_nominal=0.01\n    \"Nominal mass flow rate for fan\"\n    annotation (Dialog(group=\"Nominal mass flow rate\"));\n  parameter Modelica.Units.SI.MassFlowRate mCooAir_flow_nominal=0.7*sum(mCooVAV_flow_nominal)\n    \"Nominal mass flow rate for fan\"\n    annotation (Dialog(group=\"Nominal mass flow rate\"));\n  parameter Modelica.Units.SI.MassFlowRate mHeaAir_flow_nominal = 0.7*sum(mHeaVAV_flow_nominal)\n    \"Nominal mass flow rate for fan\"\n    annotation (Dialog(group=\"Nominal mass flow rate\"));\n\n  parameter Modelica.Units.SI.MassFlowRate mHeaWat_flow_nominal=\n      QHeaAHU_flow_nominal/Buildings.Utilities.Psychrometrics.Constants.cpWatLiq/10\n    \"Nominal water mass flow rate for heating coil in AHU\"\n    annotation (Dialog(group=\"Nominal mass flow rate\"));\n  parameter Modelica.Units.SI.MassFlowRate mCooWat_flow_nominal=\n      QCooAHU_flow_nominal/Buildings.Utilities.Psychrometrics.Constants.cpWatLiq/(-6)\n    \"Nominal water mass flow rate for cooling coil\"\n    annotation (Dialog(group=\"Nominal mass flow rate\"));\n\n  parameter Real ratOAFlo_A(final unit=\"m3/(s.m2)\") = 0.3e-3\n    \"Outdoor airflow rate required per unit area\";\n  parameter Real ratOAFlo_P = 2.5e-3\n    \"Outdoor airflow rate required per person\";\n  parameter Real ratP_A = 5e-2\n    \"Occupant density\";\n  parameter Real effZ(final unit=\"1\") = 0.8\n    \"Zone air distribution effectiveness (limiting value)\";\n  parameter Real divP(final unit=\"1\") = 0.7\n    \"Occupant diversity ratio\";\n\n  parameter Modelica.Units.SI.VolumeFlowRate VZonOA_flow_nominal[numZon]=(\n      ratOAFlo_P*ratP_A + ratOAFlo_A)*AFlo/effZ\n    \"Zone outdoor air flow rate of each VAV box\";\n\n  parameter Modelica.Units.SI.VolumeFlowRate Vou_flow_nominal=(divP*ratOAFlo_P*\n      ratP_A + ratOAFlo_A)*sum(AFlo) \"System uncorrected outdoor air flow rate\";\n  parameter Real effVen(final unit=\"1\") = if divP &lt; 0.6 then\n    0.88 * divP + 0.22 else 0.75\n    \"System ventilation efficiency\";\n  parameter Modelica.Units.SI.VolumeFlowRate Vot_flow_nominal=Vou_flow_nominal/\n      effVen \"System design outdoor air flow rate\";\n\n  parameter Modelica.Units.SI.Temperature THeaOn=293.15\n    \"Heating setpoint during on\"\n    annotation (Dialog(group=\"Room temperature setpoints\"));\n  parameter Modelica.Units.SI.Temperature THeaOff=285.15\n    \"Heating setpoint during off\"\n    annotation (Dialog(group=\"Room temperature setpoints\"));\n  parameter Modelica.Units.SI.Temperature TCooOn=297.15\n    \"Cooling setpoint during on\"\n    annotation (Dialog(group=\"Room temperature setpoints\"));\n  parameter Modelica.Units.SI.Temperature TCooOff=303.15\n    \"Cooling setpoint during off\"\n    annotation (Dialog(group=\"Room temperature setpoints\"));\n  parameter Modelica.Units.SI.PressureDifference dpBuiStaSet(min=0) = 12\n    \"Building static pressure\";\n  parameter Real yFanMin = 0.1 \"Minimum fan speed\";\n\n\n  parameter Modelica.Units.SI.Temperature TCooAirMix_nominal(displayUnit=\"degC\")=303.15\n    \"Mixed air temperature during cooling nominal conditions (used to size cooling coil)\"\n    annotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n  parameter Modelica.Units.SI.Temperature TCooAirSup_nominal(displayUnit=\"degC\")=285.15\n    \"Supply air temperature during cooling nominal conditions (used to size cooling coil)\"\n    annotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n  parameter Modelica.Units.SI.MassFraction wCooAirMix_nominal = 0.017\n    \"Humidity ratio of mixed air at a nominal conditions used to size cooling coil (in kg/kg dry total)\"\n    annotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n   parameter Modelica.Units.SI.Temperature TCooWatInl_nominal(displayUnit=\"degC\") = 279.15\n    \"Cooling coil nominal inlet water temperature\"\n    annotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n\n\n  parameter Modelica.Units.SI.Temperature THeaAirMix_nominal(displayUnit=\"degC\")=277.15\n    \"Mixed air temperature during heating nominal conditions (used to size heating coil)\"\n    annotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n  parameter Modelica.Units.SI.Temperature THeaAirSup_nominal(displayUnit=\"degC\")=285.15\n    \"Supply air temperature during heating nominal conditions (used to size heating coil)\"\n    annotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n  parameter Modelica.Units.SI.Temperature THeaWatInl_nominal(displayUnit=\"degC\")\n    \"Reheat coil nominal inlet water temperature\"\n    annotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n\n  parameter Boolean allowFlowReversal=false\n    \"= false to simplify equations, assuming, but not enforcing, no flow reversal\"\n    annotation (Evaluate=true);\n\n\n\n  Buildings.Fluid.Movers.Preconfigured.SpeedControlled_y fanSup(\n      redeclare package Medium = MediumA,\n      m_flow_nominal=mAir_flow_nominal,\n      dp_nominal=780 + 10 + dpBuiStaSet,\n      energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)\n                                                               \"Supply air fan\"\n    annotation (Placement(transformation(extent={{246,-82},{266,-62}})));\n  Buildings.Fluid.Sensors.VolumeFlowRate senSupFlo(redeclare package Medium =\n                 MediumA, m_flow_nominal=mAir_flow_nominal)\n    \"Sensor for supply fan flow rate\"\n    annotation (Placement(transformation(extent={{346,-82},{366,-62}})));\n  Buildings.Fluid.Sensors.TemperatureTwoPort TSup(\n      redeclare package Medium = MediumA,\n      m_flow_nominal=mAir_flow_nominal,\n      allowFlowReversal=allowFlowReversal)\n    annotation (Placement(transformation(extent={{276,-82},{296,-62}})));\n  Buildings.Fluid.Sensors.TemperatureTwoPort TMix(\n      redeclare package Medium = MediumA,\n      m_flow_nominal=mAir_flow_nominal,\n      allowFlowReversal=allowFlowReversal,\n      transferHeat=true) \"Mixed air temperature sensor\"\n    annotation (Placement(transformation(extent={{82,-82},{102,-62}})));\n  Buildings.Fluid.Sensors.VolumeFlowRate VOut1(redeclare package Medium =\n          MediumA, m_flow_nominal=mAir_flow_nominal)\n    \"Outside air volume flow rate\"\n    annotation (Placement(transformation(extent={{-68,-80},{-48,-60}})));\n  Buildings.Fluid.Actuators.Dampers.Exponential\n                                      damRet(\n      redeclare package Medium = MediumA,\n      m_flow_nominal=mAir_flow_nominal,\n      from_dp=false,\n      riseTime=15,\n      dpDamper_nominal=5,\n      dpFixed_nominal=5)\n                       \"Return air damper\" annotation (Placement(transformation(\n        origin={52,-6},\n        extent={{10,-10},{-10,10}},\n        rotation=90)));\n  Buildings.Fluid.Actuators.Dampers.Exponential\n                                      damOut(\n      redeclare package Medium = MediumA,\n      m_flow_nominal=mAir_flow_nominal,\n      from_dp=false,\n      riseTime=15,\n      dpDamper_nominal=5,\n      dpFixed_nominal=5)\n                       \"Outdoor air damper\"\n    annotation (Placement(transformation(extent={{2,-80},{22,-60}})));\n  Buildings.Fluid.FixedResistances.PressureDrop\n                                      dpSupDuc(\n      m_flow_nominal=mAir_flow_nominal,\n      redeclare package Medium = MediumA,\n      allowFlowReversal=allowFlowReversal,\n      dp_nominal=200 + 200 + 100 + 40)\n                                     \"Pressure drop for supply duct\"\n    annotation (Placement(transformation(extent={{196,-82},{216,-62}})));\n  Buildings.Fluid.FixedResistances.Junction\n                                  splRetOut(\n      redeclare package Medium = MediumA,\n      tau=15,\n      m_flow_nominal=mAir_flow_nominal*{1,1,1},\n      energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,\n      dp_nominal(each displayUnit=\"Pa\") = {0,0,0},\n      portFlowDirection_1=if allowFlowReversal then Modelica.Fluid.Types.PortFlowDirection.Bidirectional\n           else Modelica.Fluid.Types.PortFlowDirection.Entering,\n      portFlowDirection_2=if allowFlowReversal then Modelica.Fluid.Types.PortFlowDirection.Bidirectional\n           else Modelica.Fluid.Types.PortFlowDirection.Leaving,\n      portFlowDirection_3=if allowFlowReversal then Modelica.Fluid.Types.PortFlowDirection.Bidirectional\n           else Modelica.Fluid.Types.PortFlowDirection.Entering,\n      linearized=true)\n    \"Flow splitter\"\n    annotation (Placement(transformation(\n        extent={{-10,10},{10,-10}},\n        rotation=0,\n        origin={52,-70})));\n  Buildings.Fluid.Actuators.Dampers.Exponential damExh(\n      from_dp=false,\n      riseTime=15,\n      dpFixed_nominal=5,\n      redeclare package Medium = MediumA,\n      m_flow_nominal=mAir_flow_nominal,\n      dpDamper_nominal=5)\n                        \"Exhaust air damper\"\n    annotation (Placement(transformation(extent={{-16,-14},{-36,6}})));\n  Buildings.Fluid.FixedResistances.PressureDrop dpRetDuc(\n      m_flow_nominal=mAir_flow_nominal,\n      redeclare package Medium = MediumA,\n      allowFlowReversal=allowFlowReversal,\n      dp_nominal=40)\n                   \"Pressure drop for return duct\"\n    annotation (Placement(transformation(extent={{368,0},{348,20}})));\n  Buildings.Fluid.Sensors.VolumeFlowRate senRetFlo(redeclare package Medium =\n                 MediumA, m_flow_nominal=mAir_flow_nominal)\n    \"Sensor for return fan flow rate\"\n    annotation (Placement(transformation(extent={{234,0},{214,20}})));\n  Buildings.Fluid.Sensors.TemperatureTwoPort TRet(\n      redeclare package Medium = MediumA,\n      m_flow_nominal=mAir_flow_nominal,\n      allowFlowReversal=allowFlowReversal)\n                                         \"Return air temperature sensor\"\n    annotation (Placement(transformation(extent={{138,0},{118,20}})));\n  Buildings.Fluid.Movers.Preconfigured.SpeedControlled_y fanSup1(\n      redeclare package Medium = MediumA,\n      m_flow_nominal=mAir_flow_nominal,\n      dp_nominal=780 + 10 + dpBuiStaSet,\n      energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)\n                                                               \"Supply air fan\"\n    annotation (Placement(transformation(extent={{278,0},{258,20}})));\n  Modelica.Fluid.Interfaces.FluidPort_b port_b(redeclare final package Medium =\n        MediumA)\n    \"Fluid connector b (positive design flow direction is from port_a to port_b)\"\n    annotation (Placement(transformation(extent={{556,-5},{524,25}}),\n        iconTransformation(extent={{552,11},{532,29}})));\n  Modelica.Fluid.Interfaces.FluidPort_a port_a(redeclare final package Medium =\n        MediumA)\n    \"Fluid connector a (positive design flow direction is from port_a to port_b)\"\n    annotation (Placement(transformation(extent={{522,-90},{556,-58}}),\n        iconTransformation(extent={{532,-69},{552,-51}})));\n  Modelica.Fluid.Interfaces.FluidPorts_b ports[2](redeclare each package Medium =\n               MediumA, each m_flow(max=if flowDirection == Modelica.Fluid.Types.PortFlowDirection.Leaving\n           then 0 else +Modelica.Constants.inf, min=if flowDirection ==\n          Modelica.Fluid.Types.PortFlowDirection.Entering then 0 else -Modelica.Constants.inf))\n    \"Fluid ports\"\n    annotation (Placement(transformation(extent={{-110,26},{-90,-54}}),\n        iconTransformation(extent={{-110,26},{-90,-54}})));\n  Controls.BaseClasses.DataBus dataBus annotation (Placement(transformation(\n          extent={{-90,78},{-50,118}}), iconTransformation(extent={{-84,54},{-34,\n            96}})));\n  Modelica.Blocks.Math.RealToBoolean u1SupFan(threshold=0.2)\n    \"Convert real to integer\"\n    annotation (Placement(transformation(extent={{316,30},{356,70}})));\n  Buildings.Controls.OBC.CDL.Integers.Sources.Constant opeMod(final k=Buildings.Controls.OBC.ASHRAE.G36.Types.OperationModes.occupied)\n    \"AHU operation mode is occupied\"\n    annotation (Placement(transformation(extent={{-66,-170},{-46,-150}})));\n  Buildings.Controls.OBC.CDL.Reals.Sources.Constant sumDesPopBreZon(final k=0.0125)\n    \"Sum of the population component design breathing zone flow rate\"\n    annotation (Placement(transformation(extent={{200,-160},{220,-140}})));\n  Buildings.Controls.OBC.CDL.Reals.Sources.Constant sumDesAreBreZon(final k=0.03)\n    \"Sum of the area component design breathing zone flow rate\"\n    annotation (Placement(transformation(extent={{324,-160},{344,-140}})));\n  Buildings.Fluid.Sensors.RelativePressure dpDisSupFan(redeclare package Medium =\n        MediumA) \"Supply fan static discharge pressure\" annotation (Placement(\n        transformation(\n        extent={{-18,22},{18,-22}},\n        rotation=90,\n        origin={404,-28})));\n  Buildings.Controls.OBC.CDL.Integers.Sources.Constant ducPreResReq(final k=2)\n    \"AHU operation mode is occupied\"\n    annotation (Placement(transformation(extent={{-64,-218},{-44,-198}})));\n  Buildings.Fluid.Sensors.TemperatureTwoPort TOut(\n    redeclare package Medium = MediumA,\n    m_flow_nominal=mAir_flow_nominal,\n    allowFlowReversal=allowFlowReversal,\n    transferHeat=true) \"Mixed air temperature sensor\"\n    annotation (Placement(transformation(extent={{-32,-80},{-12,-60}})));\n  Buildings.Controls.OBC.CDL.Reals.Sources.Constant sumDesPopBreZon1(final k=0.04)\n    \"Sum of the population component design breathing zone flow rate\"\n    annotation (Placement(transformation(extent={{264,-160},{284,-140}})));\n  Buildings.Controls.OBC.CDL.Reals.Sources.Constant VSumZonPri_flow(final k=0.03)\n    \"Sum of the area component design breathing zone flow rate\"\n    annotation (Placement(transformation(extent={{444,-112},{464,-92}})));\n  Buildings.Controls.OBC.CDL.Reals.Sources.Constant uOutAirFra_max(final k=0.5)\n    \"Sum of the area component design breathing zone flow rate\"\n    annotation (Placement(transformation(extent={{498,-122},{518,-102}})));\n  Buildings.Controls.OBC.CDL.Integers.Sources.Constant maxSupResReq(final k=6)\n    \"AHU operation mode is occupied\"\n    annotation (Placement(transformation(extent={{-74,-268},{-54,-248}})));\n\n  protected\n  parameter Modelica.Fluid.Types.PortFlowDirection flowDirection=Modelica.Fluid.Types.PortFlowDirection.Bidirectional\n    \"Allowed flow direction\" annotation (Evaluate=true, Dialog(tab=\"Advanced\"));\nequation\n  connect(TSup.port_a,fanSup. port_b) annotation (Line(\n      points={{276,-72},{266,-72}},\n      color={0,127,255},\n      smooth=Smooth.None,\n      thickness=0.5));\n  connect(TSup.port_b,senSupFlo. port_a)\n    annotation (Line(points={{296,-72},{346,-72}}, color={0,127,255}));\n  connect(dpSupDuc.port_b,fanSup. port_a)\n    annotation (Line(points={{216,-72},{246,-72}}, color={0,127,255}));\n  connect(damOut.port_b,splRetOut. port_1)\n    annotation (Line(points={{22,-70},{42,-70}},   color={0,127,255}));\n  connect(splRetOut.port_2,TMix. port_a)\n    annotation (Line(points={{62,-70},{72,-70},{72,-72},{82,-72}},\n                                                 color={0,127,255}));\n  connect(damRet.port_b,splRetOut. port_3) annotation (Line(points={{52,-16},{52,\n          -60}},                                    color={0,127,255}));\n    connect(dpSupDuc.port_a, TMix.port_b) annotation (Line(points={{196,-72},{102,\n          -72}},               color={0,127,255}));\n  connect(senRetFlo.port_b,TRet. port_a) annotation (Line(points={{214,10},{138,\n          10}},                color={0,127,255}));\n    connect(TRet.port_b, damRet.port_a) annotation (Line(points={{118,10},{52,10},\n          {52,4}},                 color={0,127,255}));\n    connect(TRet.port_b, damExh.port_a) annotation (Line(points={{118,10},{-6,10},\n          {-6,-4},{-16,-4}},                                        color=\n           {0,127,255}));\n    connect(senRetFlo.port_a, fanSup1.port_b)\n      annotation (Line(points={{234,10},{258,10}},   color={0,127,255}));\n    connect(fanSup1.port_a, dpRetDuc.port_b)\n      annotation (Line(points={{278,10},{348,10}},   color={0,127,255}));\n  connect(senSupFlo.port_b, port_a) annotation (Line(points={{366,-72},{516,-72},\n          {516,-74},{539,-74}}, color={0,127,255}));\n  connect(dpRetDuc.port_a, port_b)\n    annotation (Line(points={{368,10},{540,10}}, color={0,127,255}));\n  connect(damExh.port_b, ports[1]) annotation (Line(points={{-36,-4},{-84,-4},{-84,\n          6},{-100,6}}, color={0,127,255}));\n  connect(VOut1.port_a, ports[2]) annotation (Line(points={{-68,-70},{-84,-70},{\n          -84,-34},{-100,-34}}, color={0,127,255}));\n  connect(dataBus.yRetDam, damRet.y) annotation (Line(\n      points={{-70,98},{-70,-24},{32,-24},{32,-6},{40,-6}},\n      color={255,204,51},\n      thickness=0.5), Text(\n      string=\"%first\",\n      index=-1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(dataBus.yOutDam, damOut.y) annotation (Line(\n      points={{-70,98},{-70,-48},{12,-48},{12,-58}},\n      color={255,204,51},\n      thickness=0.5), Text(\n      string=\"%first\",\n      index=-1,\n      extent={{-3,6},{-3,6}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(dataBus.ySupFan, fanSup1.y) annotation (Line(\n      points={{-70,98},{-70,32},{268,32},{268,22}},\n      color={255,204,51},\n      thickness=0.5), Text(\n      string=\"%first\",\n      index=-1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(dataBus.ySupFan, fanSup.y) annotation (Line(\n      points={{-70,98},{-70,32},{248,32},{248,-52},{256,-52},{256,-60}},\n      color={255,204,51},\n      thickness=0.5), Text(\n      string=\"%first\",\n      index=-1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(dataBus.yOutDam, damExh.y) annotation (Line(\n      points={{-70,98},{-70,18},{-26,18},{-26,8}},\n      color={255,204,51},\n      thickness=0.5), Text(\n      string=\"%first\",\n      index=-1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(opeMod.y, dataBus.uAhuOpeMod) annotation (Line(points={{-44,-160},{-34,\n          -160},{-34,-158},{-36,-158},{-36,-154},{-34,-154},{-34,-86},{-38,-86},\n          {-38,-52},{-70,-52},{-70,98}}, color={255,127,0}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{6,3},{6,3}},\n      horizontalAlignment=TextAlignment.Left));\n  connect(dpDisSupFan.port_a, port_a) annotation (Line(points={{404,-46},{404,-72},\n          {516,-72},{516,-74},{539,-74}}, color={0,127,255}));\n  connect(VOut1.port_a, dpDisSupFan.port_b) annotation (Line(points={{-68,-70},{\n          -84,-70},{-84,-26},{376,-26},{376,0},{404,0},{404,-10}}, color={0,127,\n          255}));\n  connect(dpDisSupFan.p_rel, dataBus.dpDuc) annotation (Line(points={{384.2,-28},\n          {-70,-28},{-70,98}}, color={0,0,127}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(ducPreResReq.y, dataBus.uZonPreResReq) annotation (Line(points={{-42,-208},\n          {-38,-208},{-38,-204},{-40,-204},{-40,-200},{-38,-200},{-38,-178},{-70,\n          -178},{-70,98}}, color={255,127,0}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(VOut1.port_b, TOut.port_a)\n    annotation (Line(points={{-48,-70},{-32,-70}}, color={0,127,255}));\n  connect(TOut.port_b, damOut.port_a)\n    annotation (Line(points={{-12,-70},{2,-70}}, color={0,127,255}));\n  connect(TSup.T, dataBus.TAirSup) annotation (Line(points={{286,-61},{136,-61},\n          {136,38},{-70,38},{-70,98}}, color={0,0,127}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(dataBus.ySupFan, u1SupFan.u) annotation (Line(\n      points={{-70,98},{-70,50},{312,50}},\n      color={255,204,51},\n      thickness=0.5), Text(\n      string=\"%first\",\n      index=-1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(u1SupFan.y, dataBus.u1SupFan) annotation (Line(points={{358,50},{366,50},\n          {366,76},{-44,76},{-44,72},{-70,72},{-70,98}}, color={255,0,255}),\n      Text(\n      string=\"%second\",\n      index=1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(sumDesPopBreZon.y, dataBus.VSumAdjPopBreZon_flow) annotation (Line(\n        points={{222,-150},{230,-150},{230,-6},{200,-6},{200,48},{-70,48},{-70,98}},\n        color={0,0,127}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(sumDesAreBreZon.y, dataBus.VSumAdjAreBreZon_flow) annotation (Line(\n        points={{346,-150},{364,-150},{364,-26},{-70,-26},{-70,98}}, color={0,0,\n          127}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{6,3},{6,3}},\n      horizontalAlignment=TextAlignment.Left));\n  connect(TOut.T, dataBus.TOut) annotation (Line(points={{-22,-59},{-22,-50},{-70,\n          -50},{-70,98}}, color={0,0,127}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{-3,6},{-3,6}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(VOut1.V_flow, dataBus.VAirOut_flow) annotation (Line(points={{-58,-59},\n          {-38,-59},{-38,98},{-70,98}}, color={0,0,127}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{6,3},{6,3}},\n      horizontalAlignment=TextAlignment.Left));\n  connect(VSumZonPri_flow.y, dataBus.VSumZonPri_flow) annotation (Line(points={{\n          466,-102},{200,-102},{200,98},{-70,98}}, color={0,0,127}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(uOutAirFra_max.y, dataBus.uOutAirFra_max) annotation (Line(points={{520,\n          -112},{226,-112},{226,98},{-70,98}}, color={0,0,127}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n  connect(maxSupResReq.y, dataBus.uZonTemResReq) annotation (Line(points={{-52,-258},\n          {-44,-258},{-44,-224},{-70,-224},{-70,98}}, color={255,127,0}), Text(\n      string=\"%second\",\n      index=1,\n      extent={{-6,3},{-6,3}},\n      horizontalAlignment=TextAlignment.Right));\n    annotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-180},\n            {540,100}}), graphics={Rectangle(\n          extent={{-98,102},{542,-138}},\n          lineColor={28,108,200},\n          fillColor={244,125,35},\n          fillPattern=FillPattern.Solid)}),\n                                         Diagram(coordinateSystem(\n            preserveAspectRatio=false, extent={{-100,-180},{540,100}})));\nend AhuWithEconomizer;\n        partial model PartialAhu\nreplaceable package MediumA = Modelica.Media.Interfaces.PartialMedium\n\"Medium model\" annotation (choicesAllMatching=true);\n\n  constant Integer numZon(min=2)=2 \"Total number of served VAV boxes\";\n\n  parameter Modelica.Units.SI.Volume VRoo[numZon] \"Room volume per zone\";\n  parameter Modelica.Units.SI.Area AFlo[numZon] \"Floor area per zone\";\n\n  final parameter Modelica.Units.SI.Area ATot=sum(AFlo)\n\"Total floor area for all zone\";\n\n  constant Real conv=1.2/3600 \"Conversion factor for nominal mass flow rate\";\n\n  parameter Modelica.Units.SI.HeatFlowRate QHeaAHU_flow_nominal(min=0)=\n    mHeaAir_flow_nominal*Buildings.Utilities.Psychrometrics.Constants.cpAir*(\n    THeaAirSup_nominal - THeaAirMix_nominal)\n\"Nominal heating heat flow rate of air handler unit coil\";\n\n  parameter Modelica.Units.SI.HeatFlowRate QCooAHU_flow_nominal(max=0) = 1.3*\n    mCooAir_flow_nominal*Buildings.Utilities.Psychrometrics.Constants.cpAir*(\n    TCooAirSup_nominal - TCooAirMix_nominal)\n\"Nominal total cooling heat flow rate of air handler unit coil (negative number)\";\n\n  parameter Modelica.Units.SI.MassFlowRate mCooVAV_flow_nominal[numZon]\n\"Design mass flow rate per zone for cooling\"\nannotation (Dialog(group=\"Nominal mass flow rate\"));\n\n  parameter Modelica.Units.SI.MassFlowRate mHeaVAV_flow_nominal[numZon]=0.3*\n      mCooVAV_flow_nominal\n\"Design mass flow rate per zone for heating\"\nannotation (Dialog(group=\"Nominal mass flow rate\"));\n\n  parameter Modelica.Units.SI.MassFlowRate mAir_flow_nominal=\n      0.01\n\"Nominal mass flow rate for fan\"\nannotation (Dialog(group=\"Nominal mass flow rate\"));\n  parameter Modelica.Units.SI.MassFlowRate mCooAir_flow_nominal=0.7*sum(\n      mCooVAV_flow_nominal)\n\"Nominal mass flow rate for fan\"\nannotation (Dialog(group=\"Nominal mass flow rate\"));\n  parameter Modelica.Units.SI.MassFlowRate mHeaAir_flow_nominal=0.7*sum(\n      mHeaVAV_flow_nominal)\n\"Nominal mass flow rate for fan\"\nannotation (Dialog(group=\"Nominal mass flow rate\"));\n\n  parameter Modelica.Units.SI.MassFlowRate mHeaWat_flow_nominal=\n  QHeaAHU_flow_nominal/Buildings.Utilities.Psychrometrics.Constants.cpWatLiq/10\n\"Nominal water mass flow rate for heating coil in AHU\"\nannotation (Dialog(group=\"Nominal mass flow rate\"));\n  parameter Modelica.Units.SI.MassFlowRate mCooWat_flow_nominal=\n  QCooAHU_flow_nominal/Buildings.Utilities.Psychrometrics.Constants.cpWatLiq/(-6)\n\"Nominal water mass flow rate for cooling coil\"\nannotation (Dialog(group=\"Nominal mass flow rate\"));\n\n  parameter Real ratOAFlo_A(final unit=\"m3/(s.m2)\") = 0.3e-3\n\"Outdoor airflow rate required per unit area\";\n  parameter Real ratOAFlo_P=2.5e-3\n\"Outdoor airflow rate required per person\";\n  parameter Real ratP_A=5e-2\n\"Occupant density\";\n  parameter Real effZ(final unit=\"1\") = 0.8\n\"Zone air distribution effectiveness (limiting value)\";\n  parameter Real divP(final unit=\"1\") = 0.7\n\"Occupant diversity ratio\";\n\n  parameter Modelica.Units.SI.VolumeFlowRate VZonOA_flow_nominal[numZon]=\n                                                                     (\n  ratOAFlo_P*ratP_A + ratOAFlo_A)*AFlo/effZ\n\"Zone outdoor air flow rate of each VAV box\";\n\n  parameter Modelica.Units.SI.VolumeFlowRate Vou_flow_nominal=\n                                                          (divP*ratOAFlo_P*\n  ratP_A + ratOAFlo_A)*sum(AFlo) \"System uncorrected outdoor air flow rate\";\n  parameter Real effVen(final unit=\"1\") = if divP &lt; 0.6 then\n0.88 * divP + 0.22 else 0.75\n\"System ventilation efficiency\";\n  parameter Modelica.Units.SI.VolumeFlowRate Vot_flow_nominal=Vou_flow_nominal/\n  effVen \"System design outdoor air flow rate\";\n\n  parameter Modelica.Units.SI.Temperature THeaOn=293.15\n\"Heating setpoint during on\"\nannotation (Dialog(group=\"Room temperature setpoints\"));\n  parameter Modelica.Units.SI.Temperature THeaOff=285.15\n\"Heating setpoint during off\"\nannotation (Dialog(group=\"Room temperature setpoints\"));\n  parameter Modelica.Units.SI.Temperature TCooOn=297.15\n\"Cooling setpoint during on\"\nannotation (Dialog(group=\"Room temperature setpoints\"));\n  parameter Modelica.Units.SI.Temperature TCooOff=303.15\n\"Cooling setpoint during off\"\nannotation (Dialog(group=\"Room temperature setpoints\"));\n  parameter Modelica.Units.SI.PressureDifference dpBuiStaSet(min=0) = 12\n\"Building static pressure\";\n  parameter Real yFanMin=0.1 \"Minimum fan speed\";\n\n  parameter Modelica.Units.SI.Temperature TCooAirMix_nominal(displayUnit=\"degC\")=\n       303.15\n\"Mixed air temperature during cooling nominal conditions (used to size cooling coil)\"\nannotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n  parameter Modelica.Units.SI.Temperature TCooAirSup_nominal(displayUnit=\"degC\")=\n       285.15\n\"Supply air temperature during cooling nominal conditions (used to size cooling coil)\"\nannotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n  parameter Modelica.Units.SI.MassFraction wCooAirMix_nominal=0.017\n\"Humidity ratio of mixed air at a nominal conditions used to size cooling coil (in kg/kg dry total)\"\nannotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n  parameter Modelica.Units.SI.Temperature TCooWatInl_nominal(displayUnit=\"degC\")=\n       279.15\n\"Cooling coil nominal inlet water temperature\"\nannotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n\n  parameter Modelica.Units.SI.Temperature THeaAirMix_nominal(displayUnit=\"degC\")=\n       277.15\n\"Mixed air temperature during heating nominal conditions (used to size heating coil)\"\nannotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n  parameter Modelica.Units.SI.Temperature THeaAirSup_nominal(displayUnit=\"degC\")=\n       285.15\n\"Supply air temperature during heating nominal conditions (used to size heating coil)\"\nannotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n  parameter Modelica.Units.SI.Temperature THeaWatInl_nominal(displayUnit=\"degC\")\n\"Reheat coil nominal inlet water temperature\"\nannotation (Dialog(group=\"Air handler unit nominal temperatures and humidity\"));\n\n  parameter Boolean allowFlowReversal=false\n\"= false to simplify equations, assuming, but not enforcing, no flow reversal\"\nannotation (Evaluate=true);\n\n  Buildings.Fluid.Movers.Preconfigured.SpeedControlled_y fanSup(\n  redeclare package Medium = MediumA,\n  m_flow_nominal=mAir_flow_nominal,\n  dp_nominal=780 + 10 + dpBuiStaSet,\n  energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)\n                                                           \"Supply air fan\"\nannotation (Placement(transformation(extent={{246,-82},{266,-62}})));\n  Buildings.Fluid.Sensors.VolumeFlowRate senSupFlo(redeclare package Medium =\n             MediumA, m_flow_nominal=mAir_flow_nominal)\n\"Sensor for supply fan flow rate\"\nannotation (Placement(transformation(extent={{346,-82},{366,-62}})));\n  Buildings.Fluid.Sensors.TemperatureTwoPort TSup(\n  redeclare package Medium = MediumA,\n  m_flow_nominal=mAir_flow_nominal,\n  allowFlowReversal=allowFlowReversal)\nannotation (Placement(transformation(extent={{276,-82},{296,-62}})));\n  Buildings.Fluid.Sensors.TemperatureTwoPort TMix(\n  redeclare package Medium = MediumA,\n  m_flow_nominal=mAir_flow_nominal,\n  allowFlowReversal=allowFlowReversal,\n  transferHeat=true) \"Mixed air temperature sensor\"\nannotation (Placement(transformation(extent={{82,-82},{102,-62}})));\n  Buildings.Fluid.Sensors.VolumeFlowRate VOut1(redeclare package Medium =\n      MediumA, m_flow_nominal=mAir_flow_nominal)\n\"Outside air volume flow rate\"\nannotation (Placement(transformation(extent={{-68,-80},{-48,-60}})));\n  Buildings.Fluid.Actuators.Dampers.Exponential\n                                  damRet(\n  redeclare package Medium = MediumA,\n  m_flow_nominal=mAir_flow_nominal,\n  from_dp=false,\n  riseTime=15,\n  dpDamper_nominal=5,\n  dpFixed_nominal=5)\n                   \"Return air damper\" annotation (Placement(transformation(\n    origin={52,-6},\n    extent={{10,-10},{-10,10}},\n    rotation=90)));\n  Buildings.Fluid.Actuators.Dampers.Exponential\n                                  damOut(\n  redeclare package Medium = MediumA,\n  m_flow_nominal=mAir_flow_nominal,\n  from_dp=false,\n  riseTime=15,\n  dpDamper_nominal=5,\n  dpFixed_nominal=5)\n                   \"Outdoor air damper\"\nannotation (Placement(transformation(extent={{2,-80},{22,-60}})));\n  Buildings.Fluid.FixedResistances.PressureDrop\n                                  dpSupDuc(\n  m_flow_nominal=mAir_flow_nominal,\n  redeclare package Medium = MediumA,\n  allowFlowReversal=allowFlowReversal,\n  dp_nominal=200 + 200 + 100 + 40)\n                                 \"Pressure drop for supply duct\"\nannotation (Placement(transformation(extent={{196,-82},{216,-62}})));\n  Buildings.Fluid.FixedResistances.Junction\n                              splRetOut(\n  redeclare package Medium = MediumA,\n  tau=15,\n  m_flow_nominal=mAir_flow_nominal*{1,1,1},\n  energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial,\n  dp_nominal(each displayUnit=\"Pa\") = {0,0,0},\n  portFlowDirection_1=if allowFlowReversal then Modelica.Fluid.Types.PortFlowDirection.Bidirectional\n       else Modelica.Fluid.Types.PortFlowDirection.Entering,\n  portFlowDirection_2=if allowFlowReversal then Modelica.Fluid.Types.PortFlowDirection.Bidirectional\n       else Modelica.Fluid.Types.PortFlowDirection.Leaving,\n  portFlowDirection_3=if allowFlowReversal then Modelica.Fluid.Types.PortFlowDirection.Bidirectional\n       else Modelica.Fluid.Types.PortFlowDirection.Entering,\n  linearized=true)\n\"Flow splitter\"\nannotation (Placement(transformation(\n    extent={{-10,10},{10,-10}},\n    rotation=0,\n    origin={52,-70})));\n  Buildings.Fluid.Actuators.Dampers.Exponential damExh(\n  from_dp=false,\n  riseTime=15,\n  dpFixed_nominal=5,\n  redeclare package Medium = MediumA,\n  m_flow_nominal=mAir_flow_nominal,\n  dpDamper_nominal=5)\n                    \"Exhaust air damper\"\nannotation (Placement(transformation(extent={{-16,-14},{-36,6}})));\n  Buildings.Fluid.FixedResistances.PressureDrop dpRetDuc(\n  m_flow_nominal=mAir_flow_nominal,\n  redeclare package Medium = MediumA,\n  allowFlowReversal=allowFlowReversal,\n  dp_nominal=40)\n               \"Pressure drop for return duct\"\nannotation (Placement(transformation(extent={{368,0},{348,20}})));\n  Buildings.Fluid.Sensors.VolumeFlowRate senRetFlo(redeclare package Medium =\n             MediumA, m_flow_nominal=mAir_flow_nominal)\n\"Sensor for return fan flow rate\"\nannotation (Placement(transformation(extent={{234,0},{214,20}})));\n  Buildings.Fluid.Sensors.TemperatureTwoPort TRet(\n  redeclare package Medium = MediumA,\n  m_flow_nominal=mAir_flow_nominal,\n  allowFlowReversal=allowFlowReversal)\n                                     \"Return air temperature sensor\"\nannotation (Placement(transformation(extent={{138,0},{118,20}})));\n  Buildings.Fluid.Movers.Preconfigured.SpeedControlled_y fanSup1(\n  redeclare package Medium = MediumA,\n  m_flow_nominal=mAir_flow_nominal,\n  dp_nominal=780 + 10 + dpBuiStaSet,\n  energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial)\n                                                           \"Supply air fan\"\nannotation (Placement(transformation(extent={{278,0},{258,20}})));\n  Modelica.Fluid.Interfaces.FluidPort_b port_b(redeclare final package Medium =\n    MediumA)\n\"Fluid connector b (positive design flow direction is from port_a to port_b)\"\nannotation (Placement(transformation(extent={{556,-5},{524,25}}),\n    iconTransformation(extent={{552,11},{532,29}})));\n  Modelica.Fluid.Interfaces.FluidPort_a port_a(redeclare final package Medium =\n    MediumA)\n\"Fluid connector a (positive design flow direction is from port_a to port_b)\"\nannotation (Placement(transformation(extent={{522,-90},{556,-58}}),\n    iconTransformation(extent={{532,-69},{552,-51}})));\n  Modelica.Fluid.Interfaces.FluidPorts_b ports[2](redeclare each package Medium =\n           MediumA, each m_flow(max=if flowDirection == Modelica.Fluid.Types.PortFlowDirection.Leaving\n       then 0 else +Modelica.Constants.inf, min=if flowDirection ==\n      Modelica.Fluid.Types.PortFlowDirection.Entering then 0 else -Modelica.Constants.inf))\n\"Fluid ports\"\nannotation (Placement(transformation(extent={{-110,26},{-90,-54}}),\n    iconTransformation(extent={{-110,26},{-90,-54}})));\n  Buildings.Fluid.Sensors.RelativePressure dpDisSupFan(redeclare package Medium =\n    MediumA) \"Supply fan static discharge pressure\" annotation (Placement(\n    transformation(\n    extent={{-18,22},{18,-22}},\n    rotation=90,\n    origin={404,-28})));\n  Buildings.Fluid.Sensors.TemperatureTwoPort TOut(\nredeclare package Medium = MediumA,\nm_flow_nominal=mAir_flow_nominal,\nallowFlowReversal=allowFlowReversal,\ntransferHeat=true) \"Mixed air temperature sensor\"\nannotation (Placement(transformation(extent={{-32,-80},{-12,-60}})));\n\nprotected\n  parameter Modelica.Fluid.Types.PortFlowDirection flowDirection=Modelica.Fluid.Types.PortFlowDirection.Bidirectional\n\"Allowed flow direction\" annotation (Evaluate=true, Dialog(tab=\"Advanced\"));\nequation\n  connect(\n      TSup.port_a,fanSup. port_b) annotation (Line(\n  points={{276,-72},{266,-72}},\n  color={0,127,255},\n  smooth=Smooth.None,\n  thickness=0.5));\n  connect(\n      TSup.port_b,senSupFlo. port_a)\nannotation (Line(points={{296,-72},{346,-72}}, color={0,127,255}));\n  connect(\n      dpSupDuc.port_b,fanSup. port_a)\nannotation (Line(points={{216,-72},{246,-72}}, color={0,127,255}));\n  connect(\n      damOut.port_b,splRetOut. port_1)\nannotation (Line(points={{22,-70},{42,-70}},   color={0,127,255}));\n  connect(\n      splRetOut.port_2,TMix. port_a)\nannotation (Line(points={{62,-70},{72,-70},{72,-72},{82,-72}},\n                                             color={0,127,255}));\n  connect(\n      damRet.port_b,splRetOut. port_3) annotation (Line(points={{52,-16},{52,\n      -60}},                                    color={0,127,255}));\nconnect(dpSupDuc.port_a, TMix.port_b) annotation (Line(points={{196,-72},{102,\n      -72}},               color={0,127,255}));\n  connect(\n      senRetFlo.port_b,TRet. port_a) annotation (Line(points={{214,10},{138,\n      10}},                color={0,127,255}));\nconnect(TRet.port_b, damRet.port_a) annotation (Line(points={{118,10},{52,10},\n      {52,4}},                 color={0,127,255}));\nconnect(TRet.port_b, damExh.port_a) annotation (Line(points={{118,10},{-6,10},\n      {-6,-4},{-16,-4}},                                        color=\n       {0,127,255}));\nconnect(senRetFlo.port_a, fanSup1.port_b)\n  annotation (Line(points={{234,10},{258,10}},   color={0,127,255}));\nconnect(fanSup1.port_a, dpRetDuc.port_b)\n  annotation (Line(points={{278,10},{348,10}},   color={0,127,255}));\n  connect(\n      senSupFlo.port_b, port_a) annotation (Line(points={{366,-72},{516,-72},\n      {516,-74},{539,-74}}, color={0,127,255}));\n  connect(\n      dpRetDuc.port_a, port_b)\nannotation (Line(points={{368,10},{540,10}}, color={0,127,255}));\n  connect(\n      damExh.port_b, ports[1]) annotation (Line(points={{-36,-4},{-84,-4},{-84,\n      6},{-100,6}}, color={0,127,255}));\n  connect(\n      VOut1.port_a, ports[2]) annotation (Line(points={{-68,-70},{-84,-70},{\n      -84,-34},{-100,-34}}, color={0,127,255}));\n  connect(\n      dpDisSupFan.port_a, port_a) annotation (Line(points={{404,-46},{404,-72},\n      {516,-72},{516,-74},{539,-74}}, color={0,127,255}));\n  connect(\n      VOut1.port_a, dpDisSupFan.port_b) annotation (Line(points={{-68,-70},{\n      -84,-70},{-84,-26},{376,-26},{376,0},{404,0},{404,-10}}, color={0,127,\n      255}));\n  connect(\n      VOut1.port_b, TOut.port_a)\nannotation (Line(points={{-48,-70},{-32,-70}}, color={0,127,255}));\n  connect(\n      TOut.port_b, damOut.port_a)\nannotation (Line(points={{-12,-70},{2,-70}}, color={0,127,255}));\nannotation (Icon(coordinateSystem(preserveAspectRatio=false, extent={{-100,-180},\n        {540,100}}), graphics={Rectangle(\n      extent={{-98,102},{542,-138}},\n      lineColor={28,108,200},\n      fillColor={244,125,35},\n      fillPattern=FillPattern.Solid)}),\n                                     Diagram(coordinateSystem(\n        preserveAspectRatio=false, extent={{-100,-180},{540,100}})));\nend PartialAhu;\npartial model PartialPump\n   replaceable package Medium = Modelica.Media.Interfaces.PartialMedium\n       \"Medium model for air\" annotation (choicesAllMatching=true);\n\n parameter Modelica.Units.SI.MassFlowRate m_flow_nominal\n   \"Nominal mass flow rate of radiator loop\";\n parameter Modelica.Units.SI.PressureDifference dp_nominal\n   \"Pressure difference of loop\";\n\n Buildings.Fluid.Movers.Preconfigured.SpeedControlled_y pumRad(\n   redeclare package Medium = Medium,\n   m_flow_nominal=m_flow_nominal,\n   dp_nominal=dp_nominal,\n   energyDynamics=Modelica.Fluid.Types.Dynamics.SteadyState)\n   \"Pump that serves the radiators\" annotation (Placement(transformation(\n       extent={{-10,-10},{10,10}},\n       rotation=0,\n       origin={-4,0})));\n Buildings.Fluid.Sensors.RelativePressure dpSen(redeclare package Medium =\n       Medium)\n   annotation (Placement(transformation(extent={{-10,-10},{10,10}},\n       rotation=180,\n       origin={-6,32})));\n Buildings.Fluid.Sensors.TemperatureTwoPort temSup(redeclare package Medium =\n       Medium, m_flow_nominal=m_flow_nominal)\n   annotation (Placement(transformation(extent={{-10,-10},{10,10}},\n       rotation=0,\n       origin={42,0})));\n Buildings.Controls.OBC.CDL.Reals.MultiplyByParameter\n                                            gain(k=1/dp_nominal)\n   \"Gain used to normalize pressure measurement signal\"\n   annotation (Placement(transformation(extent={{10,-10},{-10,10}},\n       rotation=-90,\n       origin={-6,76})));\n       extends Buildings.Fluid.Interfaces.PartialTwoPort;\nequation\n connect(pumRad.port_b,dpSen. port_a)\n                                    annotation (Line(\n     points={{6,0},{14,0},{14,32},{4,32}},\n     color={0,127,255},\n     smooth=Smooth.None));\n connect(dpSen.port_b,pumRad. port_a)\n                                    annotation (Line(\n     points={{-16,32},{-22,32},{-22,0},{-14,0}},\n     color={0,127,255},\n     smooth=Smooth.None));\n connect(pumRad.port_b,temSup. port_a) annotation (Line(\n     points={{6,0},{32,0}},\n     color={0,127,255},\n     smooth=Smooth.None));\n connect(gain.u,dpSen. p_rel) annotation (Line(\n     points={{-6,64},{-6,41}},\n     color={0,0,127},\n     smooth=Smooth.None));\n connect(port_a, pumRad.port_a)\n   annotation (Line(points={{-100,0},{-14,0}}, color={0,127,255}));\n connect(temSup.port_b, port_b)\n   annotation (Line(points={{52,0},{100,0}}, color={0,127,255}));\n annotation (Icon(coordinateSystem(preserveAspectRatio=false), graphics={\n       Rectangle(\n         extent={{-100,16},{100,-16}},\n         lineColor={0,0,0},\n         fillColor={0,127,255},\n         fillPattern=FillPattern.HorizontalCylinder),\n       Ellipse(\n         extent={{-58,58},{58,-58}},\n         lineColor={0,0,0},\n         fillPattern=FillPattern.Sphere,\n         fillColor={0,100,199}),\n       Polygon(\n         points={{0,50},{0,-50},{54,0},{0,50}},\n         lineColor={0,0,0},\n         pattern=LinePattern.None,\n         fillPattern=FillPattern.HorizontalCylinder,\n         fillColor={255,255,255}),\n       Ellipse(\n         extent={{4,16},{36,-16}},\n         lineColor={0,0,0},\n         fillPattern=FillPattern.Sphere,\n         visible=energyDynamics &lt;&gt; Modelica.Fluid.Types.Dynamics.SteadyState,\n         fillColor={0,100,199})}), Diagram(coordinateSystem(\n         preserveAspectRatio=false)));\nend PartialPump;\n\n\n    partial model PartialVAVBox\n  \"Supply box of a VAV system with a hot water reheat coil\"\n  extends\n      Modelica.Blocks.Icons.Block;\n  replaceable package MediumA = Modelica.Media.Interfaces.PartialMedium\n      \"Medium model for air\" annotation (choicesAllMatching=true);\n\n\n  parameter Boolean allowFlowReversal=true\n\"= false to simplify equations, assuming, but not enforcing, no flow reversal\";\n  parameter Modelica.Units.SI.MassFlowRate mCooAir_flow_nominal\n\"Nominal air mass flow rate from cooling sizing calculations\";\n  parameter Modelica.Units.SI.MassFlowRate mHeaAir_flow_nominal\n\"Nominal air mass flow rate from heating sizing calculations\";\n  final parameter Modelica.Units.SI.MassFlowRate mHeaWat_flow_nominal=\n  QHea_flow_nominal/(cpWatLiq*(THeaWatInl_nominal - THeaWatOut_nominal))\n\"Nominal mass flow rate of hot water to reheat coil\";\n  parameter Modelica.Units.SI.Volume VRoo \"Room volume\";\n  parameter Modelica.Units.SI.Temperature THeaWatInl_nominal(start=55 + 273.15,\n  displayUnit=\"degC\") \"Reheat coil nominal inlet water temperature\";\n  parameter Modelica.Units.SI.Temperature THeaWatOut_nominal(start=\n    THeaWatInl_nominal - 10, displayUnit=\"degC\")\n\"Reheat coil nominal outlet water temperature\";\n  parameter Modelica.Units.SI.Temperature THeaAirInl_nominal(start=12 + 273.15,\n  displayUnit=\"degC\")\n\"Inlet air nominal temperature into VAV box during heating\";\n  parameter Modelica.Units.SI.Temperature THeaAirDis_nominal(start=28 + 273.15,\n  displayUnit=\"degC\")\n\"Discharge air temperature from VAV box during heating\";\n  parameter Modelica.Units.SI.HeatFlowRate QHea_flow_nominal=\n  mHeaAir_flow_nominal * cpAir * (THeaAirDis_nominal-THeaAirInl_nominal)\n\"Nominal heating heat flow rate\";\n  Modelica.Fluid.Interfaces.FluidPort_a port_aAir(\nredeclare package Medium=MediumA)\n\"Fluid connector a1 (positive design flow direction is from port_a1 to port_b1)\"\nannotation (Placement(transformation(extent={{-10,-110},{10,-90}}),\n    iconTransformation(extent={{-10,-110},{10,-90}})));\n  Modelica.Fluid.Interfaces.FluidPort_a port_bAir(\nredeclare package Medium=MediumA)\n\"Fluid connector b (positive design flow direction is from port_a1 to port_b1)\"\nannotation (Placement(transformation(extent={{-10,90},{10,110}}),\n    iconTransformation(extent={{-10,90},{10,110}})));\n  Buildings.Fluid.Actuators.Dampers.Exponential vav(\nredeclare package Medium = MediumA,\nm_flow_nominal=mCooAir_flow_nominal,\ndpDamper_nominal=20,\nallowFlowReversal=allowFlowReversal,\ndpFixed_nominal=130) \"VAV box for room\" annotation (Placement(\n    transformation(\n    extent={{-10,-10},{10,10}},\n    rotation=90,\n    origin={0,10})));\n\n  Buildings.Fluid.Sensors.TemperatureTwoPort senTem(\nredeclare package Medium = MediumA,\ninitType=Modelica.Blocks.Types.Init.InitialState,\nm_flow_nominal=mCooAir_flow_nominal,\nallowFlowReversal=allowFlowReversal) \"Supply air temperature sensor\"\nannotation (Placement(transformation(\n    extent={{-10,10},{10,-10}},\n    rotation=90,\n    origin={0,40})));\n  Buildings.Fluid.Sensors.VolumeFlowRate senVolFlo(\nredeclare package Medium = MediumA,\ninitType=Modelica.Blocks.Types.Init.InitialState,\nm_flow_nominal=mCooAir_flow_nominal,\nallowFlowReversal=allowFlowReversal)\n\"Supply air volumetric flow rate sensor\" annotation (Placement(\n    transformation(\n    extent={{-10,10},{10,-10}},\n    rotation=90,\n    origin={0,80})));\nprotected\n  constant Modelica.Units.SI.SpecificHeatCapacity cpAir=Buildings.Utilities.Psychrometrics.Constants.cpAir\n\"Air specific heat capacity\";\n  constant Modelica.Units.SI.SpecificHeatCapacity cpWatLiq=Buildings.Utilities.Psychrometrics.Constants.cpWatLiq\n\"Water specific heat capacity\";\nequation\n  connect(\n      vav.port_b, senTem.port_a) annotation (Line(points={{6.66134e-16,20},{\n      0,20},{0,30},{-4.44089e-16,30}}, color={0,127,255}));\n  connect(\n      senTem.port_b, senVolFlo.port_a)\nannotation (Line(points={{0,50},{0,70},{-6.66134e-16,70}},\n                                         color={0,127,255}));\n  connect(\n      senVolFlo.port_b, port_bAir)\nannotation (Line(points={{4.44089e-16,90},{0,90},{0,100}},\n                                                 color={0,127,255}));\n  connect(\n      vav.port_a, port_aAir)\nannotation (Line(points={{-5.55112e-16,0},{0,-100}}, color={0,127,255}));\n  annotation (Icon(\ngraphics={\n    Rectangle(\n      extent={{-108.07,-16.1286},{93.93,-20.1286}},\n      lineColor={0,0,0},\n      fillPattern=FillPattern.HorizontalCylinder,\n      fillColor={0,127,255},\n      origin={-18.1286,6.07},\n      rotation=90),\n    Rectangle(\n      extent={{100.8,-22},{128.8,-44}},\n      lineColor={0,0,0},\n      fillPattern=FillPattern.HorizontalCylinder,\n      fillColor={192,192,192},\n      origin={-32,-76.8},\n      rotation=90),\n    Rectangle(\n      extent={{102.2,-11.6667},{130.2,-25.6667}},\n      lineColor={0,0,0},\n      fillPattern=FillPattern.HorizontalCylinder,\n      fillColor={0,127,255},\n      origin={-17.6667,-78.2},\n      rotation=90),\n    Polygon(\n      points={{-12,32},{16,48},{16,46},{-12,30},{-12,32}},\n      pattern=LinePattern.None,\n      smooth=Smooth.None,\n      fillColor={0,0,0},\n      fillPattern=FillPattern.Solid,\n      lineColor={0,0,0}),\n    Line(points={{-100,80},{-38,80},{-38,38},{-10,38}}, color={255,255,0},\n      thickness=1)}));\nend PartialVAVBox;\n\n    end Ventilation;\n  end Fluid;\n\n  package HeatTransfer\n  package IdealHeatingSystem\n  model IdealHeatEmission\n    parameter Real frad=0.3 \"radiative fraction\";\n      parameter Real power=2000 \"heating power\";\n    Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a heatPortCon\n      \"Heat port for convective heat transfer with room air temperature\"\n      annotation (Placement(transformation(extent={{-30,62},{-10,82}})));\n    Modelica.Thermal.HeatTransfer.Interfaces.HeatPort_a heatPortRad\n      \"Heat port for radiative heat transfer with room radiation temperature\"\n      annotation (Placement(transformation(extent={{10,62},{30,82}})));\n    Modelica.Blocks.Interfaces.RealInput y\n      annotation (Placement(transformation(extent={{-140,-20},{-100,20}})));\n    Modelica.Blocks.Math.Gain HeatingPower(k=power)\n          annotation (Placement(transformation(extent={{-40,-10},{-20,10}})));\n    Modelica.Blocks.Math.Gain convectiveGain(k=1 - frad)\n      annotation (Placement(transformation(extent={{2,-60},{22,-40}})));\n    Modelica.Blocks.Math.Gain radiativeGain(k=frad)\n      annotation (Placement(transformation(extent={{2,-90},{22,-70}})));\n        Modelica.Blocks.Nonlinear.Limiter limiter(uMax=1, uMin=0)\n          annotation (Placement(transformation(extent={{-86,-10},{-66,10}})));\n      protected\n    Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow preSumCon(final\n        alpha=0)\n      \"Heat input into radiator from convective heat transfer\"\n      annotation (Placement(transformation(extent={{52,-60},{72,-40}})));\n    Modelica.Thermal.HeatTransfer.Sources.PrescribedHeatFlow preSumRad(final\n        alpha=0)\n      \"Heat input into radiator from radiative heat transfer\"\n      annotation (Placement(transformation(extent={{52,-90},{72,-70}})));\n  equation\n\n    connect(preSumCon.port,heatPortCon)        annotation (Line(\n        points={{72,-50},{80,-50},{80,40},{-20,40},{-20,72}},\n        color={191,0,0}));\n    connect(preSumRad.port,heatPortRad)         annotation (Line(\n        points={{72,-80},{86,-80},{86,50},{20,50},{20,72}},\n        color={191,0,0}));\n    connect(preSumCon.Q_flow, convectiveGain.y)\n      annotation (Line(points={{52,-50},{23,-50}}, color={0,0,127}));\n    connect(radiativeGain.y, preSumRad.Q_flow)\n      annotation (Line(points={{23,-80},{52,-80}}, color={0,0,127}));\n        connect(HeatingPower.y, convectiveGain.u) annotation (Line(points={{-19,\n                0},{-6,0},{-6,-50},{0,-50}}, color={0,0,127}));\n        connect(HeatingPower.y, radiativeGain.u) annotation (Line(points={{-19,\n                0},{-6,0},{-6,-80},{0,-80}}, color={0,0,127}));\n        connect(y, limiter.u)\n          annotation (Line(points={{-120,0},{-88,0}}, color={0,0,127}));\n        connect(limiter.y, HeatingPower.u)\n          annotation (Line(points={{-65,0},{-42,0}}, color={0,0,127}));\n    annotation (Icon(graphics={\n          Ellipse(\n            extent={{-20,20},{20,-22}},\n            fillColor={127,0,0},\n            fillPattern=FillPattern.Solid,\n            pattern=LinePattern.None),\n          Ellipse(\n            extent={{-20,20},{20,-22}},\n            fillColor={127,0,0},\n            fillPattern=FillPattern.Solid,\n            pattern=LinePattern.None),\n          Rectangle(\n            extent={{-80,58},{80,-62}},\n            lineColor={0,0,0},\n            fillColor={127,0,0},\n            fillPattern=FillPattern.Solid),\n          Line(\n            points={{-66,28},{66,28}}),\n          Line(\n            points={{-66,0},{66,0}}),\n          Line(\n            points={{-66,-32},{66,-32}}),\n          Line(\n            points={{-66,58},{-66,-62}}),\n          Line(\n            points={{66,58},{66,-62}})}));\n  end IdealHeatEmission;\n  end IdealHeatingSystem;\n  end HeatTransfer;\n  annotation (uses(Buildings(version = \"11.0.0\"), Modelica(version = \"4.0.0\"),\n      IDEAS(version=\"3.0.0\")),\n  Icon(graphics={  Rectangle(lineColor = {200, 200, 200}, fillColor = {248, 248, 248},\n            fillPattern =                                                                            FillPattern.HorizontalCylinder, extent = {{-100, -100}, {100, 100}}, radius = 25), Rectangle(lineColor = {128, 128, 128}, extent = {{-100, -100}, {100, 100}}, radius = 25)}));\nend Common;\n\nmodel building\n            parameter Buildings.HeatTransfer.Data.GlazingSystems.Generic ins2ar2020_001(\n    final glass={\n        Buildings.HeatTransfer.Data.Glasses.Generic(\n        x=0.006,\n        k=1.0,\n        tauSol={ 0.6 },\n        rhoSol_a={ 0.075 },\n        rhoSol_b={ 0.075 },\n        tauIR=0.0,\n        absIR_a=0.84,\n        absIR_b=0.84)\n        ,\n        Buildings.HeatTransfer.Data.Glasses.Generic(\n        x=0.006,\n        k=1.0,\n        tauSol={ 0.6 },\n        rhoSol_a={ 0.075 },\n        rhoSol_b={ 0.075 },\n        tauIR=0.0,\n        absIR_a=0.84,\n        absIR_b=0.84)\n\n    },\n    final gas={\n            Buildings.HeatTransfer.Data.Gases.Air(x=0.016)\n\n    },\n    UFra=1.4)\n    annotation (\n    defaultComponentPrefixes=\"parameter\",\n    defaultComponentName=\"datGlaSys\");\n    parameter Buildings.HeatTransfer.Data.OpaqueConstructions.Generic\n        construction_001(\n    final nLay=3,\n    absIR_a=0.9,\n    absIR_b=0.9,\n    absSol_a=0.6,\n    absSol_b=0.6,\n    material={Buildings.HeatTransfer.Data.Solids.Generic(\n        x=0.1,\n        k=0.035,\n        c=1000.0,\n        d=2000.0),Buildings.HeatTransfer.Data.Solids.Generic(\n        x=0.1,\n        k=0.035,\n        c=1000.0,\n        d=2000.0),Buildings.HeatTransfer.Data.Solids.Generic(\n        x=0.1,\n        k=0.035,\n        c=1000.0,\n        d=2000.0)    },\n    roughness_a=Buildings.HeatTransfer.Types.SurfaceRoughness.Rough)\n    annotation (Placement(transformation(extent={{20,84},{34,98}})));\n\n\n\npackage Medium = Buildings.Media.Air(extraPropertiesNames={\"CO2\"}) \"Medium model\";\npackage MediumW = Buildings.Media.Water \"Medium model\";\nparameter Integer nRoo = 2 \"Number of rooms\";\n  parameter Modelica.Units.SI.Volume VRoo=4*6*3 \"Volume of one room\";\n  parameter Modelica.Units.SI.Power Q_flow_nominal=2200\n    \"Nominal power of heating plant\";\n // Due to the night setback, in which the radiator do not provide heat input into the room,\n // we scale the design power of the radiator loop\n parameter Real scaFacRad = 1.5\n    \"Scaling factor to scale the power (and mass flow rate) of the radiator loop\";\n  parameter Modelica.Units.SI.Temperature TSup_nominal=273.15 + 50 + 5\n    \"Nominal supply temperature for radiators\";\n  parameter Modelica.Units.SI.Temperature TRet_nominal=273.15 + 40 + 5\n    \"Nominal return temperature for radiators\";\n  parameter Modelica.Units.SI.Temperature dTRad_nominal=TSup_nominal -\n      TRet_nominal \"Nominal temperature difference for radiator loop\";\n  parameter Modelica.Units.SI.Temperature dTBoi_nominal=20\n    \"Nominal temperature difference for boiler loop\";\n  parameter Modelica.Units.SI.MassFlowRate mRad_flow_nominal=scaFacRad*\n      Q_flow_nominal/dTRad_nominal/4200\n    \"Nominal mass flow rate of radiator loop\";\n  parameter Modelica.Units.SI.MassFlowRate mBoi_flow_nominal=scaFacRad*\n      Q_flow_nominal/dTBoi_nominal/4200 \"Nominal mass flow rate of boiler loop\";\n  parameter Modelica.Units.SI.PressureDifference dpPip_nominal=10000\n    \"Pressure difference of pipe (without valve)\";\n  parameter Modelica.Units.SI.PressureDifference dpVal_nominal=6000\n    \"Pressure difference of valve\";\n  parameter Modelica.Units.SI.PressureDifference dpRoo_nominal=6000\n    \"Pressure difference of flow leg that serves a room\";\n  parameter Modelica.Units.SI.PressureDifference dpThrWayVal_nominal=6000\n    \"Pressure difference of three-way valve\";\n  parameter Modelica.Units.SI.PressureDifference dp_nominal=dpPip_nominal +\n      dpVal_nominal + dpRoo_nominal + dpThrWayVal_nominal\n    \"Pressure difference of loop\";\n\n\n    Buildings.ThermalZones.Detailed.MixedAir space_1(\n        redeclare package Medium = Medium,\n            hRoo=2.5,\n    AFlo=100.0,\n    linearizeRadiation=true,\n    m_flow_nominal=0.01,\n    mSenFac=1.0,\n    T_start=294.15\n,nPorts = 3,                    nConExt=2,\n                    datConExt(\n                    layers={ construction_001, construction_001 },\n    A={ 100.0, 200.0 },\n    til={Buildings.Types.Tilt.Wall,Buildings.Types.Tilt.Wall},\n                    azi={ 180.0, 180.0 }),\n                    nSurBou=0,                    nConBou=1,\n                    datConBou(\n                    layers={ construction_001 },\n    A={ 1.0 },\n    til={Buildings.Types.Tilt.Floor},\n                    azi={ 90.0 }),\n                    nConExtWin=1,\n                    datConExtWin(\n                    layers={ construction_001 },\n    A={ 400.0 },\n    til={Buildings.Types.Tilt.Wall},\n                    glaSys={ ins2ar2020_001 },\n                    wWin={ 1.0 },\n                    hWin={ 1.0 },\n                    azi={ 180.0 }),\n        nConPar=0,\n        energyDynamics=Modelica.Fluid.Types.Dynamics.FixedInitial) annotation (\n    Placement(transformation(origin = { 0, 0 },\n    extent = {{-20, -20}, {20, 20}}\n)));\n        first_model.Common.Controls.ventilation.OccupancyOccupancy_1\n    occupancy_1(    gain=[40; 75; 40],\n    k=1/7/3,\n    occupancy=3600*{9, 17}\n) annotation (\n    Placement(transformation(origin = { -50, 0 },\n    extent = {{-10, -10}, {10, 10}}\n)));\n        Buildings.BoundaryConditions.WeatherData.ReaderTMY3\n                weather(filNam=Modelica.Utilities.Files.loadResource\n        (\"modelica://Buildings/Resources/weatherdata/USA_IL_Chicago-OHare.Intl.AP.725300_TMY3.mos\"))\n     annotation (\n    Placement(transformation(origin = { -100, 200 },\n    extent = {{-10, -10}, {10, 10}}\n)));\n        first_model.Common.Controls.ventilation.DataServer\n        data_bus (redeclare package\n          Medium = Medium) annotation (\n    Placement(transformation(origin = { 133.23268958693882, 124.1436761738596 },\n    extent = {{-10, -10}, {10, 10}}\n)));\n\n\nequation    connect(space_1.qGai_flow,occupancy_1.y)\nannotation (Line(\npoints={{ 0.0, 0.0 }    ,{ -25.0, 0.0 }    ,{ -25.0, 0.0 }    ,{ -50.0, 0.0 }    },\ncolor={255,204,51},\nthickness=0.5,\nsmooth=Smooth.None));    connect(space_1.weaBus,weather.weaBus)\nannotation (Line(\npoints={{ 0.0, 0.0 }    ,{ -50.0, 0.0 }    ,{ -50.0, 200.0 }    ,{ -100.0, 200.0 }    },\nthickness=0.05,\nsmooth=Smooth.None));    connect(occupancy_1.dataBus,data_bus.dataBus)\nannotation (Line(\npoints={{ -50.0, 0.0 }    ,{ 41.61634479346941, 0.0 }    ,{ 41.61634479346941, 124.1436761738596 }    ,{ 133.23268958693882, 124.1436761738596 }    },\nthickness=0.05,\nsmooth=Smooth.None));    connect(space_1.heaPorAir,data_bus.port[1])\nannotation (Line(\npoints={{ 0.0, 0.0 }    ,{ 66.61634479346941, 0.0 }    ,{ 66.61634479346941, 124.1436761738596 }    ,{ 133.23268958693882, 124.1436761738596 }    },\nthickness=0.05,\nsmooth=Smooth.None));    connect(space_1.ports[1],data_bus.port_a[1])\nannotation (Line(\npoints={{ 0.0, 0.0 }    ,{ 66.61634479346941, 0.0 }    ,{ 66.61634479346941, 124.1436761738596 }    ,{ 133.23268958693882, 124.1436761738596 }    },\nthickness=0.05,\nsmooth=Smooth.None));annotation (Diagram(coordinateSystem(extent={{-231.12726125253602,-250.0},{204.12646679633698,250.0}})), Icon(\n        coordinateSystem(extent={{-231.12726125253602,-250.0},{204.12646679633698,250.0}})));\nend building;\n\n\nend first_model;\n</code></pre>"},{"location":"tutorials/first_simulation/","title":"First simulation","text":"<p>This tutorial will guide you through your first simulation using the Trano library. Trano is a Python library designed for simulating building energy systems with the Buildings and IDEAS libraries. You'll need only a configuration file and a few lines of code to get started.</p> <p>This tutorial aims to demonstrate how easy it is to perform building energy simulations using Trano, while also showcasing the automatically generated results presented in a clear report.</p>"},{"location":"tutorials/first_simulation/#input-configuration-file","title":"Input configuration file","text":"<p>The described configuration outlines a building with the following characteristics:</p> <ul> <li> <p>Construction Materials: The walls are made of three layers of a dense material (density of 2000 kg/m\u00b3) with low thermal conductivity (0.035 W/m\u00b7K), indicating good insulation properties. The construction is uniform across all walls, suggesting a consistent thermal performance.</p> </li> <li> <p>Glazing System: The windows feature a double-glazing system with air as the gas layer, which provides additional insulation. The specific properties of the glass suggest it has moderate emissivity, allowing some solar heat gain while also maintaining insulation.</p> </li> <li> <p>Floor Area and Room Height: The building has a floor area of 100 m\u00b2 and an average room height of 2.5 m, indicating a typical residential or small commercial space.</p> </li> <li> <p>External Boundaries: The building has external walls primarily oriented south (180\u00b0 azimuth), which could suggest that it is designed to maximize solar gain, particularly in colder climates.</p> </li> </ul> <p>Overall, this configuration represents a well-insulated, energy-efficient building, likely intended for residential use or small commercial purposes, designed with notable attention to thermal performance.</p> <pre><code>material:\n  - id: MATERIAL:001\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:002\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:003\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n\nconstructions:\n  - id: CONSTRUCTION:001\n    layers:\n      - material: MATERIAL:001\n        thickness: 0.1\n      - material: MATERIAL:002\n        thickness: 0.1\n      - material: MATERIAL:003\n        thickness: 0.1\nglass_material:\n  - density: 2500.0\n    id: GLASS:001\n    longwave_emissivity: 0.84\n    shortwave_emissivity: 0.67\n    specific_heat_capacity: 840.0\n    thermal_conductivity: 1.0\ngas:\n  - density: 1.2\n    id: AIR:001\n    longwave_emissivity: 0.0\n    shortwave_emissivity: 0.0\n    specific_heat_capacity: 1006.0\n    thermal_conductivity: 0.0256\nglazings:\n- id: INS2AR2020:001\n  layers:\n  - glass: GLASS:001\n    thickness: 0.006\n  - gas: AIR:001\n    thickness: 0.016\n  - glass: GLASS:001\n    thickness: 0.006\nspaces:\n  - parameters:\n      floor_area: 100.0\n      average_room_height: 2.5\n    external_boundaries:\n      external_walls:\n        - surface: 100.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 100.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 200.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 1.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 1.0\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 1.0\n          height: 1.0\n</code></pre>"},{"location":"tutorials/first_simulation/#code","title":"Code","text":"Test tutorials<pre><code>    from trano.main import simulate_model\n    from trano.simulate.simulate import SimulationLibraryOptions\n\n    simulate_model(\n        \"./first_simulation.yaml\",\n        SimulationLibraryOptions(\n            start_time=0,\n            end_time=2 * 3600 * 24 * 7,\n        ),\n    )\n</code></pre>"},{"location":"tutorials/first_simulation/#general-explanation","title":"General Explanation","text":"<p>The code snippet imports the <code>simulate_model</code> function and the <code>SimulationLibraryOptions</code> class from specific modules within the <code>trano</code> package, then calls the <code>simulate_model</code> function with a configuration file and simulation options.</p>"},{"location":"tutorials/first_simulation/#description-and-parameters","title":"Description and Parameters","text":"<ul> <li>Function: <code>simulate_model</code></li> <li>Parameters:<ul> <li><code>config_file</code>: Path to the simulation configuration file (string, e.g., \"./first_simulation.yaml\").</li> <li><code>options</code>: Instance of <code>SimulationLibraryOptions</code>.</li> <li>start_time: Start time for the simulation (integer, seconds).</li> <li>end_time: End time for the simulation (integer, seconds). Calculated as <code>2 * 3600 * 24 * 7</code> (two weeks).</li> </ul> </li> </ul>"},{"location":"tutorials/first_simulation/#results","title":"Results","text":"<p>Once the simulation is terminated, Trano will generate the following report. It includes a detailed description of the various parameters utilized during the simulation. In addition to the parameters specified in the YAML file, the report also details all default parameters employed throughout the simulation.</p> Spaces<p><p></p></p><p> External Boundaries Table hRoo AFlo linearizeRadiation m_flow_nominal mSenFac T_start volume 2.5 100.0 true 0.01 1.0 294.15 250.0 gain k occupancy name [40; 75; 40] 1/7/3 3600*{9, 17} occupancy_1 Name Azimuth Construction Name Surface Tilt externalwall_0 180.0 construction_001 100.0 wall externalwall_1 180.0 construction_001 100.0 wall externalwall_2 180.0 construction_001 200.0 wall window_0 180.0 ins2ar2020_001 1.0 wall flooronground_0 90.0 construction_001 1.0 floor <p><p></p></p>Construction<p><p></p></p><p> Layer Information Table Layers for ins2ar2020_001 Name c epsLw epsSw k rho Thickness glass_001 840.0 0.84 0.67 1.0 2500.0 0.006 air_001 1006.0 0.0 0.0 0.0256 1.2 0.016 glass_001 840.0 0.84 0.67 1.0 2500.0 0.006 Layer Information Table Layers for construction_001 Name c epsLw epsSw k rho Thickness material_001 1000.0 0.85 0.85 0.035 2000.0 0.1 material_002 1000.0 0.85 0.85 0.035 2000.0 0.1 material_003 1000.0 0.85 0.85 0.035 2000.0 0.1 </p><p><p></p></p>"},{"location":"tutorials/three_zones_hydronic_heating/","title":"Three zones hydronic heating","text":"<p>The previous tutorials provided idealized, somewhat unrealistic examples. In this tutorial, we will simulate a three-zone building with a hydronic heating system, creating a more realistic house model. </p> <p>As usual, the configuration file will be presented and explained. Here are some key points to note regarding the configuration file:</p> <ul> <li> <p>Default Construction Values: Trano includes a set of predefined construction, glazing, and gas properties that can be imported into your configuration file. To use them, add the following line:   <pre><code>default: !include_default\n</code></pre></p> </li> <li> <p>Emissions Systems: Each space is assigned a list of emission systems. Each system is linked to a radiator object (RADIATOR:001) and a valve object (VALVE:001). The valve is controlled instead of the radiator:   <pre><code>emissions:\n  - radiator:\n      id: RADIATOR:001\n  - valve:\n      id: VALVE:001\n      control:\n        emission_control:\n</code></pre></p> </li> <li> <p>Defining the Hydronic System: It is essential to define the complete hydronic system, which includes the boiler, pump, and various valves:   <pre><code>systems:\n  - boiler:\n      id: BOILER:001\n      control:\n        boiler_control:\n  - pump:\n      id: PUMP:001\n      control:\n        collector_control:\n      outlets:\n        - THREE_WAY_VALVE:001\n        - THREE_WAY_VALVE:002\n      inlets:\n        - BOILER:001\n  - split_valve:\n      id: SPLIT_VALVE:001\n      inlets:\n        - VALVE:003\n        - VALVE:001\n      outlets:\n        - BOILER:001\n  - three_way_valve:\n      id: THREE_WAY_VALVE:001\n      control:\n        three_way_valve_control:\n      outlets:\n        - TEMPERATURE_SENSOR:001\n        - SPLIT_VALVE:001\n  - temperature_sensor:\n      id: TEMPERATURE_SENSOR:001\n      outlets:\n        - RADIATOR:001\n        - RADIATOR:003\n  - split_valve:\n      id: SPLIT_VALVE:002\n      inlets:\n        - VALVE:002\n      outlets:\n        - BOILER:001\n  - three_way_valve:\n      id: THREE_WAY_VALVE:002\n      control:\n        three_way_valve_control:\n      outlets:\n        - TEMPERATURE_SENSOR:002\n        - SPLIT_VALVE:002\n  - temperature_sensor:\n      id: TEMPERATURE_SENSOR:002\n      inlets:\n        - THREE_WAY_VALVE:002\n      outlets:\n        - RADIATOR:002\n</code></pre></p> </li> </ul>"},{"location":"tutorials/three_zones_hydronic_heating/#input-configuration-file","title":"Input configuration file","text":"<p>The described configuration represents a multi-room building with a combination of different internal and external spaces. It includes:</p> <ol> <li>Construction Details:</li> <li>Materials: The walls and floors are composed of materials with thermal conductivity of 0.035, a density of 2000 kg/m\u00b3, and a specific heat capacity of 1000 J/(kg\u00b7K), indicating good insulation properties.</li> <li> <p>Constructions: The building features cavity walls and concrete slabs.</p> </li> <li> <p>Space Allocation:</p> </li> <li> <p>There are three distinct spaces (rooms), each with specific dimensions and occupancy parameters, including floor area and ceiling height.</p> </li> <li> <p>Heating System:</p> </li> <li> <p>The building is equipped with a centralized heating system, featuring radiators controlled by valves and a boiler for heating water.</p> </li> <li> <p>Ventilation and Temperature Control:</p> </li> <li>Various sensors and three-way valves manage the flow of heating, suggesting a focus on maintaining comfort and energy efficiency.</li> </ol> <p>Overall, this configuration suggests a residential building designed for efficient thermal performance and effective heating management, with clearly defined living spaces and infrastructure for heating control.</p> <pre><code>default: !include_default\nmaterial:\n  - id: MATERIAL:001\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:002\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n  - id: MATERIAL:003\n    thermal_conductivity: 0.035\n    density: 2000.0\n    specific_heat_capacity: 1000.0\n\nconstructions:\n  - id: CONSTRUCTION:001\n    layers:\n      - material: MATERIAL:001\n        thickness: 0.1\n      - material: MATERIAL:002\n        thickness: 0.1\n      - material: MATERIAL:003\n        thickness: 0.1\nspaces:\n  - occupancy:\n    parameters:\n      floor_area: 100.0\n      average_room_height: 2.5\n    id: SPACE:001\n    external_boundaries:\n      external_walls:\n        - surface: 20\n          azimuth: 0\n          tilt: wall\n          construction: CAVITYWALL:001\n        - surface: 30\n          azimuth: 90\n          tilt: wall\n          construction: CAVITYWALL:001\n        - surface: 50\n          azimuth: 180.0\n          tilt: wall\n          construction: CAVITYWALL:001\n      windows:\n        - surface: 5.0\n          construction: EPCDOUBLE:001\n          azimuth: 0\n          tilt: wall\n        - surface: 2.0\n          construction: EPCDOUBLE:001\n          azimuth: 180.0\n          tilt: wall\n      floor_on_grounds:\n        - surface: 120\n          construction: CONCRETESLAB:001\n    emissions:\n      - radiator:\n          id: RADIATOR:003\n      - valve:\n          id: VALVE:003\n          control:\n            emission_control:\n  - occupancy:\n    parameters:\n      floor_area: 70\n      average_room_height: 2.5\n    id: SPACE:002\n    external_boundaries:\n      external_walls:\n        - surface: 25\n          azimuth: 0\n          tilt: wall\n          construction: CAVITYWALLPARTIALFILL:001\n        - surface: 25\n          azimuth: 90\n          tilt: wall\n          construction: CAVITYWALLPARTIALFILL:001\n        - surface: 34\n          azimuth: 180\n          tilt: wall\n          construction: CAVITYWALLPARTIALFILL:001\n      windows:\n        - surface: 5.0\n          construction: INS2AR2020:001\n          azimuth: 0\n          tilt: wall\n        - surface: 2.0\n          construction: INS2AR2020:001\n          azimuth: 180\n          tilt: wall\n      floor_on_grounds:\n        - surface: 60\n          construction: CONCRETESLAB:001\n    emissions:\n      - radiator:\n          id: RADIATOR:001\n      - valve:\n          id: VALVE:001\n          control:\n            emission_control:\n  - occupancy:\n    parameters:\n      floor_area: 50.0\n      average_room_height: 2.5\n    id: SPACE:003\n    external_boundaries:\n      external_walls:\n        - surface: 22\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 17\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 36\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 60.0\n          construction: CONCRETESLAB:001\n    emissions:\n      - radiator:\n          id: RADIATOR:002\n      - valve:\n          id: VALVE:002\n          control:\n            emission_control:\ninternal_walls:\n  - space_1: SPACE:001\n    space_2: SPACE:002\n    construction: CAVITYWALL:001\n    surface: 20\n  - space_1: SPACE:002\n    space_2: SPACE:001\n    construction: CONSTRUCTION:001\n    surface: 15\n  - space_1: SPACE:002\n    space_2: SPACE:003\n    construction: CAVITYWALLPARTIALFILL:001\n    surface: 22\nsystems:\n  - boiler:\n      id: BOILER:001\n      control:\n        boiler_control:\n  - pump:\n      id: PUMP:001\n      control:\n        collector_control:\n      outlets:\n        - THREE_WAY_VALVE:001\n        - THREE_WAY_VALVE:002\n      inlets:\n        - BOILER:001\n  - split_valve:\n      id: SPLIT_VALVE:001\n      inlets:\n        - VALVE:003\n        - VALVE:001\n      outlets:\n        - BOILER:001\n  - three_way_valve:\n      id: THREE_WAY_VALVE:001\n      control:\n        three_way_valve_control:\n      outlets:\n        - TEMPERATURE_SENSOR:001\n        - SPLIT_VALVE:001\n  - temperature_sensor:\n      id: TEMPERATURE_SENSOR:001\n      outlets:\n        - RADIATOR:001\n        - RADIATOR:003\n  - split_valve:\n      id: SPLIT_VALVE:002\n      inlets:\n        - VALVE:002\n      outlets:\n        - BOILER:001\n  - three_way_valve:\n      id: THREE_WAY_VALVE:002\n      control:\n        three_way_valve_control:\n      outlets:\n        - TEMPERATURE_SENSOR:002\n        - SPLIT_VALVE:002\n  - temperature_sensor:\n      id: TEMPERATURE_SENSOR:002\n      inlets:\n        - THREE_WAY_VALVE:002\n      outlets:\n        - RADIATOR:002\n</code></pre>"},{"location":"tutorials/three_zones_hydronic_heating/#code","title":"Code","text":"<p>The following code snippet demonstrates how to simulate a multizone model using Trano. This simulation generates a comprehensive report that includes a detailed description of parameters and accompanying figures.</p> Test tutorials<pre><code>    from trano.main import simulate_model\n    from trano.simulate.simulate import SimulationLibraryOptions\n\n    simulate_model(\n        \"./three_zones_hydronic_heating.yaml\",\n        SimulationLibraryOptions(\n            start_time=0,\n            end_time=2 * 3600 * 24 * 7,\n            tolerance=1e-4,\n            library_name=\"Buildings\",\n        ),\n    )\n</code></pre>"},{"location":"tutorials/three_zones_hydronic_heating/#general-explanation","title":"General Explanation","text":"<p>This code snippet imports a function to simulate a model using configuration settings defined in a YAML file. It specifies parameters like time duration, tolerance, and the library to use for simulations.</p>"},{"location":"tutorials/three_zones_hydronic_heating/#parameters-description","title":"Parameters Description","text":"<ul> <li>Path to Model File: <code>\"./three_zones_hydronic_heating.yaml\"</code></li> <li> <p>Specifies the location of the simulation model configuration file.</p> </li> <li> <p>SimulationLibraryOptions: </p> </li> <li> <p>start_time: <code>0</code></p> <ul> <li>The time at which the simulation starts, in seconds.</li> </ul> </li> <li> <p>end_time: <code>2 * 3600 * 24 * 7</code></p> <ul> <li>The total simulation duration, calculated here to be two weeks in seconds.</li> </ul> </li> <li> <p>tolerance: <code>1e-4</code></p> <ul> <li>The acceptable numerical tolerance for the simulation results.</li> </ul> </li> <li> <p>library_name: <code>\"Buildings\"</code></p> <ul> <li>The name of the library utilized for the simulation.</li> </ul> </li> </ul>"},{"location":"tutorials/three_zones_hydronic_heating/#outputs","title":"Outputs","text":"<p>The following report was generated by Trano after simulating the three-zone building with an ideal heating system.</p> Spaces<p><p></p></p><p> External Boundaries Table hRoo AFlo linearizeRadiation m_flow_nominal mSenFac T_start volume 2.5 100.0 true 0.01 1.0 294.15 250.0 gain k occupancy name [35; 70; 30] 1/6/4 3600 * {7, 19} occupancy_1 Name Azimuth Construction Name Surface Tilt externalwall_0 0.0 cavitywall_001 20.0 wall externalwall_1 90.0 cavitywall_001 30.0 wall externalwall_2 180.0 cavitywall_001 50.0 wall window_0 0.0 epcdouble_001 5.0 wall window_1 180.0 epcdouble_001 2.0 wall flooronground_0 90.0 concreteslab_001 120.0 floor internal_space_001_space_002_cavitywall 10.0 cavitywall_001 20.0 wall internal_space_002_space_001_construction 10.0 construction_001 15.0 wall TAir_nominal dp_nominal n deltaM fraRad Q_flow_nominal nEle TRad_nominal linearized from_dp T_a_nominal T_b_nominal mDry VWat name 293.15 0.0 1.24 0.01 0.3 2000.0 1 293.15 false false 363.15 353.15 52.6 0.116 radiator_003 dpFixed_nominal dpValve_nominal deltaM m_flow_nominal delta0 R linearized from_dp l name 6000.0 6000.0 0.02 0.01 0.01 50.0 false true 0.0001 valve_003 External Boundaries Table hRoo AFlo linearizeRadiation m_flow_nominal mSenFac T_start volume 2.5 70.0 true 0.01 1.0 294.15 175.0 gain k occupancy name [35; 70; 30] 1/6/4 3600 * {7, 19} occupancy_2 Name Azimuth Construction Name Surface Tilt externalwall_3 0.0 cavitywallpartialfill_001 25.0 wall externalwall_4 90.0 cavitywallpartialfill_001 25.0 wall externalwall_5 180.0 cavitywallpartialfill_001 34.0 wall window_2 0.0 ins2ar2020_001 5.0 wall window_3 180.0 ins2ar2020_001 2.0 wall flooronground_1 90.0 concreteslab_001 60.0 floor internal_space_001_space_002_cavitywall 10.0 cavitywall_001 20.0 wall internal_space_002_space_001_construction 10.0 construction_001 15.0 wall internal_space_002_space_003_cavitywallpartialfill 10.0 cavitywallpartialfill_001 22.0 wall TAir_nominal dp_nominal n deltaM fraRad Q_flow_nominal nEle TRad_nominal linearized from_dp T_a_nominal T_b_nominal mDry VWat name 293.15 0.0 1.24 0.01 0.3 2000.0 1 293.15 false false 363.15 353.15 52.6 0.116 radiator_001 dpFixed_nominal dpValve_nominal deltaM m_flow_nominal delta0 R linearized from_dp l name 6000.0 6000.0 0.02 0.01 0.01 50.0 false true 0.0001 valve_001 External Boundaries Table hRoo AFlo linearizeRadiation m_flow_nominal mSenFac T_start volume 2.5 50.0 true 0.01 1.0 294.15 125.0 gain k occupancy name [35; 70; 30] 1/6/4 3600 * {7, 19} occupancy_3 Name Azimuth Construction Name Surface Tilt externalwall_6 180.0 construction_001 22.0 wall externalwall_7 180.0 construction_001 17.0 wall externalwall_8 180.0 construction_001 36.0 wall flooronground_2 90.0 concreteslab_001 60.0 floor internal_space_002_space_003_cavitywallpartialfill 10.0 cavitywallpartialfill_001 22.0 wall TAir_nominal dp_nominal n deltaM fraRad Q_flow_nominal nEle TRad_nominal linearized from_dp T_a_nominal T_b_nominal mDry VWat name 293.15 0.0 1.24 0.01 0.3 2000.0 1 293.15 false false 363.15 353.15 52.6 0.116 radiator_002 dpFixed_nominal dpValve_nominal deltaM m_flow_nominal delta0 R linearized from_dp l name 6000.0 6000.0 0.02 0.01 0.01 50.0 false true 0.0001 valve_002 <p><p></p></p>Construction<p><p></p></p><p> Layer Information Table Layers for concreteslab_001 Name c epsLw epsSw k rho Thickness concrete_001 900.0 0.88 0.55 1.4 2240.0 0.125 concrete_001 900.0 0.88 0.55 1.4 2240.0 0.125 Layer Information Table Layers for construction_001 Name c epsLw epsSw k rho Thickness material_001 1000.0 0.85 0.85 0.035 2000.0 0.1 material_002 1000.0 0.85 0.85 0.035 2000.0 0.1 material_003 1000.0 0.85 0.85 0.035 2000.0 0.1 Layer Information Table Layers for epcdouble_001 Name c epsLw epsSw k rho Thickness glass_001 840.0 0.84 0.67 1.0 2500.0 0.0038 air_001 1006.0 0.0 0.0 0.0256 1.2 0.012 glass_001 840.0 0.84 0.67 1.0 2500.0 0.0038 Layer Information Table Layers for cavitywallpartialfill_001 Name c epsLw epsSw k rho Thickness brick_001 800.0 0.88 0.55 0.89 1920.0 0.08 air_001 1006.0 0.0 0.0 0.0256 1.2 0.03 rockwool_001 800.0 0.8 0.8 0.035 100.0 0.1 brickhollow_001 880.0 0.88 0.55 0.3 850.0 0.14 gypsum_001 840.0 0.85 0.65 0.38 1120.0 0.015 Layer Information Table Layers for ins2ar2020_001 Name c epsLw epsSw k rho Thickness glass_001 840.0 0.84 0.67 1.0 2500.0 0.006 argon_001 522.0 0.0 0.0 0.0174 1.66 0.016 glass_001 840.0 0.84 0.67 1.0 2500.0 0.006 Layer Information Table Layers for cavitywall_001 Name c epsLw epsSw k rho Thickness brick_001 800.0 0.88 0.55 0.89 1920.0 0.08 rockwool_001 800.0 0.8 0.8 0.035 100.0 0.1 brickhollow_001 880.0 0.88 0.55 0.3 850.0 0.14 gypsum_001 840.0 0.85 0.65 0.38 1120.0 0.015 </p><p><p></p></p>Systems<p><p></p></p><p> External Boundaries Table coefficients_for_efficiency_curve diff_pressure dp_nominal dt_boi_nominal dt_rad_nominal effcur fraction_of_nominal_flow_rate_where_flow_transitions_to_laminar height_of_tank_without_insulation if_actual_temperature_at_port_is_computed nominal_heating_power number_of_volume_segments sca_fac_rad tank_volume temperature_used_to_compute_nominal_efficiency thickness_of_insulation use_linear_relation_between_m_flow_and_dp_for_any_flow_rate nominal_mass_flow_radiator_loop nominal_mass_flow_rate_boiler v_flow name {0.9} 5000*{2,1} 5000.0 20.0 10.0 Buildings.Fluid.Types.EfficiencyCurves.Constant 0.1 2.0 false 2000.0 4 1.5 0.2 353.15 0.002 false 0.07142857142857142 0.07142857142857142 0.07142857142857142/1000*{0.5,1} boiler_001 </p><p><p></p></p>"},{"location":"tutorials/three_zones_ideal_heating/","title":"Three zones ideal heating","text":"<p>The previous sections primarily focused on simulating the building envelope to understand how the YAML file inputs for Trano can be structured. This section will shift the focus to simulating a building equipped with a heating system. Specifically, we will consider a three-zone building featuring an ideal heating system.</p> <p>Below is a description of the YAML configuration file that details the building's heating system:</p> <pre><code>emissions:\n- radiator:\n    id: RADIATOR:001\n    variant: ideal\n    parameters:\n      nominal_heating_power_positive_for_heating: 2500\n    control:\n      emission_control:\n        id: EMISSION_CONTROL:001\n        parameters:\n          schedule: 3600*{10, 20}\n          temperature_heating_setpoint: 295.15\n          temperature_heating_setback: 291.15\n</code></pre> <p>In this configuration, the <code>emissions</code> field indicates that the space is associated with an emission system. The <code>variant</code> field specifies the type of radiator, which in this case is an ideal radiator. The <code>control</code> object of the radiator is defined within the <code>control</code> field, where parameters such as setpoints and schedule are outlined, along with the heating power of the ideal radiator.</p>"},{"location":"tutorials/three_zones_ideal_heating/#input-configuration-file","title":"Input configuration file","text":"<p>The described building configuration appears to be a multi-room structure featuring a combination of thermal constructions and glazing systems. Here are the key characteristics:</p> <ol> <li> <p>Material Use: The external walls and floors are constructed with three different materials that have low thermal conductivity and relatively high density, indicating good thermal mass properties.</p> </li> <li> <p>Spatial Layout: The building contains various spaces (three distinct spaces noted) with different floor areas and heights, suggesting it may be designed for residential or small commercial use.</p> </li> <li> <p>Windows and Glazing: The building includes double glazing with an air gap for insulation, which enhances thermal performance, especially in energy-efficient designs.</p> </li> <li> <p>Heating System: An ideal radiator system provides heating with a scheduled control mechanism, suggesting consideration for occupant comfort and energy efficiency.</p> </li> <li> <p>Room Size and Shape: The presence of both smaller (80 m\u00b2) and larger (120 m\u00b2) rooms with similar ceiling heights suggests a design that accommodates various functions or usage patterns.</p> </li> </ol> <p>Overall, the building configuration indicates an energy-efficient structure that could serve as a residence or small office, focusing on thermal comfort and efficiency.</p> <pre><code>material:\n  - id: MATERIAL:001\n    thermal_conductivity: 0.045\n    density: 2100.0\n    specific_heat_capacity: 900.0\n  - id: MATERIAL:002\n    thermal_conductivity: 0.04\n    density: 1950.0\n    specific_heat_capacity: 950.0\n  - id: MATERIAL:003\n    thermal_conductivity: 0.038\n    density: 2050.0\n    specific_heat_capacity: 920.0\n\nconstructions:\n  - id: CONSTRUCTION:001\n    layers:\n      - material: MATERIAL:001\n        thickness: 0.12\n      - material: MATERIAL:002\n        thickness: 0.08\n      - material: MATERIAL:003\n        thickness: 0.1\n\nglass_material:\n  - density: 2500.0\n    id: GLASS:001\n    longwave_emissivity: 0.82\n    shortwave_emissivity: 0.65\n    specific_heat_capacity: 860.0\n    thermal_conductivity: 1.1\n\ngas:\n  - density: 1.18\n    id: AIR:001\n    longwave_emissivity: 0.0\n    shortwave_emissivity: 0.0\n    specific_heat_capacity: 1005.0\n    thermal_conductivity: 0.026\n\nglazings:\n  - id: INS2AR2020:001\n    layers:\n      - glass: GLASS:001\n        thickness: 0.005\n      - gas: AIR:001\n        thickness: 0.014\n      - glass: GLASS:001\n        thickness: 0.005\n\nspaces:\n  - parameters:\n      floor_area: 80.0  # Smaller room\n      average_room_height: 2.5\n    id: SPACE:001\n    external_boundaries:\n      external_walls:\n        - surface: 90.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 70.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 160.0\n          azimuth: 270.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 80.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 1.5\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 1.5\n          height: 1.0\n\n  - parameters:\n      floor_area: 120.0  # Larger room with different shape\n      average_room_height: 2.7\n    id: SPACE:002\n    external_boundaries:\n      external_walls:\n        - surface: 120.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 100.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 220.0\n          azimuth: 0.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 120.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 2.0\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 2.0\n          height: 1.2\n  - parameters:\n      floor_area: 120.0  # Larger room with different shape\n      average_room_height: 2.7\n    id: SPACE:003\n    external_boundaries:\n      external_walls:\n        - surface: 120.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 100.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 220.0\n          azimuth: 0.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 120.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 2.0\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 2.0\n          height: 1.2\n\n    emissions:\n      - radiator:\n          id: RADIATOR:001\n          variant: ideal\n          parameters:\n              nominal_heating_power_positive_for_heating: 2500\n          control:\n            emission_control:\n              id: EMISSION_CONTROL:001\n              parameters:\n                schedule: 3600*{10, 20}\n                temperature_heating_setpoint: 295.15\n                temperature_heating_setback: 291.15\n\ninternal_walls:\n  - space_1: SPACE:002\n    space_2: SPACE:001\n    construction: CONSTRUCTION:001\n    surface: 18.0\n</code></pre>"},{"location":"tutorials/three_zones_ideal_heating/#code","title":"Code","text":"<p>This code snippet demonstrates how to simulate a multizone house using Trano. It leverages the same code from the previous tutorial, making it straightforward to implement.</p> Test tutorials<pre><code>    from trano.main import simulate_model\n    from trano.simulate.simulate import SimulationLibraryOptions\n\n    simulate_model(\n        \"./three_zones_ideal_heating.yaml\",\n        SimulationLibraryOptions(\n            start_time=0,\n            end_time=2 * 3600 * 24 * 7,\n            tolerance=1e-4,\n            library_name=\"Buildings\",\n        ),\n    )\n</code></pre>"},{"location":"tutorials/three_zones_ideal_heating/#general-explanation","title":"General Explanation","text":"<p>The code snippet imports functions required to simulate a model defined in a YAML file using specific simulation options. It sets up a simulation for a heating model across three zones.</p>"},{"location":"tutorials/three_zones_ideal_heating/#general-description-and-parameters","title":"General Description and Parameters","text":"<ul> <li>Function: <code>simulate_model</code></li> <li>Parameters:</li> <li> <p>File Path: <code>\"./three_zones_ideal_heating.yaml\"</code></p> <ul> <li>Location of the model configuration file in YAML format.</li> </ul> </li> <li> <p>SimulationLibraryOptions: </p> <ul> <li>start_time: <code>0</code></li> <li> <p>The initial time for the simulation (in seconds).</p> </li> <li> <p>end_time: <code>2 * 3600 * 24 * 7</code></p> </li> <li> <p>The final time for the simulation, calculated as 2 weeks (in seconds).</p> </li> <li> <p>tolerance: <code>1e-4</code></p> </li> <li> <p>The acceptable error tolerance for the simulation.</p> </li> <li> <p>library_name: <code>\"Buildings\"</code></p> </li> <li>The name of the library used for the simulation, indicating it focuses on building systems and dynamics.</li> </ul> </li> </ul>"},{"location":"tutorials/three_zones_ideal_heating/#outputs","title":"Outputs","text":"<p>The following report has been generated by Trano after simulating a three-zone building equipped with an ideal heating system.</p> Spaces<p><p></p></p><p> External Boundaries Table hRoo AFlo linearizeRadiation m_flow_nominal mSenFac T_start volume 2.5 80.0 true 0.01 1.0 294.15 200.0 gain k occupancy name [40; 75; 40] 1/7/3 3600*{9, 17} occupancy_1 Name Azimuth Construction Name Surface Tilt externalwall_0 180.0 construction_001 90.0 wall externalwall_1 90.0 construction_001 70.0 wall externalwall_2 270.0 construction_001 160.0 wall window_0 180.0 ins2ar2020_001 1.5 wall flooronground_0 90.0 construction_001 80.0 floor internal_space_002_space_001_construction 10.0 construction_001 18.0 wall External Boundaries Table hRoo AFlo linearizeRadiation m_flow_nominal mSenFac T_start volume 2.7 120.0 true 0.01 1.0 294.15 324.0 gain k occupancy name [40; 75; 40] 1/7/3 3600*{9, 17} occupancy_2 Name Azimuth Construction Name Surface Tilt externalwall_3 180.0 construction_001 120.0 wall externalwall_4 90.0 construction_001 100.0 wall externalwall_5 0.0 construction_001 220.0 wall window_1 180.0 ins2ar2020_001 2.0 wall flooronground_1 90.0 construction_001 120.0 floor internal_space_002_space_001_construction 10.0 construction_001 18.0 wall External Boundaries Table hRoo AFlo linearizeRadiation m_flow_nominal mSenFac T_start volume 2.7 120.0 true 0.01 1.0 294.15 324.0 gain k occupancy name [40; 75; 40] 1/7/3 3600*{9, 17} occupancy_3 Name Azimuth Construction Name Surface Tilt externalwall_6 180.0 construction_001 120.0 wall externalwall_7 90.0 construction_001 100.0 wall externalwall_8 0.0 construction_001 220.0 wall window_2 180.0 ins2ar2020_001 2.0 wall flooronground_2 90.0 construction_001 120.0 floor TAir_nominal dp_nominal n deltaM fraRad Q_flow_nominal nEle TRad_nominal linearized from_dp T_a_nominal T_b_nominal mDry VWat name 293.15 0.0 1.24 0.01 0.3 2500.0 1 293.15 false false 363.15 353.15 65.75 0.145 radiator_001 <p><p></p></p>Construction<p><p></p></p><p> Layer Information Table Layers for ins2ar2020_001 Name c epsLw epsSw k rho Thickness glass_001 860.0 0.82 0.65 1.1 2500.0 0.005 air_001 1005.0 0.0 0.0 0.026 1.18 0.014 glass_001 860.0 0.82 0.65 1.1 2500.0 0.005 Layer Information Table Layers for construction_001 Name c epsLw epsSw k rho Thickness material_001 900.0 0.85 0.85 0.045 2100.0 0.12 material_002 950.0 0.85 0.85 0.04 1950.0 0.08 material_003 920.0 0.85 0.85 0.038 2050.0 0.1 </p><p><p></p></p>"},{"location":"tutorials/two_zones/","title":"Two zones","text":"<p>The previous sections demonstrated how to run a simulation and generate a model, focusing on a simple one-zone free-float building. This tutorial will guide you through simulating a two-zone building. A similar modeling approach can be applied to more complex multi-zone buildings.</p>"},{"location":"tutorials/two_zones/#input-configuration-file","title":"Input configuration file","text":"<p>The described building configuration indicates a structure with two distinct spaces: a smaller room (SPACE:001) and a larger room (SPACE:002). Both spaces utilize walls constructed with a combination of three different materials that have moderate thermal properties. The building features external walls and floors that are also constructed from the same materials, indicating a cohesive thermal envelope.</p> <p>Windows in both spaces are specified with a dual-glazing system that includes a layer of gas (air) between two glass panes, enhancing insulation. The building has specific dimensions, with SPACE:001 having a floor area of 80 square meters and SPACE:002 a larger area of 120 square meters, suggesting it is designed for residential or light commercial use.</p> <p>Overall, the building appears to be energy-efficient, leveraging materials that provide decent thermal resistance and effective glazing to minimize heat loss while allowing natural light. The layout and materials suggest a practical design optimized for comfort and energy performance.</p> <pre><code>material:\n  - id: MATERIAL:001\n    thermal_conductivity: 0.045\n    density: 2100.0\n    specific_heat_capacity: 900.0\n  - id: MATERIAL:002\n    thermal_conductivity: 0.04\n    density: 1950.0\n    specific_heat_capacity: 950.0\n  - id: MATERIAL:003\n    thermal_conductivity: 0.038\n    density: 2050.0\n    specific_heat_capacity: 920.0\n\nconstructions:\n  - id: CONSTRUCTION:001\n    layers:\n      - material: MATERIAL:001\n        thickness: 0.12\n      - material: MATERIAL:002\n        thickness: 0.08\n      - material: MATERIAL:003\n        thickness: 0.1\n\nglass_material:\n  - density: 2500.0\n    id: GLASS:001\n    longwave_emissivity: 0.82\n    shortwave_emissivity: 0.65\n    specific_heat_capacity: 860.0\n    thermal_conductivity: 1.1\n\ngas:\n  - density: 1.18\n    id: AIR:001\n    longwave_emissivity: 0.0\n    shortwave_emissivity: 0.0\n    specific_heat_capacity: 1005.0\n    thermal_conductivity: 0.026\n\nglazings:\n  - id: INS2AR2020:001\n    layers:\n      - glass: GLASS:001\n        thickness: 0.005\n      - gas: AIR:001\n        thickness: 0.014\n      - glass: GLASS:001\n        thickness: 0.005\n\nspaces:\n  - parameters:\n      floor_area: 80.0  # Smaller room\n      average_room_height: 2.5\n    id: SPACE:001\n    external_boundaries:\n      external_walls:\n        - surface: 90.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 70.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 160.0\n          azimuth: 270.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 80.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 1.5\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 1.5\n          height: 1.0\n\n  - parameters:\n      floor_area: 120.0  # Larger room with different shape\n      average_room_height: 2.7\n    id: SPACE:002\n    external_boundaries:\n      external_walls:\n        - surface: 120.0\n          azimuth: 180.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 100.0\n          azimuth: 90.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n        - surface: 220.0\n          azimuth: 0.0\n          tilt: wall\n          construction: CONSTRUCTION:001\n      floor_on_grounds:\n        - surface: 120.0\n          construction: CONSTRUCTION:001\n      windows:\n        - surface: 2.0\n          azimuth: 180.0\n          tilt: wall\n          construction: INS2AR2020:001\n          width: 2.0\n          height: 1.2\n\ninternal_walls:\n  - space_1: SPACE:002\n    space_2: SPACE:001\n    construction: CONSTRUCTION:001\n    surface: 18.0\n</code></pre>"},{"location":"tutorials/two_zones/#code","title":"Code","text":"<p>This code snippet demonstrates how to simulate a two-zone building using Trano, which is similar to simulating a one-zone building. The primary difference is in the structure of the configuration file. Additionally, the library name \"buildings\" is utilized here.</p> <p>By default, Trano employs the Buildings library for simulation. In the next tutorial, we will explore how to use alternative libraries, including the IDEAS library.</p> Test tutorials<pre><code>    from trano.main import simulate_model\n    from trano.simulate.simulate import SimulationLibraryOptions\n\n    simulate_model(\n        \"./two_zones.yaml\",\n        SimulationLibraryOptions(\n            start_time=0,\n            end_time=2 * 3600 * 24 * 7,\n            tolerance=1e-4,\n            library_name=\"Buildings\",\n        ),\n    )\n</code></pre>"},{"location":"tutorials/two_zones/#code-snippet-explanation","title":"Code Snippet Explanation","text":"<p>The code imports necessary functions and classes to simulate a model defined in a YAML file using specified simulation options.</p>"},{"location":"tutorials/two_zones/#general-description-and-parameters","title":"General Description and Parameters","text":"<ul> <li> <p>Function: <code>simulate_model</code></p> </li> <li> <p>Parameters:</p> </li> <li> <p>YAML File Path: <code>\"./two_zones.yaml\"</code></p> <ul> <li>Path to the model configuration file in YAML format.</li> </ul> </li> <li> <p>SimulationLibraryOptions: An object containing simulation parameters.</p> <ul> <li>start_time: <code>0</code></li> <li> <p>Initial time for the simulation (in seconds).</p> </li> <li> <p>end_time: <code>2 * 3600 * 24 * 7</code></p> </li> <li> <p>Final time for the simulation, calculated as 2 weeks in seconds.</p> </li> <li> <p>tolerance: <code>1e-4</code></p> </li> <li> <p>Numerical tolerance for the simulation.</p> </li> <li> <p>library_name: <code>\"Buildings\"</code></p> </li> <li>Specifies the library used for the simulation, in this case, assumed to be related to building modeling.</li> </ul> </li> </ul>"},{"location":"tutorials/two_zones/#outputs","title":"Outputs","text":"<p>The report below is generated by Trano after simulating the two-zone building.</p> Spaces<p><p></p></p><p> External Boundaries Table hRoo AFlo linearizeRadiation m_flow_nominal mSenFac T_start volume 2.5 80.0 true 0.01 1.0 294.15 200.0 gain k occupancy name [40; 75; 40] 1/7/3 3600*{9, 17} occupancy_1 Name Azimuth Construction Name Surface Tilt externalwall_0 180.0 construction_001 90.0 wall externalwall_1 90.0 construction_001 70.0 wall externalwall_2 270.0 construction_001 160.0 wall window_0 180.0 ins2ar2020_001 1.5 wall flooronground_0 90.0 construction_001 80.0 floor internal_space_002_space_001_construction 10.0 construction_001 18.0 wall External Boundaries Table hRoo AFlo linearizeRadiation m_flow_nominal mSenFac T_start volume 2.7 120.0 true 0.01 1.0 294.15 324.0 gain k occupancy name [40; 75; 40] 1/7/3 3600*{9, 17} occupancy_2 Name Azimuth Construction Name Surface Tilt externalwall_3 180.0 construction_001 120.0 wall externalwall_4 90.0 construction_001 100.0 wall externalwall_5 0.0 construction_001 220.0 wall window_1 180.0 ins2ar2020_001 2.0 wall flooronground_1 90.0 construction_001 120.0 floor internal_space_002_space_001_construction 10.0 construction_001 18.0 wall <p><p></p></p>Construction<p><p></p></p><p> Layer Information Table Layers for ins2ar2020_001 Name c epsLw epsSw k rho Thickness glass_001 860.0 0.82 0.65 1.1 2500.0 0.005 air_001 1005.0 0.0 0.0 0.026 1.18 0.014 glass_001 860.0 0.82 0.65 1.1 2500.0 0.005 Layer Information Table Layers for construction_001 Name c epsLw epsSw k rho Thickness material_001 900.0 0.85 0.85 0.045 2100.0 0.12 material_002 950.0 0.85 0.85 0.04 1950.0 0.08 material_003 920.0 0.85 0.85 0.038 2050.0 0.1 </p><p><p></p></p>"}]}